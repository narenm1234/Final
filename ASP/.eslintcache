[{"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/index.js":"1","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/theme.js":"2","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/reportWebVitals.js":"3","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/App.js":"4","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/AppWithRouterAccess.js":"5","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Sidebar.js":"6","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/InventoryRequestsTabs.js":"7","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/Home.js":"8","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/AdminHome.js":"9","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/Grounded.js":"10","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending.js":"11","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ConditionReport.js":"12","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/VINSearch.js":"13","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending1.js":"14","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending2.js":"15","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Header/Header.js":"16","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/OktaHome.js":"17","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Login.js":"18","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Protected.js":"19","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/apiconfig.js":"20","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ConditionReportRequests.js":"21","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/ManualPricing.js":"22","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/RRMApproval.js":"23","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/AdminVehicleSearch.js":"24","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/NewSideBar.js":"25","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/VehicleInformation.js":"26","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Tabs.js":"27","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/MileageDisc.js":"28","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/NotesSection.js":"29","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundVehicleMFS.js":"30","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/groundedListPage.js":"31","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ViewDetailedReport.js":"32","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundVehiclePLV.js":"33","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ImageGallery.js":"34","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/AdminSearchHeader.js":"35","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Separator.js":"36","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/purchasedPage.js":"37","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/passedPage.js":"38","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Search/Search.js":"39","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/service/api.js":"40","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SearchText/Search.js":"41","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/OktaSignInWidget.js":"42","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/ManualPricingSideBar.js":"43","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilterMileage.js":"44","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilterRRM.js":"45","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/StatusHistory.js":"46","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/PassOnVehicle.js":"47","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Stepper/VerticalStepper.js":"48","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/Carousel.js":"49","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/AdminDetailedReport.js":"50","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/CustomisedInput.js":"51","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilter.js":"52"},{"size":643,"mtime":1628785772706,"results":"53","hashOfConfig":"54"},{"size":312,"mtime":1628785772721,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":1628785772717,"results":"56","hashOfConfig":"54"},{"size":2225,"mtime":1628800861450,"results":"57","hashOfConfig":"54"},{"size":5699,"mtime":1628800605297,"results":"58","hashOfConfig":"54"},{"size":2151,"mtime":1628785772701,"results":"59","hashOfConfig":"54"},{"size":3081,"mtime":1628799666000,"results":"60","hashOfConfig":"54"},{"size":475,"mtime":1628785772715,"results":"61","hashOfConfig":"54"},{"size":1366,"mtime":1628785772707,"results":"62","hashOfConfig":"54"},{"size":657,"mtime":1628785772715,"results":"63","hashOfConfig":"54"},{"size":231,"mtime":1628785772711,"results":"64","hashOfConfig":"54"},{"size":31605,"mtime":1628785772709,"results":"65","hashOfConfig":"54"},{"size":7772,"mtime":1628785772713,"results":"66","hashOfConfig":"54"},{"size":216,"mtime":1628785772711,"results":"67","hashOfConfig":"54"},{"size":219,"mtime":1628785772712,"results":"68","hashOfConfig":"54"},{"size":973,"mtime":1628785772694,"results":"69","hashOfConfig":"54"},{"size":761,"mtime":1628785772471,"results":"70","hashOfConfig":"54"},{"size":805,"mtime":1628785772695,"results":"71","hashOfConfig":"54"},{"size":97,"mtime":1628785772698,"results":"72","hashOfConfig":"54"},{"size":2563,"mtime":1628785772472,"results":"73","hashOfConfig":"54"},{"size":31566,"mtime":1628799927000,"results":"74","hashOfConfig":"54"},{"size":7063,"mtime":1628800632054,"results":"75","hashOfConfig":"54"},{"size":6697,"mtime":1628799853000,"results":"76","hashOfConfig":"54"},{"size":1223,"mtime":1628785772693,"results":"77","hashOfConfig":"54"},{"size":3964,"mtime":1628785772697,"results":"78","hashOfConfig":"54"},{"size":7440,"mtime":1628785772705,"results":"79","hashOfConfig":"54"},{"size":2540,"mtime":1628785772705,"results":"80","hashOfConfig":"54"},{"size":5994,"mtime":1628799691000,"results":"81","hashOfConfig":"54"},{"size":2214,"mtime":1628785772697,"results":"82","hashOfConfig":"54"},{"size":305,"mtime":1628785772712,"results":"83","hashOfConfig":"54"},{"size":11762,"mtime":1628801778467,"results":"84","hashOfConfig":"54"},{"size":14806,"mtime":1628785772717,"results":"85","hashOfConfig":"54"},{"size":289,"mtime":1628785772713,"results":"86","hashOfConfig":"54"},{"size":942,"mtime":1628785772716,"results":"87","hashOfConfig":"54"},{"size":1652,"mtime":1628785772692,"results":"88","hashOfConfig":"54"},{"size":247,"mtime":1628785772701,"results":"89","hashOfConfig":"54"},{"size":6816,"mtime":1628785772714,"results":"90","hashOfConfig":"54"},{"size":5030,"mtime":1628785772714,"results":"91","hashOfConfig":"54"},{"size":1114,"mtime":1628785772699,"results":"92","hashOfConfig":"54"},{"size":10832,"mtime":1628801886704,"results":"93","hashOfConfig":"54"},{"size":1251,"mtime":1628785772700,"results":"94","hashOfConfig":"54"},{"size":659,"mtime":1628785772697,"results":"95","hashOfConfig":"54"},{"size":5521,"mtime":1628785772696,"results":"96","hashOfConfig":"54"},{"size":14724,"mtime":1628785772704,"results":"97","hashOfConfig":"54"},{"size":14720,"mtime":1628785772704,"results":"98","hashOfConfig":"54"},{"size":3068,"mtime":1628785772702,"results":"99","hashOfConfig":"54"},{"size":3165,"mtime":1628802046168,"results":"100","hashOfConfig":"54"},{"size":2028,"mtime":1628785772703,"results":"101","hashOfConfig":"54"},{"size":2399,"mtime":1628785772711,"results":"102","hashOfConfig":"54"},{"size":7842,"mtime":1628785772707,"results":"103","hashOfConfig":"54"},{"size":1653,"mtime":1628785772693,"results":"104","hashOfConfig":"54"},{"size":12446,"mtime":1628785772704,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"klotpc",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"108"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"108"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"108"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"108"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"244","usedDeprecatedRules":"108"},"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/index.js",[],["245","246"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/theme.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/reportWebVitals.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/App.js",["247","248","249","250"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/AppWithRouterAccess.js",["251","252","253","254"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Sidebar.js",["255","256"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons/lib';\nimport \"./SideBar.scss\"\nimport { MdClose } from \"react-icons/md\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport NewSidebar from './NewSideBar';\n\nconst Nav = styled.div`\n  background: #f1f1f1;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst NavIcon = styled(Link)`\n  margin-left: 2rem;\n  font-size: 2rem;\n  height: 80px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst SidebarNav = styled.nav`\n  background: #ffffff;\n  width: 232px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 51px;\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\n  transition: 350ms;\n  z-index: 10;\n  box-shadow: 1px 0 3px 0 rgba(0, 0, 0, 0.25);\n  background-color: #ffffff;\n`;\nconst SidebarNavHide = styled.nav`\n  background: #ffffff;\n  width: 48px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 51px;\n  left: ${({ sidebar }) => (!sidebar ? '20' : '-100%')};\n  transition: 350ms;\n  z-index: 10;\n  box-shadow: 1px 0 3px 0 rgba(0, 0, 0, 0.25);\n  background-color: #ffffff;\n`;\n\nconst SidebarWrap = styled.div`\n  width: 100%;\n`;\n\nconst Sidebar = () => {\n  const [sidebar, setSidebar] = useState(true);\n\n  const showSidebar = () => setSidebar(true);\n  const hideSidebar = () => setSidebar(false);\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#000000' }}>\n        <SidebarNav sidebar={sidebar}>\n\n          <SidebarWrap>\n            <div className='mainMenu'>Main Menu\n              <div className=\"closeIcon\" onClick={hideSidebar} style={{ marginLeft: \"35%\" }}><MdClose />\n              </div>\n            </div>\n            <NewSidebar />\n          </SidebarWrap>\n        </SidebarNav>\n        <SidebarNavHide sidebar={sidebar}>\n          <div className=\"-Background-Color\" onClick={showSidebar}> <BsChevronRight /></div>\n        </SidebarNavHide>\n      </IconContext.Provider>\n    </>\n  );\n};\n\nexport default Sidebar;","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/InventoryRequestsTabs.js",["257","258","259"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ManualPricing from './ManualPricing';\nimport RRMApproval from './RRMApproval';\nimport MileageDisc from './MileageDisc'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function InventoryRequestsTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n    useEffect(() => {\n        if (props.location.state && props.location.state.pageName === 'RRMApproval') {\n            setValue(1)\n        } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\n            setValue(0)\n        }\n        else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\n            setValue(2)\n        }\n    }, [props.location.state && props.location.state.pageName]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <AppBar position=\"fixed\" className='topBarAdmin'>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\n                    <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\n                    <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\n                    <Tab label=\"No Inspections\" {...a11yProps(3)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <ManualPricing props={props} />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <div className='adminTabsSection'><RRMApproval props={props} /></div>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <div className='adminTabsSection'><MileageDisc props={props} /></div>\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <div className='adminTabsSection'><h2>No Inspections</h2></div>\n            </TabPanel>\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/Home.js",["260","261"],"import React from 'react';\nimport Search from '../components/Search/Search';\nimport VehicleInformation from '../components/VehicleInformation';\n\n\nlet styles = {\n  homesearch: {\n    'width': '371px',\n    'height': '32px',\n    'margin': '3px 0 0',\n    'padding': '7px 9px 8px 12px',\n    'border-radius': '4px',\n    'border': 'solid 1px #dddbda',\n    'background-color': '#ffffff'\n\n  },\n}\nconst Home = () => {\n  return (\n    <VehicleInformation />\n  );\n};\n\nexport default Home;\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/AdminHome.js",["262","263","264","265"],"import React,{useState,useEffect} from 'react';\nimport AdminVehicleSearch from '../components/AdminVehicleSearch';\nimport Grid from '@material-ui/core/Grid';\nimport VehicleSearchTabs from '../components/Tabs';\nimport NotesSection from '../components/NotesSection';\nimport {getInspectionVehicleDetails} from '../service/api';\n\n\nconst AdminHome = () => {\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [isSubmit,setisSubmit] = useState(false);\n  const [inspectiondata,setinspectiondata]=useState([])\n\n  console.log(\"inspectiondata\",inspectiondata)\n\n\n  useEffect(() => {\n    getConditionVehicleDetails()\n  }, [searchText.length==15])\n\n  async function getConditionVehicleDetails() {\n    let apiResponse = await getInspectionVehicleDetails(\"JM3KFBDM0K1698372\");\n    console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\n    setinspectiondata(apiResponse.data)\n}\n\n  const handleSubmitbtn = () =>{\n    setisSubmit(true);\n  }\n  const handleSearch = (text) => {\n    console.log(\"home\",text)\n    setSearchText(text)\n  }\n\n  return (\n    (searchText.length==15) ? (<Grid container><Grid xs={10}><VehicleSearchTabs inspectiondata={inspectiondata} /></Grid><Grid xs={2}><NotesSection /></Grid></Grid>) : (<AdminVehicleSearch fromchildhandleSubmitbtn={handleSubmitbtn} searchdetails={(text) => handleSearch(text)} />)\n  );\n};\n\nexport default AdminHome;\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/Grounded.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending.js",["266"],"import React, { useState } from 'react';\nimport ListingPage from './groundedListPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage {...props}></ListingPage>\n    </div>\n  );\n};\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ConditionReport.js",["267","268","269","270","271","272","273","274","275","276"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ViewDetailedReport from './ViewDetailedReport';\nimport MyGallery from './ImageGallery';\nimport CloudDownloadOutlined from '@material-ui/icons/CloudDownloadOutlined'\nimport PrintSharp from '@material-ui/icons/PrintSharp'\nimport Button from '@material-ui/core/Button';\nimport { getPassedList1, getInspectionDamageDetailsApi,getOEMBuildDetailsApi} from '../service/api';\nimport { getInspectionVehicleDetails, getInspectionAccessoryDetails, getInspectionWheelTiresDetails } from '../service/api';\nimport moment from 'moment';\n\nexport default function ConditionReport(props) {\n    let listOfItem = ['VIN', 'Engine', 'Door', 'Body Style', 'Transmission', 'Drive Train', 'Interior type', 'Interior Color', 'Keys', 'Interior Type', 'Odor',  'Grounding Mileage', 'Account Type'];\n    let wheelTyrelistOfItem = ['LF', 'RF', 'LR', 'RR', 'SP', 'RR']\n    const [open, setOpen] = React.useState(false)\n    const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({})\n    const [accessoryDetails, setAccessoryDetails] = React.useState({})\n    const [wheelTiresDetails, setWheelTiresDetails] =useState([])\n    const [vin, setVin] = React.useState(props?.match?.params?.vin)\n    const [inspectionId, setInspectionId] = React.useState([])\n    const [VehicleResponse, setVehicleResponse] = useState([])\n    const [value, setValue] = useState([])\n    const [DamageDetails, setDamageDetails] = useState([])\n    const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\n    \n\n\n\n    console.log(\"condionVehicleDetails:\",condionVehicleDetails)\n\n    useEffect(()=>{\n        getOEMBuildDetails()\n    },[vin])\n\n    async function getOEMBuildDetails(){\n        let apiResponse = await getOEMBuildDetailsApi(vin)\n        setOEMBuildDetailsData(apiResponse.data)\n    }\n\n\n    useEffect(()=>{\n\n        getInspectionDamageDetails()\n\n    },[]);\n\n    async function getInspectionDamageDetails(){\n        let getInspectionDamageDetailsaApiResponse = await getInspectionDamageDetailsApi(inspectionId,vin);\n        setDamageDetails(getInspectionDamageDetailsaApiResponse.data)\n\n    }\n\n    useEffect(() => {\n\n\n        getVehicleDetails()\n    }, []);\n    async function getVehicleDetails() {\n        let apiResponse = await getPassedList1();\n        setVehicleResponse(apiResponse.data.data);\n        console.log(VehicleResponse.data)\n    }\n    // console.log(\"vin\", vin)\n    useEffect(() => {\n        getConditionVehicleDetails()\n    }, [vin]);\n\n    useEffect(() => {\n        getInspectionAccessory(inspectionId)\n        getInspectionWheelTires(inspectionId)\n    }, [inspectionId]);\n\n    async function getConditionVehicleDetails() {\n        let apiResponse = await getInspectionVehicleDetails(vin);\n        console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\n        setCondionVehicleDetails(apiResponse.data);\n        setInspectionId(apiResponse.data.inspection_id)\n    }\n\n    async function getInspectionAccessory(inspectionId) {\n        let apiResponse = await getInspectionAccessoryDetails(inspectionId);\n        setAccessoryDetails(apiResponse.data);\n    }\n\n    async function getInspectionWheelTires(inspectionId) {\n        let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\n        console.log(\"wheelTiresDetailsapires\",apiResponse)\n        setWheelTiresDetails(apiResponse.data);\n    }\n\n    const handleOpen = () => {\n        setOpen(!open)\n    }\n    const handleClose = () => {\n        setOpen(!open)\n    }\n    return (\n        <div className='conditionPageCard'>\n            <Grid item xs={12}>\n                <div className='conditionTopBar'>\n                    <Grid xs={12} className='conditionTopBarLayout'>\n                        <CloudDownloadOutlined /><span className=\"conditionTopBarStyles\">Download Report</span>\n                        <PrintSharp /><span className=\"conditionTopBarStyles\">Print Report</span>\n                    </Grid>\n                </div>\n            </Grid>\n            <Grid container spacing={3} className=\"ConditionCardReportSpace\">\n                <Grid item xs={5}>\n                    <MyGallery />\n                    <Grid container className=\"ConditionCardBody\">\n                        <div className='damageTitle'>\n                            <span>Damage Report</span>\n                        </div>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Exterior total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                      {'$'}{DamageDetails.exteriorCost?DamageDetails.exteriorCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Interior total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                    {'$'}{DamageDetails.interiorCost?DamageDetails.interiorCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Mechanical total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                    {'$'}{DamageDetails.maintainenceCost?DamageDetails.maintainenceCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} >\n                            <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\n                                View Full Detailed Report\n                            </Button>\n                        </Grid>\n                        <Grid item xs={12} >\n                            <div className=\"disclaimer\">\n                                Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <div className=\"LabelTextTextArea\">Announcements</div>\n                    <TextareaAutosize\n                        className=\"inputFieldTextArea\"\n                        aria-label=\"maximum height\"\n                        placeholder=\"Maximum 4 rows\"\n                        defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\n                    />\n                </Grid>\n                <Grid item xs={7}>\n                    <div className='ConditionReportSection'>\n                        <div className='reportTitle'>\n                            <span>MAZDA SD 2019 </span>\n                        </div>\n                        <span className='ConditionReportInspection'>\n                            <span className='BadgeValue'>Inspection Complete</span>\n                        </span>\n                    </div>\n                    <Grid container spacing={3}>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Payoff\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $12,000.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\" >\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle1\">\n                                        Residual + Remaining\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $11,250.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Market Based\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $10,500.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Inspection Grade\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                    {condionVehicleDetails.condition_grade}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Odometer\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                    {condionVehicleDetails.inspection_mileage}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Card className=\"vehicleSectionCR\">\n                            <Typography variant=\"h6\">Vehicle Details</Typography>\n                            <hr />\n                            <CardContent>\n\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  VIN  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{vin}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Inspection Date  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {moment(condionVehicleDetails.inspection_date).format('MM/DD/YYYY')}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Inspection Location  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {condionVehicleDetails.location_address}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span >\n                                                .\n                                            </span>\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span > .   </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Consignor  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Engine  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Door  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Body Style  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Transmission  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Drive Train  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Exterior color  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Interior Type  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Interior color  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Keys  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Grounding Mileage  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">9,000 miles</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Account Type  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\"></span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Odor  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\"></span>\n                                    </ListItemSecondaryAction>\n                                </List>\n\n\n                            </CardContent>\n\n                            <CardContent>\n                                <Typography variant=\"h6\">Accessories</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        {/*  <TableHead>\n                                            <TableRow>\n                                                <TableCell>Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                            </TableRow>\n                                       </TableHead>*/}\n                                        <TableBody>\n                                            {/* {['Item Name', 'Item Name', 'Item Name', 'Item Name'].map(list => {\n                                                return ( */}\n                                                    <TableRow key=\"10074\">\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {accessoryDetails.item_id}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\n                                                        {/* <TableCell align=\"right\">y</TableCell>\n                                                        <TableCell align=\"right\">z</TableCell> */}\n                                                    </TableRow>\n                                                {/* )\n                                            })\n                                            } */}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </CardContent>\n                            <CardContent>\n                                <Typography variant=\"h6\">Wheels and Tyres</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Location</TableCell>\n                                                <TableCell align=\"right\">Brand</TableCell>\n                                                <TableCell align=\"right\">Size</TableCell>\n                                                <TableCell align=\"right\">Wheel</TableCell>\n                                                <TableCell align=\"right\">Tread Depth</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {wheelTiresDetails?.map(list => {\n                                                return (\n                                                    <TableRow key={list}> \n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {wheelTiresDetails?.tire_location}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{list.tire_location}</TableCell>\n                                                        <TableCell align=\"right\">{list.manufracturer}</TableCell>\n                                                        <TableCell align=\"right\">{list.size}</TableCell>\n                                                        <TableCell align=\"right\">{list.tread}</TableCell>\n                                                        <TableCell align=\"right\">{list.tread}</TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                            } \n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </CardContent>\n                            <CardContent>\n                                <Typography variant=\"h6\">Build Data</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Code</TableCell>\n                                                <TableCell align=\"right\">Description</TableCell>\n                                                <TableCell align=\"right\">Package Details</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {['1'].map(list => {\n                                                return (\n                                                    <TableRow key={list}>\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {list}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\"></TableCell>\n                                                        <TableCell align=\"right\"> </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            </CardContent>\n                            <div className=\"disclaimerVRS\">\n                                Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\n                            </div>\n                        </Card>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n            <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\n        </div>\n    );\n};","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/VINSearch.js",["277","278","279","280","281"],"import React, { useState, useEffect } from 'react';\nimport Search from '../../components/SearchText/Search'\nimport TextField from '@material-ui/core/TextField';\nimport { InputLabel } from '@material-ui/core';\nimport GroundVehicleMFS from './GroundVehicleMFS';\nimport GroundVehiclePLV from './GroundVehiclePLV';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getAuthToken, getVehicleDetails } from '../../service/api';\nexport default function VINSearch(props) {\n  const placeholder = 'Enter last 6 digits of VIN';\n  const [token, setToken] = useState('')\n  const [vehicleResponse, setVehicleResponse] = useState({})\n  const [validSearch, setValidSearch] = useState(false);\n  const [reasonForReturn, setreasonForReturn] = useState('Ground_Vehicle_for_MFS');\n  const [suggestions, setSuggestions] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  let searchSuggestions = ['12345678901234567', '12345678901234566', '12345678901234568', '12345678901234569', '12345678901234560'];\n\n  useEffect(() => {\n    let tokenResponse = getAuthToken()\n    setToken(tokenResponse.data?.access_token)\n  })\n  async function getVehDetails(value) {\n    let apiResponse = await getVehicleDetails(token, value)\n    setVehicleResponse(apiResponse.data);\n    if(apiResponse.data.vehicleInfo?.length > 0){\n\n      setValidSearch(true);\n      setSuggestions(false);\n    }\n    else {\n      setValidSearch(false);\n      setSuggestions(true);\n    }\n\n  }\n\n  const showResults = (e) => {\n    setSearchValue(e?.target?.value);\n   \n    let value = e?.target?.value;\n    console.log(value)\n    getVehDetails(value)\n\n      \n      \n    searchSuggestions = searchSuggestions.filter(val => {\n      return val.startsWith(value);\n    });\n    if (value?.length == 0 || !searchSuggestions || searchSuggestions?.length == 0 || searchValue?.length == 0) {\n      setValidSearch(false);\n      setSuggestions(false);\n    }\n    else if (searchSuggestions.length > 1) {\n      setValidSearch(false);\n      setSuggestions(true);\n    } else {\n     \n      setValidSearch(true);\n      setSuggestions(false);\n    }\n  }\n\n  const setSearchData = (i) => {\n    setSearchValue(searchSuggestions[i]);\n    setValidSearch(false);\n    setSuggestions(false);\n  }\n  const handleReasonChange = (e) => {\n    console.log(e.target.value)\n    setreasonForReturn(e.target.value)\n  }\n\n  return (\n    <div className='form'>\n      <div class=\"grounding\">\n        <div class=\"searchLabelHeader\">Vehicle Grounding</div>\n        <div class=\"searchLabel\">Begin Vehicle Lease return process</div>\n        <Search showSearchRight={true} searchCompleted={validSearch} placeholder={placeholder} editSearchTerm={showResults} searchValue={searchValue}></Search>\n        {!validSearch && suggestions && <div class=\"noMatchesFrame\" >\n          <div class=\"noMatches\">VIN not found/Inactive</div>\n        </div>}\n\n        {validSearch && <div><div class=\"carRecordFound\">\n          <div class=\"vehicleMakeModel\">\n            <span>{vehicleResponse?.vehicleInfo[0]?.brand}{\" & \"}</span>\n            <span>{\"  \"}{vehicleResponse?.vehicleInfo[0]?.model}{\" | \"} </span>\n            <span>{\"  \"}{vehicleResponse?.vehicleInfo[0]?.ext_color} </span>\n             </div>\n\n        </div>\n          <div class=\"customerReturnStyle\">\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Customer Return date</InputLabel>\n            <TextField\n              id=\"date\"\n              type=\"date\"\n              defaultValue=\"00/00/0000\"\n              className=\"customerReturnDate\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div class=\"customerReturnStyle\">\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Reason for Return</InputLabel>\n            <Select\n              name=\"Reason for Return\"\n              value={reasonForReturn}\n              variant=\"outlined\"\n              inputProps={{ 'aria-label': 'age' }}\n              className=\"customerReturnDate\"\n              onChange={(event) => handleReasonChange(event)}\n            >\n              <MenuItem value={\"Purchase_Leased_Vehicle\"}>Purchase Leased Vehicle</MenuItem>\n              <MenuItem value={\"Ground_Vehicle_for_MFS\"}>Ground Vehicle for MFS</MenuItem>\n              <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\n            </Select>\n          </div>\n          {\n            reasonForReturn === 'Ground_Vehicle_for_MFS' && (<> <GroundVehicleMFS />\n              <div className=\"odometerBox\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Odometer Reading</InputLabel>\n                <TextField id=\"standard-basic\" placeholder=\"Enter odometer reading\" variant=\"outlined\" className=\"odometer\" />\n                <TextField id=\"standard-basic\" placeholder=\"Renter odometer reading\" variant=\"outlined\" className=\"odometer\" />\n              </div> <div class=\"customerReturnStyle\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Do you have a signed odometer statement?</InputLabel>\n                <Select\n                  name=\"age\"\n                  value={1}\n                  variant=\"outlined\"\n                  inputProps={{ 'aria-label': 'age' }}\n                  className=\"customerReturnDate\"\n                >\n                  <MenuItem value={1}>Select Yes or No</MenuItem>\n                  <MenuItem value={10}>Yes</MenuItem>\n                  <MenuItem value={20}>No</MenuItem>\n                </Select>\n              </div>\n              <div className=\"keysReturnedBox\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Number of Keys Returned</InputLabel>\n                <TextField id=\"standard-basic\" placeholder=\"Master Keys Returned\" variant=\"outlined\" className=\"keysReturned\" />\n                <TextField id=\"standard-basic\" placeholder=\"Valet Keys Returned\" variant=\"outlined\" className=\"keysReturned\" />\n              </div>\n              <div className=\"vehicleCondition\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Vehicle Condition</InputLabel>\n                <div\n                  className=\"Rectangle-3\">\n                  <FormControlLabel control={<Radio />} label=\"Drivable\" /></div>\n                <div className=\"Rectangle-3\"> <FormControlLabel control={<Radio />} label=\"Not Drivable\" /></div>\n              </div>\n              <div className=\"pickUpLocation\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Pick Up Location</InputLabel>\n                <div\n                  className=\"pickUpLocationBox\">\n                  <FormControlLabel control={<Radio />} label=\"Location Name 1\" /></div>\n\n                <div\n                  className=\"pickUpLocationBox\">\n                  <FormControlLabel control={<Radio />} label=\"Location Name 2\" /></div>\n\n              </div> </>)\n          }\n\n          {\n            (reasonForReturn === 'Purchase_Leased_Vehicle' || reasonForReturn === 'Trade_In') && (<><GroundVehiclePLV />\n              <div class=\"customerReturnStyle\">\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Do you have a signed odometer statement?</InputLabel>\n                <Select\n                  name=\"age\"\n                  value={1}\n                  variant=\"outlined\"\n                  inputProps={{ 'aria-label': 'age' }}\n                  className=\"customerReturnDate\"\n                >\n                  <MenuItem value={1}>Select Yes or No</MenuItem>\n                  <MenuItem value={10}>Yes</MenuItem>\n                  <MenuItem value={20}>No</MenuItem>\n                </Select>\n              </div></>)\n          }\n\n\n        </div>}\n\n\n\n\n      </div>\n    </div>\n  );\n};\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending1.js",["282"],"import React, { useState } from 'react';\nimport ListingPage1 from './passedPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage1></ListingPage1>\n    </div>\n  );\n};","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundPending2.js",["283"],"import React, { useState } from 'react';\nimport ListingPage2 from './purchasedPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage2></ListingPage2>\n    </div>\n  );\n};","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Header/Header.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/OktaHome.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Login.js",["284","285","286"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Protected.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/apiconfig.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ConditionReportRequests.js",["287","288","289","290","291","292","293","294","295","296","297"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ViewDetailedReport from './ViewDetailedReport';\nimport MyGallery from './ImageGallery';\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport { getPassedList1, getInspectionDamageDetailsApi,getOEMBuildDetailsApi} from '../service/api';\nimport { getInspectionVehicleDetails, getInspectionAccessoryDetails, getInspectionWheelTiresDetails } from '../service/api'\nimport ManualPricingSideBar from '../components/ManualPricingSideBar';\nexport default function ConditionReportRequests(props) {\n    let listOfItem = ['VIN', 'Engine', 'Door', 'Body Style', 'Transmission', 'Drive Train', 'Interior type', 'Interior Color', 'Keys', 'Interior Type', 'Odor', 'Grounding Mileage', 'Account Type'];\n    let wheelTyrelistOfItem = ['LF', 'RF', 'LR', 'RR', 'SP', 'RR']\n    const [open, setOpen] = React.useState(false)\n    const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({})\n    const [accessoryDetails, setAccessoryDetails] = React.useState({})\n    const [wheelTiresDetails, setWheelTiresDetails] =useState([])\n    const [vin, setVin] = React.useState(props?.match?.params?.vin)\nconst [pageName, setPageName] = React.useState(props?.location?.state?.pageName)\n    const [inspectionId, setInspectionId] = React.useState([])\n    const [VehicleResponse, setVehicleResponse] = useState([])\n    const [value, setValue] = useState([])\n    const [DamageDetails, setDamageDetails] = useState([])\n    const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\n\n\n    console.log(\"vin:\",vin)\n\n    useEffect(()=>{\n        getOEMBuildDetails()\n    },[vin])\n\n    async function getOEMBuildDetails(){\n        let apiResponse = await getOEMBuildDetailsApi(vin)\n        setOEMBuildDetailsData(apiResponse.data)\n    }\n\n\n    useEffect(()=>{\n\n        getInspectionDamageDetails()\n\n    },[]);\n\n    async function getInspectionDamageDetails(){\n        let getInspectionDamageDetailsaApiResponse = await getInspectionDamageDetailsApi(inspectionId,vin);\n        setDamageDetails(getInspectionDamageDetailsaApiResponse.data)\n\n    }\n\n    useEffect(() => {\n\n\n        getVehicleDetails()\n    }, []);\n    async function getVehicleDetails() {\n        let apiResponse = await getPassedList1();\n        setVehicleResponse(apiResponse.data.data);\n        console.log(VehicleResponse.data)\n    }\n    // console.log(\"vin\", vin)\n    useEffect(() => {\n        getConditionVehicleDetails()\n    }, [vin]);\n\n    useEffect(() => {\n        getInspectionAccessory(inspectionId)\n        getInspectionWheelTires(inspectionId)\n    }, [inspectionId]);\n\n    async function getConditionVehicleDetails() {\n        let apiResponse = await getInspectionVehicleDetails(vin);\n        console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\n        setCondionVehicleDetails(apiResponse.data);\n        setInspectionId(apiResponse.data.inspection_id)\n    }\n\n    async function getInspectionAccessory(inspectionId) {\n        let apiResponse = await getInspectionAccessoryDetails(inspectionId);\n        setAccessoryDetails(apiResponse.data);\n    }\n\n    async function getInspectionWheelTires(inspectionId) {\n        let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\n        console.log(\"wheelTiresDetailsapires\",apiResponse)\n        setWheelTiresDetails(apiResponse.data);\n    }\n\n    const handleOpen = () => {\n        setOpen(!open)\n    }\n    const handleClose = () => {\n        setOpen(!open)\n    }\n    return (\n        <>\n            <div className='conditionPageCardReports'>\n                <Grid item xs={12}>\n                    <div className='conditionTopBar'>\n                        <Grid xs={12} className='conditionTopBarLayout'>\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\n                        </Grid>\n                    </div>\n                </Grid>\n            <Grid container spacing={3} className=\"ConditionCardReportSpace\">\n                <Grid item xs={5}>\n                    <MyGallery />\n                    <Grid container className=\"ConditionCardBody\">\n                        <div className='damageTitle'>\n                            <span>Damage Report</span>\n                        </div>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Exterior total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                       {DamageDetails.exteriorCost?DamageDetails.exteriorCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Interior total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                    {DamageDetails.interiorCost?DamageDetails.interiorCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={4} >\n                            <Card className=\"ConditionCardDamage\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Mechanical total\n                                    </div>\n                                    <div className=\"smallCardBody warningColor\">\n                                    {DamageDetails.maintainenceCost?DamageDetails.maintainenceCost:'NA'}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} >\n                            <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\n                                View Full Detailed Report\n                            </Button>\n                        </Grid>\n                        <Grid item xs={12} >\n                            <div className=\"disclaimer\">\n                                Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <div className=\"LabelTextTextArea\">Announcements</div>\n                    <TextareaAutosize\n                        className=\"inputFieldTextArea\"\n                        aria-label=\"maximum height\"\n                        placeholder=\"Maximum 4 rows\"\n                        defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\n                    />\n                </Grid>\n                <Grid item xs={7}>\n                    <div className='ConditionReportSection'>\n                        <div className='reportTitle'>\n                            <span>MAZDA SD 2019 </span>\n                        </div>\n                        <span className='ConditionReportInspection'>\n                            <span className='BadgeValue'>Inspection Complete</span>\n                        </span>\n                    </div>\n                    <Grid container spacing={3}>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Payoff\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $12,000.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\" >\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle1\">\n                                        Residual + Remaining\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $11,250.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Market Based\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                        $10,500.00\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Inspection Grade\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                    {condionVehicleDetails.condition_grade}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={3} className=\"ConditionCardMargin\">\n                            <Card className=\"ConditionCard\" >\n                                <CardContent>\n                                    <div className=\"smallCardTitle\">\n                                        Odometer\n                                    </div>\n                                    <div className=\"smallCardBody\">\n                                    {condionVehicleDetails.inspection_mileage}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Card className=\"vehicleSectionCR\">\n                            <Typography variant=\"h6\">Vehicle Details</Typography>\n                            <hr />\n                            <CardContent>\n\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  VIN  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{vin}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Inspection Date  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {condionVehicleDetails.inspection_date}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Inspection Location  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {condionVehicleDetails.location_address}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span >\n                                                .\n                                            </span>\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">\n                                        {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\n                                        </span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span > .   </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Consignor  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Engine  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Door  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Body Style  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Transmission  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Drive Train  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Exterior color  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Interior Type  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Interior color  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Keys  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Grounding Mileage  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\">9,000 miles</span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Account Type  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\"></span>\n                                    </ListItemSecondaryAction>\n                                </List>\n                                <List className=\"paddingCSS\">\n                                    <ListItemText>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Odor  </span>\n\n                                        </span>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        <span className=\"textSize\"></span>\n                                    </ListItemSecondaryAction>\n                                </List>\n\n\n                            </CardContent>\n\n                            <CardContent>\n                                <Typography variant=\"h6\">Accessories</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        {/*  <TableHead>\n                                            <TableRow>\n                                                <TableCell>Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                                <TableCell align=\"right\">Item Name</TableCell>\n                                            </TableRow>\n                                       </TableHead>*/}\n                                        <TableBody>\n                                            {/* {['Item Name', 'Item Name', 'Item Name', 'Item Name'].map(list => {\n                                                return ( */}\n                                                    <TableRow key=\"10074\">\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {accessoryDetails.item_id}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\n                                                        {/* <TableCell align=\"right\">y</TableCell>\n                                                        <TableCell align=\"right\">z</TableCell> */}\n                                                    </TableRow>\n                                                {/* )\n                                            })\n                                            } */}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </CardContent>\n                            <CardContent>\n                                <Typography variant=\"h6\">Wheels and Tyres</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Location</TableCell>\n                                                <TableCell align=\"right\">Brand</TableCell>\n                                                <TableCell align=\"right\">Size</TableCell>\n                                                <TableCell align=\"right\">Wheel</TableCell>\n                                                <TableCell align=\"right\">Tread Depth</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {wheelTiresDetails?.map(list => {\n                                                return (\n                                                    <TableRow key={list}> \n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {wheelTiresDetails?.tire_location}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\">{list.tire_location}</TableCell>\n                                                        <TableCell align=\"right\">{list.manufracturer}</TableCell>\n                                                        <TableCell align=\"right\">{list.size}</TableCell>\n                                                        <TableCell align=\"right\">{list.tread}</TableCell>\n                                                        <TableCell align=\"right\">{list.tread}</TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                            } \n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </CardContent>\n                            <CardContent>\n                                <Typography variant=\"h6\">Build Data</Typography>\n                                <hr />\n                                <TableContainer component={Paper}>\n                                    <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Code</TableCell>\n                                                <TableCell align=\"right\">Description</TableCell>\n                                                <TableCell align=\"right\">Package Details</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {['1'].map(list => {\n                                                return (\n                                                    <TableRow key={list}>\n                                                        <TableCell component=\"th\" scope=\"row\">\n                                                            {list}\n                                                        </TableCell>\n                                                        <TableCell align=\"right\"></TableCell>\n                                                        <TableCell align=\"right\"> </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })\n                                            }\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n\n                            </CardContent>\n                            <div className=\"disclaimerVRS\">\n                                Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\n                            </div>\n                        </Card>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n            <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\n        </div>\n        <ManualPricingSideBar />\n        </>\n    );\n};","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/ManualPricing.js",["298","299","300","301","302"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport SwipableFilter from './SwipableFilter';\nimport ManualPricingSideBar from './ManualPricingSideBar';\nconst useStyles = makeStyles({\n  table: {\n    width: 950,\n  },\n  manualStyles: {\n    position: 'absolute',\n    top: \"175px\",\n    left: \"320px\",\n    margin: '20px 0',\n    width: 950,\n  },\n  filterStyles: {\n    position: 'absolute',\n    top: \"90\",\n    left: \"320px\",\n    margin: '20px',\n    width: 950,\n  },\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n  },\n});\n\nfunction createVehicleData(VIN, Year, Make, Model_Trim, Grounding_Region, Inspection_Date, Inspection_Status, Action_Code) {\n  return { VIN, Year, Make, Model_Trim, Grounding_Region, Inspection_Date, Inspection_Status, Action_Code };\n}\n\nconst rows = [\n  createVehicleData(\"0704303398645911\", \"2015\", \"Audi\", \"A1\", \"Florida\", \"01/23/2015\", \"Pending\", \"XYZ\"),\n  createVehicleData(\"6672920469419405\", \"2016\", \"BMW\", \"B1\", \"Indiana\", \"04/26/2016\", \"Pending\", \"XYZ\"),\n  createVehicleData(\"7660443910307535\", \"2017\", \"Benz\", \"C1\", \"Texas\", \"08/13/2017\", \"Pending\", \"XYZ\"),\n  createVehicleData(\"2769586046735830\", \"2018\", \"Audi\", \"A2\", \"Texas\", \"12/17/2018\", \"Completed\", \"XYZ\"),\n  createVehicleData(\"2563959933582287\", \"2019\", \"BMW\", \"B2\", \"Florida\", \"07/30/2019\", \"Completed\", \"XYZ\"),\n  createVehicleData(\"8309130666254027\", \"2020\", \"Benz\", \"C2\", \"Indiana\", \"03/14/2020\", \"Completed\", \"XYZ\"),\n  createVehicleData(\"3180783430963337\", \"2021\", \"Audi\", \"A3\", \"Indiana\", \"11/15/2021\", \"Pending\", \"XYZ\"),\n  createVehicleData(\"0087479668724131\", \"2022\", \"BMW\", \"B3\", \"Texas\", \"10/24/2022\", \"Completed\", \"XYZ\"),\n];\n\nexport default function ManualPricing(props) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [vehicleList, setVehicleList] = useState(rows);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const openConditionReport = (VINumber) => {\n    props.props.history.push('/conditionreportRequests', {\n      vin: VINumber,\n      pageName: \"Manual Pricing\",\n    })\n  }\n\n  const fetchDataBasedOnSearchValue = (searchText) => {\n    const vehicleListCopy = [...rows];\n    if (searchText) {\n      const filteredList = vehicleListCopy.filter(row => {\n        return row.VIN.indexOf(searchText) !== -1;\n      });\n      setVehicleList(filteredList);\n    } else {\n      setVehicleList(rows);\n    }\n  }\n\n  const fetchDataBasedOnFilters = (filterInput) => {\n    let vehicleListCopy = [...rows];\n    if (filterInput.vin) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.VIN.indexOf(filterInput.vin) !== -1 || row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo;\n      });\n    }\n    if (filterInput.yearFrom && filterInput.yearTo) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo;\n      });\n    }\n    if (filterInput.make) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.Make.indexOf(filterInput.make) !== -1;\n      });\n    }\n    if (filterInput.inspectionStatus) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1;\n      });\n    }\n    if (filterInput.groundingRegion) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\n      });\n    }\n    if (filterInput.auctionCode) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\n      });\n    }\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\n      vehicleListCopy = vehicleListCopy.filter(row => {\n        const dateTs = Date.parse(row.Inspection_Date);\n        return dateTs >= Date.parse(filterInput.inspectionDateFrom) && dateTs <= Date.parse(filterInput.inspectionDateTo);\n      });\n    }\n    setVehicleList(vehicleListCopy);\n  }\n\n  const resetFilterList = () => {\n    setVehicleList(rows);\n  }\n\n  return (\n    <>\n      <div>\n        <SwipableFilter\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\n          resetFilterList={resetFilterList}\n        />\n        <TableContainer component={Paper} className={classes.manualStyles}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">VIN</TableCell>\n                <TableCell align=\"center\">Year</TableCell>\n                <TableCell align=\"center\">Make</TableCell>\n                <TableCell align=\"center\">Model/Trim</TableCell>\n                <TableCell align=\"center\">Grounding Region</TableCell>\n                <TableCell align=\"center\">Inspection Date</TableCell>\n                <TableCell align=\"center\">Inspection Status</TableCell>\n                <TableCell align=\"center\">Action Code</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {vehicleList.map((row) => (\n                <TableRow key={row.name}>\n                  <TableCell align=\"right\">\n                    <span className=\"textStyle\">\n                      <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\n                    </span>\n                  </TableCell>\n                  <TableCell align=\"right\">{row.Year}</TableCell>\n                  <TableCell align=\"right\">{row.Make}</TableCell>\n                  <TableCell align=\"right\">{row.Model_Trim}</TableCell>\n                  <TableCell align=\"right\">{row.Grounding_Region}</TableCell>\n                  <TableCell align=\"right\">{row.Inspection_Date}</TableCell>\n                  <TableCell align=\"right\">{row.Inspection_Status}</TableCell>\n                  <TableCell align=\"right\">{row.Action_Code}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={vehicleList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </TableContainer>\n      </div>\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/RRMApproval.js",["303"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport SwipableFilterRRM from './SwipableFilterRRM';\nconst useStyles = makeStyles({\n    table: {\n        width: 950,\n    },\n    manualStyles: {\n        position: 'absolute',\n        top: \"150px\",\n        left: \"320px\",\n        margin: '20px',\n        width: 950,\n    },\n    filterStyles: {\n        position: 'absolute',\n        top: \"90\",\n        left: \"320px\",\n        margin: '20px',\n        width: 950,\n    },\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n    },\n});\n\nfunction createVehicleData(VIN, Year, Make, Model_Trim, auction, mmr, mmb, percent, priced_rate, priced_by, approve) {\n    return { VIN, Year, Make, Model_Trim, auction, mmr, mmb, percent, priced_rate, priced_by, approve };\n}\n\nconst rows = [\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\n\n];\n\nexport default function RRMApproval(props) {\n    const classes = useStyles();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    const openConditionReport = (VINumber) => {\n        props.props.history.push('/conditionreportRequests', {\n            vin: VINumber,\n            pageName: \"RRMApproval\",\n        })\n    }\n    return (\n        <>\n            <SwipableFilterRRM />\n            <TableContainer component={Paper} className={classes.manualStyles}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">VIN</TableCell>\n                            <TableCell align=\"center\">Year</TableCell>\n                            <TableCell align=\"center\">Make</TableCell>\n                            <TableCell align=\"center\">Model/Trim</TableCell>\n                            <TableCell align=\"center\">Auction</TableCell>\n                            <TableCell align=\"center\">MMR</TableCell>\n                            <TableCell align=\"center\">MBP</TableCell>\n                            <TableCell align=\"center\">%</TableCell>\n                            <TableCell align=\"center\">Priced rate</TableCell>\n                            <TableCell align=\"center\">Priced By</TableCell>\n                            <TableCell align=\"center\">Approve</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell align=\"right\">\n                                    <span className=\"textStyle\">\n                                        <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\n                                    </span>\n                                </TableCell>\n                                <TableCell align=\"right\">{row.Year}</TableCell>\n                                <TableCell align=\"right\">{row.Make}</TableCell>\n                                <TableCell align=\"right\">{row.Model_Trim}</TableCell>\n                                <TableCell align=\"right\">{row.auction}</TableCell>\n                                <TableCell align=\"right\">{row.mmr}</TableCell>\n                                <TableCell align=\"right\">{row.mmb}</TableCell>\n                                <TableCell align=\"right\">{row.percent}</TableCell>\n                                <TableCell align=\"right\">{row.priced_rate}</TableCell>\n                                <TableCell align=\"right\">{row.priced_by}</TableCell>\n                                <TableCell align=\"right\">{row.approve}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </TableContainer>\n        </>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/AdminVehicleSearch.js",["304","305"],"import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport CustomizedInputBase from './CustomisedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport SearchText from './SearchText/Search';\nconst AdminVehicleSearch = (props) => {\n\n  console.log(\"searchdetails\",props);\n\n  return (\n    <Card className=\"adminSearchCard\">\n      <CardContent className=\"adminSearcheader\">\n        <Typography variant=\"h4\" component=\"h4\">\n          Welcome to Auction Sales Platform\n        </Typography>\n        <Typography variant=\"p\" component=\"p\">\n          Search for a vehicle, or start with any of the menu items on the left.\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardContent className=\"adminSearchCardBody\">\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\n          Submit\n        </Button>\n      </CardContent>\n    </Card>\n\n  )\n}\nexport default AdminVehicleSearch;","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/NewSideBar.js",["306"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"30px\",\n        height: \"30px\",\n        backgroundColor: \"#B80F0A\",\n        borderRadius: \"50%\",\n        fontSize: \"12px\",\n        padding: \"10px 20px 13px 12px\",\n        color: \"white\",\n    },\n    sideBarCSS: {\n        marginLeft: \"16px\",\n    }\n}));\nexport default function NewSidebar() {\n    const [open, setOpen] = React.useState(true);\n    const classes = useStyles();\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    return (\n        <div className={classes.sideBarCSS}>\n            {/* <ListItem component={Link} to=\"/home\">\n                <ListItemText\n                    primary=\"Home\"\n                />\n                <Chip className={classes.root} label=\"0\"></Chip>\n            </ListItem>\n            <ListItem component={Link} to=\"/checkinvehicle\">\n                <ListItemText\n                    primary=\"Check In vehicle\"\n                />\n                <Chip className={classes.root} label=\"0\"></Chip>\n            </ListItem> */}\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n            >\n                <ListItem button onClick={handleClick}>\n\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                    <ListItemText primary=\"Grounded\" />\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.sideBarCSS}>\n                        <ListItem component={Link} to=\"/grounded\" >\n                            <ListItemText primary=\"Grounded\" />\n                            <Chip className={classes.root} label=\"4\"></Chip>\n                        </ListItem>\n                        <ListItem component={Link} to=\"/passed\" >\n                            <ListItemText primary=\"Passed\" />\n                            <Chip className={classes.root} label=\"0\"></Chip>\n                        </ListItem>\n                        <ListItem component={Link} to=\"/purchased\" >\n                            <ListItemText primary=\"Purchased\" />\n                            <Chip className={classes.root} label=\"0\"></Chip>\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </List>\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n            >\n                <ListItem button onClick={handleClick}>\n\n                    {open ? <ExpandLess /> : <ExpandMore />}\n                    <ListItemText primary=\"Admin\" />\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.sideBarCSS}>\n                        <ListItem component={Link} to=\"/adminSearch\" >\n                            <ListItemText primary=\"Vehicle Search\" />\n                            <Chip className={classes.root} label=\"4\"></Chip>\n                        </ListItem>\n                        <ListItem component={Link} to=\"/adminInventoryRequests\" >\n                            <ListItemText primary=\"Inventory Requests\" />\n                            <Chip className={classes.root} label=\"0\"></Chip>\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </List>\n        </div>\n    )\n}","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/VehicleInformation.js",["307","308","309","310","311","312","313"],"import React, { useState } from 'react';\nimport Search from './Search/Search';\n\n\nlet styles = {\n  container: {\n    \"width\": \"371px\",\n    \"height\": \"270px\",\n    \"margin\": \"8px 540px 16px\",\n    \"padding\": \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"border\": \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n  },\n\n  VehicleMakeModel: {\n    \"width\": \"271px\",\n    \"height\": \"24px\",\n    \"margin\": \"0 69px 0 0\",\n    \"font-family\": \"SalesforceSans\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"bold\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    \"color\": \"#080707\",\n  },\n  line: {\n    \"width\": \"350px\",\n    \"height\": \"2px\",\n    \"margin\": \"4px 2px 11px 2px\",\n    \"background-color\": \"#000000\",\n  },\n\n  label: {\n    \"width\": \"85px\",\n    \"height\": \"18px\",\n    \"margin\": \"8px 24px 4px 0\",\n    \"font-family\": \"ToyotaType\",\n    \"font-size\": \"12px\",\n    \"font-weight\": \"600\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    \"color\": \"#3e3e3c\",\n  },\n  value: {\n    \"width\": \"85px\",\n    \"height\": \"18px\",\n    \"margin\": \"8px 24px 4px 0\",\n    \"font-family\": \"ToyotaType\",\n    \"font-size\": \"12px\",\n    \"font-weight\": \"600\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    \"color\": \"#3e3e3c\",\n    \"font-weight\": \"normal\",\n  },\n\n  imagebox: {\n    \"width\": \"180px\",\n    \"height\": \"160px\",\n    \"margin\": \"0px 1px 2px 2px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"background-color\": \"#000000\",\n  },\n  search: {\n    \"width\": \"371px\",\n    \"height\": \"32px\",\n    \"margin-top\": \"10px\",\n    \"padding\": \" 0 0 0px\",\n    \"border-radius\": \"4px\",\n    \"border\": \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n  },\n  noMatchesFrame: {\n    \"width\": \"371px\",\n    \"height\": \"76px\",\n    \"padding\": \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"border\": \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n    \"display\": \"block\",\n    \"margin\": \"1% 0 0 40%\",\n\n  },\n  noMatches: {\n    \"height\": \"18px\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    \"color\": \"#3e3e3c\"\n  },\n  searchSuggestionFrame: {\n    \"width\": \"371px\",\n    \"height\": \"200px\",\n    \"margin\": \"8px 540px 16px\",\n    \"padding\": \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"border\": \"solid 1px #dddbda\",\n  },\n  searchSuggestion: {\n    \"width\": \"350px\",\n    \"height\": \"35px\",\n    \"background-color\": \"#ffffff\",\n  },\n  searchLabel: {\n    \"height\": \"18px\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    \"color\": \"#3e3e3c\",\n  },\n  imageContainer: {\n    \"width\": \"371px\",\n    \"height\": \"160px\",\n    \"margin\": \"48px 54px 16px\",\n    //\"padding\": \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"border\": \"solid 1px #dddbda\",\n  },\n  imageContainer1: {\n    \"display\": \"block\",\n    \"margin-left\": \"40%\",\n  },\n  alighnCenterItems: {\n    background: '#f3f2f2',\n    height: '100vh',\n    width: \"100%\",\n    right: \"0px\",\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\n  },\n  centerSection: {\n    marginTop: \"12%\",\n  }\n\n};\nconst VehicleInformation = (props) => {\n\n  const searchBox = styles.search;\n  const placeholder = 'Enter VIN';\n  const [validSearch, setValidSearch] = useState(false);\n  const [suggestions, setSuggestions] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  const accountInformation = props.accountInformation;\n  let searchSuggestions = ['12345678901234567', '12345678901234566', '12345678901234568', '12345678901234569', '12345678901234560'];\n\n  // useEffect(() => {\n  //      //need to filter search data based on the backend data\n  //   });\n\n  const showResults = (e) => {\n    setSearchValue(e?.target?.value);\n    let value = e?.target?.value;\n    searchSuggestions = searchSuggestions.filter(val => {\n      return val.startsWith(value);\n    });\n    if (value?.length == 0 || !searchSuggestions || searchSuggestions?.length == 0 || searchValue?.length == 0) {\n      setValidSearch(false);\n      setSuggestions(false);\n    }\n    else if (searchSuggestions.length > 1) {\n      setValidSearch(false);\n      setSuggestions(true);\n    } else {\n      setValidSearch(true);\n      setSuggestions(false);\n    }\n  }\n\n  const setSearchData = (i) => {\n    setSearchValue(searchSuggestions[i]);\n    setValidSearch(false);\n    setSuggestions(false);\n  }\n\n  return (\n    <div style={styles.alighnCenterItems}>\n      <div style={styles.centerSection}>\n        <img src='car.png' width=\"371px\" height=\"160px\" style={styles.imageContainer1}></img>\n      </div>\n      <div style={{ marginLeft: \"40%\" }}>\n        <div style={styles.searchLabel}>Search Vehicles</div>\n        <Search searchBox={searchBox} showSearchRight={true} searchCompleted={validSearch} placeholder={placeholder} editSearchTerm={showResults} searchValue={searchValue}></Search>\n\n      </div>\n      {validSearch && <div style={styles.container}>\n        <div style={styles.VehicleMakeModel}> Vehicle Make & Model Name | Year  </div>\n        <div style={styles.line}></div>\n        <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }}>\n          <div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Maturity Date </div> <div style={styles.value}> 00/00/0000 </div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Lease Type </div> <div style={styles.value}> Type Name</div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Lease Name </div> <div style={styles.value}> Lease Name </div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Acct Type </div> <div style={styles.value}> Type Name </div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Acct Number </div> <div style={styles.value}> 00000000 </div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Ream Payments </div> <div style={styles.value}> $000.00 </div> </div>\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Color </div> <div style={styles.value}>  Color Name </div> </div>\n          </div>\n\n          <div style={styles.imagebox}>\n            <img />\n          </div>\n\n        </div>\n\n      </div>}\n      {!validSearch && !suggestions && <div style={styles.noMatchesFrame}>\n        <div style={styles.noMatches}>No Matches Available</div>\n      </div>}\n      {suggestions && <div style={styles.searchSuggestionFrame}>\n        {searchSuggestions.map(function (name, index) {\n          return <div style={styles.searchSuggestion} onClick={() => setSearchData(index)}>{name}</div>\n        })}\n      </div>}\n    </div>\n  )\n}\nexport default VehicleInformation;","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Tabs.js",["314"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\nimport StatusHistory from './StatusHistory';\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function VehicleSearchTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    console.log(\"aaaa\",props)\n\n    const{inspectiondata}=props;\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <AppBar position=\"fixed\" className='topBarAdmin'>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <div className='adminTabsSection'><StatusHistory /></div>\n\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <div className='adminTabsSection'>Update Mileage/price</div>\n            </TabPanel>\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/MileageDisc.js",["315"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport SwipableFilterMileage from './SwipableFilterMileage';\nconst useStyles = makeStyles({\n    table: {\n        width: 950,\n    },\n    manualStyles: {\n        position: 'absolute',\n        top: \"150px\",\n        left: \"320px\",\n        margin: '20px',\n        width: 950,\n    },\n    filterStyles: {\n        position: 'absolute',\n        top: \"90\",\n        left: \"320px\",\n        margin: '20px',\n        width: 950,\n    },\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n    },\n});\n\nfunction createVehicleData(VIN, Year, Make, Model_Trim, region, ground_mileage, inspection_mileage, difference) {\n    return { VIN, Year, Make, Model_Trim, region, ground_mileage, inspection_mileage, difference };\n}\n\nconst rows = [\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\n];\n\nexport default function MileageDisc(props) {\n    const classes = useStyles();\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    const openConditionReport = (VINumber) => {\n        props.props.history.push('/conditionreportRequests', {\n            vin: VINumber,\n            pageName: \"Mileage Discrepencies\",\n        })\n    }\n    return (\n        <>\n            <SwipableFilterMileage />\n            <TableContainer component={Paper} className={classes.manualStyles}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">VIN</TableCell>\n                            <TableCell align=\"center\">Year</TableCell>\n                            <TableCell align=\"center\">Make</TableCell>\n                            <TableCell align=\"center\">Model/Trim</TableCell>\n                            <TableCell align=\"center\">Region</TableCell>\n                            <TableCell align=\"center\">Grounding Mileage</TableCell>\n                            <TableCell align=\"center\">Inspection Mileage</TableCell>\n                            <TableCell align=\"center\">Differnence</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell align=\"right\">\n                                    <span className=\"textStyle\">\n                                        <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\n                                    </span>\n                                </TableCell>\n                                <TableCell align=\"right\">{row.Year}</TableCell>\n                                <TableCell align=\"right\">{row.Make}</TableCell>\n                                <TableCell align=\"right\">{row.Model_Trim}</TableCell>\n                                <TableCell align=\"right\">{row.region}</TableCell>\n                                <TableCell align=\"right\">{row.inspection_mileage}</TableCell>\n                                <TableCell align=\"right\">{row.ground_mileage}</TableCell>\n                                <TableCell align=\"right\">{row.difference}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n            </TableContainer>\n        </>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/NotesSection.js",["316","317","318","319"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"30px\",\n        height: \"30px\",\n        backgroundColor: \"#B80F0A\",\n        borderRadius: \"50%\",\n        fontSize: \"12px\",\n        padding: \"10px 20px 13px 12px\",\n        color: \"white\",\n    },\n    sideBarCSS: {\n        marginLeft: \"16px\",\n    }\n}));\nexport default function NotesSection() {\n    const [open, setOpen] = React.useState(true);\n    const classes = useStyles();\n    const handleClick = () => {\n        //setOpen(!open);\n    };\n    return (\n        <div className=\"notesSection\">\n            <ListItem className=\"notesSectionHeader\">\n                NotesSection\n            </ListItem>\n            <ListItem>\n                <div className=\"notesText\">\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                </div>\n\n            </ListItem>\n            <ListItem >\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\n                    Save\n                </Button>\n            </ListItem>\n            <Divider variant=\"middle\" />\n\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n\n        </div>\n    )\n}","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundVehicleMFS.js",["320"],"import React, { useState } from 'react';\n\nexport default function GroundVehicleMFS(props) {\n\n    return (\n        <div class=\"groundVehicleMFS\">\n            <p>By grounding this vehicle, dealer will have multiple purchase options and customer will be invoiced asa lease return.</p>\n        </div>\n    )\n\n}","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/groundedListPage.js",["321","322","323","324","325","326","327"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ViewDetailedReport.js",["328","329"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyGallery from './ImageGallery';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function ViewDetailedReport(props) {\n    const [open, setOpen] = React.useState(false);\n    let wheelTyrelistOfItem = ['LF', 'RF']\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n        props.close()\n    };\n\n    const {DamageDetails}=props;\n\n    return (\n        <div>\n            <Dialog onClose={handleClose} maxWidth={'lg'} aria-labelledby=\"max-width-dialog-title\" open={props.open}>\n                <DialogTitle className=\"viewReportHeader\" id=\"customized-dialog-title\" onClose={handleClose} >\n                    Damage  Report\n                </DialogTitle>\n                <DialogContent>\n                    <Grid container >\n                        <Grid item xs={6} className=\"galleryView\">\n                            <MyGallery />\n                        </Grid>\n\n\n                        <Grid xs={6}>\n                            <div className=\"viewReportCenter\">Estimated Damage Repair Totals</div>\n                            <div className=\"hrLine\" />\n                            <Grid container className=\"experiorSpacing\">\n                                <Grid item xs={12}>\n                                    <List >\n                                        <ListItem >\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Interior</span></ListItemText>\n                                            <ListItemSecondaryAction className=\"smallCardBody\">{\"$\"}{DamageDetails.interiorCost?DamageDetails.interiorCost:'NA'}</ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Exterior</span></ListItemText>\n                                            <ListItemSecondaryAction className=\"smallCardBody\">{\"$\"}{DamageDetails.exteriorCost?DamageDetails.exteriorCost:'NA'}</ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Mechanical total</span></ListItemText>\n                                            <ListItemSecondaryAction className=\"smallCardBody\">{\"$\"}{DamageDetails.maintainenceCost?DamageDetails.maintainenceCost:'NA'}</ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Normal W and T</span></ListItemText>\n                                            <ListItemSecondaryAction className=\"smallCardBody\">$00,000.00</ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Normal W and T</span></ListItemText>\n                                            <ListItemSecondaryAction className=\"smallCardBody\">$00,000.00</ListItemSecondaryAction>\n                                        </ListItem>\n                                    </List>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <div className=\"LabelTextTextAreaDamage\">Damage Area Description</div>\n                                    <TextareaAutosize\n                                        className=\"inputFieldTextAreaDamage\"\n                                        aria-label=\"maximum height\"\n                                        placeholder=\"Maximum 4 rows\"\n                                        defaultValue=\"Short description that aligns with the photo that is being displayed from the table below\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                    </Grid>\n\n                    <TableContainer component={Paper}>\n                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Damaged Area</TableCell>\n                                    <TableCell align=\"right\">Wear&Tear</TableCell>\n                                    <TableCell align=\"right\">Labour Hours</TableCell>\n                                    <TableCell align=\"right\">Paint Hours</TableCell>\n                                    <TableCell align=\"right\">Part Cost</TableCell>\n                                    <TableCell align=\"right\">Estimate</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\n                                        Interior\n                                    </TableCell>\n\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                                        <hr />\n                                    </TableCell>\n\n                                </TableRow>\n                                {wheelTyrelistOfItem.map(list => {\n                                    return (\n                                        <TableRow key={list}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                Damage area name and description\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                                }\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\n                                        Exterior\n                                    </TableCell>\n\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                                        <hr />\n                                    </TableCell>\n\n                                </TableRow>\n\n                                {wheelTyrelistOfItem.map(list => {\n                                    return (\n                                        <TableRow key={list}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                Damage area name and description\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                                }\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\n                                        Mechanical\n                                    </TableCell>\n\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                                        <hr />\n                                    </TableCell>\n\n                                </TableRow>\n                                {wheelTyrelistOfItem.map(list => {\n                                    return (\n                                        <TableRow key={list}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                Damage area name and description\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                                }\n                                <TableRow >\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\n                                    </TableCell>\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                                        <hr />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\n                                    </TableCell>\n                                    <TableCell colSpan={1} style={{ width: 90 }} align=\"right\">Total</TableCell>\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\n                                    </TableCell>\n                                    <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\n                                    </TableCell>\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                                        <hr />\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\n                                    </TableCell>\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                                        <div className=\"disclaimer\">\n                                            Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\n                                        </div>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </DialogContent>\n                <DialogActions className=\"reportFooter\">\n                    <Button autoFocus onClick={handleClose} className=\"closeButton\" color=\"secondary\">\n                        close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/GroundVehiclePLV.js",["330"],"import React, { useState } from 'react';\n\nexport default function GroundVehicleMFS(props) {\n\n    return (\n        <div class=\"groundVehiclePLV\">\n            <p>Dealer is responsible for paying off the vehicle and customer will not recieve any lease-end charges.</p>\n        </div>\n    )\n\n}","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/ImageGallery.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/AdminSearchHeader.js",["331","332","333","334"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 300,\n        height: 35,\n        margin: '7px 8px'\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        fontSize: '14px',\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function AdminSearchHeader(props) {\n    const classes = useStyles();\n    const [searchtext, setSearchtext] = React.useState(\"\");\n\n    const handleSearchText = (value) => {\n        setSearchtext(value)\n        //props.searchdetails(searchtext)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Global Search by VIN\"\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\n                onChange={(evt) => handleSearchText(evt.target.value)}\n            />\n        </Paper>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Separator.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/purchasedPage.js",["335","336","337","338"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport SwipeableTextMobileStepper from './Carousel';\nimport moment from 'moment';\nimport CurrencyFormat from 'react-currency-format';\nimport { getPurchasedList } from '../../service/api';\n//let resp = [{ \"account_type\": \"LEASE\", \"pay_off_amt\": 12000, \"residual_amt\": 11000, \"remaining_pmts\": 250, \"model_year\": 19, \"brand\": \"MAZDA\", \"model\": \"SD\", \"ext_color\": \"Color\", \"grounding_date\": \"2021-05-11T00:00:00\", \"odometer_reading\": \"9000\", \"vin\": \"JM3KFBDM0K1698372\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 12500, \"residual_amt\": 9000, \"remaining_pmts\": 300, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Black\", \"grounding_date\": \"2021-05-11T00:00:00\", \"odometer_reading\": \"12000\", \"vin\": \"JM3KFADM3K1586305\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 14000, \"residual_amt\": 11000, \"remaining_pmts\": 400, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Blue\", \"grounding_date\": \"2021-05-07T00:00:00\", \"odometer_reading\": \"8000\", \"vin\": \"3MZBPBCM4LM125760\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 15000, \"residual_amt\": 14000, \"remaining_pmts\": 500, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Blue\", \"grounding_date\": \"2021-05-08T00:00:00\", \"odometer_reading\": \"6000\", \"vin\": \"JM3KFABM2L0748452\" }]\nexport default function ListingPage2(props) {\n    const [vehicleResponse, setVehicleResponse] = useState([])\n    const [value, setValue] = useState([])\n\n    useEffect(() => {\n\n\n        getVehicleDetails()\n    }, [value]);\n    async function getVehicleDetails() {\n        let apiResponse = await getPurchasedList();\n        setVehicleResponse(apiResponse.data.data);\n        console.log(vehicleResponse)\n        console.log(apiResponse.data.data)\n    }\n\n\n    return (\n        vehicleResponse.length > 0 ?\n            vehicleResponse.map(vehicle => {\n                return (\n                    <div className='listingPageCard'>\n                        <Grid container spacing={3}>\n                            <Grid item xs={4}>\n                                <SwipeableTextMobileStepper />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div class=\"Year-Make-Model-Col\">\n                                    <div class=\"vehicleMakeModel\">\n                                        <span>{vehicle.brand} {vehicle.model}  {vehicle.ext_color}  {vehicle.model_year}</span>\n                                    </div>\n                                    <List >\n\n                                        {/* <span className=\"textStyle\">\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\n                                        </span>\n                                        <span className=\"progressStyle\">\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                        </span> */}\n\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> VIN:</span><a className=\"vin\" href={`/conditionreport${vehicle.groundingDetails.vin}`}> {vehicle.groundingDetails.vin}</a>\n                                        </span>\n\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Purchase Date:</span> {moment(vehicle.purchase_date).format('MM/DD/YYYY')}\n                                        </span>\n                                        {/* <span className=\"textStyle\">\n                                        <span className=\"textBold\"> Grounding Mileage:</span> {vehicle.odometer_reading} miles\n                                        </span> */}\n                                        {/* <span className=\"textStyle\">\n                                        <span className=\"textBold\"> Inspection Mileage:</span> 000,000 miles\n                                        </span> */}\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Purchase Type:</span> {vehicle.purchase_type}\n                                        </span>\n                                    </List>\n\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div class=\"Vehicle-Price-Option\">\n                                    <div class=\"vehicleMakeModel\">\n                                        <span>Vehicle Cost </span>\n                                    </div>\n                                    <List >\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Payoff Price  </span> <span className=\"margin__space4\"><CurrencyFormat value={vehicle.groundingDetails.pay_off_amt} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span>\n                                        </span>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\">  Rem.Payments</span> <span className=\"margin__space5\"><CurrencyFormat value={vehicle.groundingDetails.remaining_pmts} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span>\n                                        </span>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Admin Fee</span> <span className=\"margin__space6\">$300</span>\n                                        </span>\n                                        <div className=\"purchasedScreenTotal\" />\n                                        <span className=\"textStyle\">\n                                            <span className=\"textStyleTotalFee\"> Total Price</span> <span className=\"totalFeeSum\"><CurrencyFormat value={vehicle.groundingDetails.pay_off_amt + vehicle.groundingDetails.remaining_pmts + 300} displayType={'text'} thousandSeparator={true} prefix={'$'} /></span>\n                                        </span>\n                                    </List>\n\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                )\n            }) : (<div className='listingPageCard'>\n\n            </div>)\n\n    );\n};\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/passedPage.js",["339"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport SwipeableTextMobileStepper from './Carousel';\nimport moment from 'moment';\nimport { getPassedList } from '../../service/api';\nimport CurrencyFormat from 'react-currency-format';\nimport VerticalVehicleStepper from '../../components/Stepper/VerticalStepper';\n//let resp = [{ \"account_type\": \"LEASE\", \"pay_off_amt\": 12000, \"residual_amt\": 11000, \"remaining_pmts\": 250, \"model_year\": 19, \"brand\": \"MAZDA\", \"model\": \"SD\", \"ext_color\": \"Color\", \"grounding_date\": \"2021-05-11T00:00:00\", \"odometer_reading\": \"9000\", \"vin\": \"JM3KFBDM0K1698372\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 12500, \"residual_amt\": 9000, \"remaining_pmts\": 300, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Black\", \"grounding_date\": \"2021-05-11T00:00:00\", \"odometer_reading\": \"12000\", \"vin\": \"JM3KFADM3K1586305\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 14000, \"residual_amt\": 11000, \"remaining_pmts\": 400, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Blue\", \"grounding_date\": \"2021-05-07T00:00:00\", \"odometer_reading\": \"8000\", \"vin\": \"3MZBPBCM4LM125760\" }, { \"account_type\": \"LEASE\", \"pay_off_amt\": 15000, \"residual_amt\": 14000, \"remaining_pmts\": 500, \"model_year\": 2018, \"brand\": \"MAZDA\", \"model\": \"MAZDA3\", \"ext_color\": \"Blue\", \"grounding_date\": \"2021-05-08T00:00:00\", \"odometer_reading\": \"6000\", \"vin\": \"JM3KFABM2L0748452\" }]\nexport default function ListingPage1(props) {\n    const [vehicleResponse, setVehicleResponse] = useState([])\n    const [value, setValue] = useState([])\n\n    useEffect(() => {\n\n\n        getVehicleDetails()\n    }, [value]);\n    async function getVehicleDetails() {\n        let apiResponse = await getPassedList();\n        setVehicleResponse(apiResponse.data.data);\n    }\n\n\n    return (\n        vehicleResponse.length > 0 ?\n            vehicleResponse.map(vehicle => {\n                return (\n                    <div className='listingPageCard'>\n                        <Grid container spacing={3}>\n                            <Grid item xs={4}>\n                                <SwipeableTextMobileStepper />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div class=\"Year-Make-Model-Col\">\n                                    <div class=\"vehicleMakeModel\">\n                                        <span>{vehicle.brand} {vehicle.model} {vehicle.ext_color} {vehicle.model_year}</span>\n                                    </div>\n                                    <List >\n\n                                        {/* <span className=\"textStyle\">\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\n                                        </span>\n                                        <span className=\"progressStyle\">\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                        </span> */}\n\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> VIN:</span><a className=\"vin\" href={`/conditionreport${vehicle.vin}`}> {vehicle.vin}</a>\n                                        </span>\n\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Grounding Date:</span> {moment(vehicle.grounding_date).format('MM/DD/YYYY')}\n                                        </span>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Grounding Mileage:</span> <CurrencyFormat value={vehicle.odometer_reading} displayType={'text'} thousandSeparator={true} suffix={'  miles'} />\n                                        </span>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Inspection Mileage:</span> 000,000 miles\n                                        </span>\n                                        <span className=\"textStyle\">\n                                            <span className=\"textBold\"> Account Type: </span> {vehicle.account_type}\n                                        </span>\n                                    </List>\n\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div class=\"Vehicle-Price-Option\">\n                                    <VerticalVehicleStepper />\n                                </div>\n                            </Grid>\n                        </Grid>\n\n                    </div>\n                )\n            }) : (<div className='listingPageCard'>\n\n            </div>)\n\n    );\n};\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Search/Search.js",["340","341","342","343"],"import React, { useState } from 'react';\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\n\nconst Search = (props) => {\n\n\n  const [search, setSearch] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const placeholder = props.placeholder;\n  const serachBoxEntire = props.searchBox;\n  const showSearchLeft = props.showSearchLeft;\n  const showSearchRight = props.showSearchRight;\n  const searchCompleted = props.searchCompleted;\n\n  return (\n\n    <div style={serachBoxEntire}>\n      {showSearchLeft && <div class=\"searchDiv\" > <img src={searchCompleted ? 'close.png' : 'searchIcon1.png'} alt=\"Logo\" width=\"20px\" height=\"20px\" /> </div>}\n      <input value={props?.searchValue} class=\"searchInput\" onChange={(evt) => props?.editSearchTerm(evt)} placeholder={placeholder} />\n      {showSearchRight && <div class=\"searchDiv\"> <img src={searchCompleted ? 'close.png' : 'searchIcon1.png'} alt=\"Logo\" width=\"20px\" height=\"20px\" /> </div>}\n\n      <br></br>\n      <div>\n        {searchResults?.map(name => <div>\n          {name}\n        </div>)}\n      </div>\n    </div>\n  );\n\n\n\n}\nexport default Search;","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/service/api.js",["344","345"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SearchText/Search.js",["346","347","348","349","350","351","352"],"import React, { useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nconst SearchText = (props) => {\n  const [search, setSearch] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const placeholder = props.placeholder;\n  const serachBoxEntire = props.searchBox;\n  const showSearchLeft = props.showSearchLeft;\n  const showSearchRight = props.showSearchRight;\n  const searchCompleted = props.searchCompleted;\n\n  return (\n\n    <div class=\"search\">\n\n      <InputBase\n        placeholder={placeholder}\n        variant=\"outlined\"\n        value={props?.searchValue}\n        maxlength=\"18\"\n        class=\"searchInput\"\n        fullWidth\n        onChange={(evt) => props?.editSearchTerm(evt)}\n      />\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <CloseIcon />\n      </IconButton>\n\n      <br></br>\n      <div>\n        {searchResults?.map(name => <div>\n          {name}\n        </div>)}\n      </div>\n    </div>\n  );\n\n\n\n}\nexport default SearchText;","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/OktaSignInWidget.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/ManualPricingSideBar.js",["353","354","355","356","357","358","359","360"],"import React, { useState } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"30px\",\n        height: \"30px\",\n        backgroundColor: \"#B80F0A\",\n        borderRadius: \"50%\",\n        fontSize: \"12px\",\n        padding: \"10px 20px 13px 12px\",\n        color: \"white\",\n    },\n    sideBarCSS: {\n        marginLeft: \"16px\",\n    }\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: \"#ffffff\",\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: 'auto',\n        height: '10px',\n        padding: '10px 12px',\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\nexport default function ManualPricingSideBar() {\n    const [open, setOpen] = React.useState(true);\n    const classes = useStyles();\n    const handleClick = () => {\n        //setOpen(!open);\n    };\n    const handleOnChange = (event) => {\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\n    };\n    const [filterInput, setFilterInput] = useState({\n        vin: '',\n        yearFrom: '',\n        yearTo: '',\n        make: '',\n        inspectionStatus: '',\n        inspectionDateFrom: '',\n        inspectionDateTo: '',\n        groundingRegion: '',\n        auctionCode: ''\n    });\n    return (\n        <div className=\"manualPricingSidebar\">\n            <ListItem className=\"notesSectionHeader\">\n                Manual Pricing\n            </ListItem>\n            <ListItem button>\n                <FormControl>\n                    <InputLabel shrink htmlFor=\"vin-input\">\n                        Market Price\n                    </InputLabel>\n                    <BootstrapInput\n                        placeholder=\"Enter price\"\n                        id=\"EntermarketPrice-input\"\n                        name=\"EntermarketPrice\"\n                        value={filterInput.vin}\n                        onChange={handleOnChange}\n                    />\n                </FormControl>\n            </ListItem>\n            <ListItem button>\n                <FormControl>\n                    <InputLabel shrink htmlFor=\"vin-input\">\n                        Re-Enter Market Price\n                    </InputLabel>\n                    <BootstrapInput\n                        placeholder=\"Enter Price\"\n                        id=\"reEntermarketPrice-input\"\n                        name=\"reEntermarketPrice\"\n                        value={filterInput.vin}\n                        onChange={handleOnChange}\n                    />\n                </FormControl>\n            </ListItem>\n            <ListItem button>\n                <FormControl>\n                    <InputLabel shrink htmlFor=\"vin-input\">\n                        MMR\n                    </InputLabel>\n                    <BootstrapInput\n                        placeholder=\"MMR\"\n                        id=\"vin-input\"\n                        name=\"vin\"\n                        value={filterInput.vin}\n                        onChange={handleOnChange}\n                    />\n                </FormControl>\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem >\n                <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\n            </ListItem>\n\n            <ListItem >\n                <p className=\"manualPricing\">Autograde: 3.0</p>\n            </ListItem>\n            <ListItem >\n                <p className=\"manualPricing\">Grounding Dealer State: TX</p>\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <div>\n                    <h3>Price History</h3>\n                </div>\n            </ListItem>\n            <ListItem>\n                <div className=\"manualPricingText\">\n                    <p className=\"manualPricing\">Price Entry Date/Time</p>\n                    <p className=\"manualPricing\">Price: $00,000.00</p>\n                    <p className=\"manualPricing\">User Name: First, Last</p>\n                </div>\n            </ListItem>\n            <ListItem>\n                <div className=\"manualPricingText\">\n                    <p className=\"manualPricing\">Price Entry Date/Time</p>\n                    <p className=\"manualPricing\">Price: $00,000.00</p>\n                    <p className=\"manualPricing\">User Name: First, Last</p>\n                </div>\n\n            </ListItem>\n            <List className=\"swipeFilterBtn\">\n                <Button autoFocus className=\"cancelButton\" color=\"primary\">\n                    Cancel\n                </Button>\n                <Button autoFocus className=\"updateButton\" color=\"secondary\" >\n                    Update\n                </Button>\n            </List>\n        </div>\n    )\n}","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilterMileage.js",["361","362","363","364","365"],"import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: \"inline-block\",\n        marginTop: '25px',\n    },\n    inlineDate: {\n        display: \"inline-block\",\n        marginTop: '135px',\n    },\n    list: {\n        width: 264,\n        height: \"100%\",\n        paddingBottom: \"64px\",\n        position: \"relative\",\n    },\n    fullList: {\n        width: 'auto',\n    },\n    filterStyles: {\n        position: 'absolute',\n        top: \"132px\",\n        left: \"320px\",\n        display: \"flex\",\n        alignContent: \"center\"\n    },\n    textField: {\n        width: \"216px\",\n        borderRadius: \"4px\",\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n    },\n    updateButton: {\n        padding: \"4px 8px\",\n        minWidth: \"114px\",\n        borderRadius: \"4px\",\n        color: \"#ffffff!important\",\n        backgroundColor: \"#c23934!important\",\n    },\n    cancelButton: {\n        padding: \"4px 8px\",\n        minWidth: \"88px\",\n        borderRadius: \"4px\",\n        color: \"#0070d2!important\",\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n    },\n    searchBlock: {\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n        boxShadow: \"none\",\n    },\n    customSelect: {\n        marginTop: \"24px\",\n        color: \"#706e6b\",\n        fontSize: \"13px\",\n    },\n    selectFormControl: {\n        width: \"100%\"\n    },\n    iconButton: {\n        padding: \"2px 12px\"\n    },\n    filterInput: {\n        height: \"32px\",\n    },\n    swipeFilterBtn: {\n        position: \"absolute\",\n        bottom: \"0\",\n        left: \"0px\",\n        padding: \"8px 16px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        background: \"#FFF\",\n    },\n    filterResultText: {\n        color: \"#006dcc\",\n        fontSize: \"13px\",\n        lineHeigt: \"20px\",\n        fontWeight: \"500\",\n        textTransform: \"lowercase\",\n        marginLeft: \"16px\",\n    }\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: \"#ffffff\",\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: 'auto',\n        height: '10px',\n        padding: '10px 12px',\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: \"#ffffff\",\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        display: 'inline-block',\n        minWidth: '65px',\n        height: '10px',\n        marginRight: '5px',\n        padding: '10px 12px',\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\n\nexport default function SwipableFilterMileage() {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n    const [filterInput, setFilterInput] = useState({\n        vin: '',\n        yearFrom: '',\n        yearTo: '',\n        make: '',\n        inspectionStatus: '',\n        inspectionDateFrom: '',\n        inspectionDateTo: '',\n        groundingRegion: '',\n        auctionCode: ''\n    });\n    const [makeOptions, setMakeOptions] = useState([\n        { value: 'audi', text: 'Audi' },\n        { value: 'bmw', text: 'BMW' },\n        { value: 'benz', text: 'Benz' }\n    ]);\n    const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n        { value: 'pending', text: 'Pending' },\n        { value: 'completed', text: 'Completed' }\n    ]);\n    const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n        { value: 'texas', text: 'Texas' },\n        { value: 'florida', text: 'Florida' },\n        { value: 'indiana', text: 'Indiana' }\n    ]);\n    const [searchtext, setSearchtext] = useState(\"\");\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, [anchor]: open });\n    };\n\n    const handleOnChange = (event) => {\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\n    };\n\n    const handleOnSubmit = () => {\n        console.log(filterInput);\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, { [classes.fullList]: anchor === 'top' || anchor === 'bottom' })}\n            role=\"presentation\"\n        //onClick={toggleDrawer(anchor, false)}\n        //onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['Filter Options'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"vin-input\">\n                            VIN\n                        </InputLabel>\n                        <BootstrapInput\n                            placeholder=\"Enter full or partial VIN\"\n                            id=\"vin-input\"\n                            name=\"vin\"\n                            value={filterInput.vin}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"year-input\">\n                            Year Range\n                        </InputLabel>\n                        <SmallInput\n                            placeholder=\"From\"\n                            id=\"year-from-input\"\n                            name=\"yearFrom\"\n                            value={filterInput.yearFrom}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.inline}>\n                        <SmallInput\n                            placeholder=\"To\"\n                            id=\"year-to-input\"\n                            name=\"yearTo\"\n                            value={filterInput.yearTo}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Make\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            variant=\"outlined\"\n                            displayEmpty\n                            name=\"make\"\n                            value={filterInput.make}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {makeOptions.map(make => (\n                                <MenuItem value={make.value}>{make.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Inspection Status\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            variant=\"outlined\"\n                            displayEmpty\n                            name=\"inspectionStatus\"\n                            value={filterInput.inspectionStatus}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {inspectionStatusOptions.map(inspectionStatus => (\n                                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"Inspection-input\">\n                            Inspection Date\n                        </InputLabel>\n                        <SmallInput\n                            placeholder=\"From\"\n                            id=\"Inspection-input\"\n                            name=\"inspectionDateFrom\"\n                            value={filterInput.inspectionDateFrom}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.inline}>\n                        <SmallInput\n                            placeholder=\"To\"\n                            id=\"Inspection-input\"\n                            name=\"inspectionDateTo\"\n                            value={filterInput.inspectionDateTo}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Grounding Region\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            displayEmpty\n                            variant=\"outlined\"\n                            name=\"groundingRegion\"\n                            value={filterInput.groundingRegion}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {groundingRegionOptions.map(groundingRegion => (\n                                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"auction-code-input\">\n                            Auction Code\n                        </InputLabel>\n                        <BootstrapInput\n                            placeholder=\"Enter code\"\n                            id=\"auction-code-input\"\n                            name=\"auctionCode\"\n                            value={filterInput.auctionCode}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n            </List>\n            <List className={classes.swipeFilterBtn}>\n                <Button autoFocus className={classes.cancelButton} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={handleOnSubmit}>\n                    Update\n                </Button>\n            </List>\n        </div>\n    );\n\n    const handleSearchText = (value) => {\n        setSearchtext(value)\n    }\n\n    return (\n        <div className={classes.filterStyles}>\n            <Paper component=\"form\" className={classes.searchBlock}>\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                    <SearchIcon />\n                </IconButton>\n                <InputBase\n                    className={classes.filterInput}\n                    placeholder=\"Search\"\n                    inputProps={{ 'aria-label': 'Search' }}\n                    onChange={(evt) => handleSearchText(evt.target.value)}\n                />\n            </Paper>\n            {['right'].map((anchor) => (\n                <React.Fragment key={anchor} >\n                    <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                    >\n                        {list(anchor)}\n                    </SwipeableDrawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilterRRM.js",["366","367","368","369","370"],"import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n    inline: {\n        display: \"inline-block\",\n        marginTop: '25px',\n    },\n    inlineDate: {\n        display: \"inline-block\",\n        marginTop: '135px',\n    },\n    list: {\n        width: 264,\n        height: \"100%\",\n        paddingBottom: \"64px\",\n        position: \"relative\",\n    },\n    fullList: {\n        width: 'auto',\n    },\n    filterStyles: {\n        position: 'absolute',\n        top: \"132px\",\n        left: \"320px\",\n        display: \"flex\",\n        alignContent: \"center\"\n    },\n    textField: {\n        width: \"216px\",\n        borderRadius: \"4px\",\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n    },\n    updateButton: {\n        padding: \"4px 8px\",\n        minWidth: \"114px\",\n        borderRadius: \"4px\",\n        color: \"#ffffff!important\",\n        backgroundColor: \"#c23934!important\",\n    },\n    cancelButton: {\n        padding: \"4px 8px\",\n        minWidth: \"88px\",\n        borderRadius: \"4px\",\n        color: \"#0070d2!important\",\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n    },\n    searchBlock: {\n        border: \"solid 1px #dddbda\",\n        backgroundColor: \"#ffffff\",\n        boxShadow: \"none\",\n    },\n    customSelect: {\n        marginTop: \"24px\",\n        color: \"#706e6b\",\n        fontSize: \"13px\",\n    },\n    selectFormControl: {\n        width: \"100%\"\n    },\n    iconButton: {\n        padding: \"2px 12px\"\n    },\n    filterInput: {\n        height: \"32px\",\n    },\n    swipeFilterBtn: {\n        position: \"absolute\",\n        bottom: \"0\",\n        left: \"0px\",\n        padding: \"8px 16px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n        background: \"#FFF\",\n    },\n    filterResultText: {\n        color: \"#006dcc\",\n        fontSize: \"13px\",\n        lineHeigt: \"20px\",\n        fontWeight: \"500\",\n        textTransform: \"lowercase\",\n        marginLeft: \"16px\",\n    }\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: \"#ffffff\",\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        width: 'auto',\n        height: '10px',\n        padding: '10px 12px',\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: \"#ffffff\",\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        display: 'inline-block',\n        minWidth: '65px',\n        height: '10px',\n        marginRight: '5px',\n        padding: '10px 12px',\n        '&:focus': {\n            borderColor: theme.palette.primary.main,\n        },\n    },\n}))(InputBase);\n\nexport default function SwipableFilterRRM() {\n    const classes = useStyles();\n    const [state, setState] = useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n    const [filterInput, setFilterInput] = useState({\n        vin: '',\n        yearFrom: '',\n        yearTo: '',\n        make: '',\n        inspectionStatus: '',\n        inspectionDateFrom: '',\n        inspectionDateTo: '',\n        groundingRegion: '',\n        auctionCode: ''\n    });\n    const [makeOptions, setMakeOptions] = useState([\n        { value: 'audi', text: 'Audi' },\n        { value: 'bmw', text: 'BMW' },\n        { value: 'benz', text: 'Benz' }\n    ]);\n    const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n        { value: 'pending', text: 'Pending' },\n        { value: 'completed', text: 'Completed' }\n    ]);\n    const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n        { value: 'texas', text: 'Texas' },\n        { value: 'florida', text: 'Florida' },\n        { value: 'indiana', text: 'Indiana' }\n    ]);\n    const [searchtext, setSearchtext] = useState(\"\");\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, [anchor]: open });\n    };\n\n    const handleOnChange = (event) => {\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\n    };\n\n    const handleOnSubmit = () => {\n        console.log(filterInput);\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, { [classes.fullList]: anchor === 'top' || anchor === 'bottom' })}\n            role=\"presentation\"\n        //onClick={toggleDrawer(anchor, false)}\n        //onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {['Filter Options'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"vin-input\">\n                            VIN\n                        </InputLabel>\n                        <BootstrapInput\n                            placeholder=\"Enter full or partial VIN\"\n                            id=\"vin-input\"\n                            name=\"vin\"\n                            value={filterInput.vin}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"year-input\">\n                            Year Range\n                        </InputLabel>\n                        <SmallInput\n                            placeholder=\"From\"\n                            id=\"year-from-input\"\n                            name=\"yearFrom\"\n                            value={filterInput.yearFrom}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.inline}>\n                        <SmallInput\n                            placeholder=\"To\"\n                            id=\"year-to-input\"\n                            name=\"yearTo\"\n                            value={filterInput.yearTo}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Make\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            variant=\"outlined\"\n                            displayEmpty\n                            name=\"make\"\n                            value={filterInput.make}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {makeOptions.map(make => (\n                                <MenuItem value={make.value}>{make.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Inspection Status\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            variant=\"outlined\"\n                            displayEmpty\n                            name=\"inspectionStatus\"\n                            value={filterInput.inspectionStatus}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {inspectionStatusOptions.map(inspectionStatus => (\n                                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"Inspection-input\">\n                            Inspection Date\n                        </InputLabel>\n                        <SmallInput\n                            placeholder=\"From\"\n                            id=\"Inspection-input\"\n                            name=\"inspectionDateFrom\"\n                            value={filterInput.inspectionDateFrom}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.inline}>\n                        <SmallInput\n                            placeholder=\"To\"\n                            id=\"Inspection-input\"\n                            name=\"inspectionDateTo\"\n                            value={filterInput.inspectionDateTo}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl className={classes.selectFormControl}>\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                            Grounding Region\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-placeholder-label-label\"\n                            id=\"demo-simple-select-placeholder-label\"\n                            className={classes.customSelect}\n                            displayEmpty\n                            variant=\"outlined\"\n                            name=\"groundingRegion\"\n                            value={filterInput.groundingRegion}\n                            onChange={handleOnChange}\n                        >\n                            <MenuItem value=\"\" disabled>\n                                Select All that Apply\n                            </MenuItem>\n                            {groundingRegionOptions.map(groundingRegion => (\n                                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </ListItem>\n                <ListItem button>\n                    <FormControl>\n                        <InputLabel shrink htmlFor=\"auction-code-input\">\n                            Auction Code\n                        </InputLabel>\n                        <BootstrapInput\n                            placeholder=\"Enter code\"\n                            id=\"auction-code-input\"\n                            name=\"auctionCode\"\n                            value={filterInput.auctionCode}\n                            onChange={handleOnChange}\n                        />\n                    </FormControl>\n                </ListItem>\n            </List>\n            <List className={classes.swipeFilterBtn}>\n                <Button autoFocus className={classes.cancelButton} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={handleOnSubmit}>\n                    Update\n                </Button>\n            </List>\n        </div>\n    );\n\n    const handleSearchText = (value) => {\n        setSearchtext(value)\n    }\n\n    return (\n        <div className={classes.filterStyles}>\n            <Paper component=\"form\" className={classes.searchBlock}>\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                    <SearchIcon />\n                </IconButton>\n                <InputBase\n                    className={classes.filterInput}\n                    placeholder=\"Search\"\n                    inputProps={{ 'aria-label': 'Search' }}\n                    onChange={(evt) => handleSearchText(evt.target.value)}\n                />\n            </Paper>\n            {['right'].map((anchor) => (\n                <React.Fragment key={anchor} >\n                    <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                    >\n                        {list(anchor)}\n                    </SwipeableDrawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/StatusHistory.js",[],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/PassOnVehicle.js",["371"],"/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/Stepper/VerticalStepper.js",["372","373"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\n}\n\nexport default function VerticalVehicleStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(2);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/GroundPending/Carousel.js",["374"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst tutorialSteps = [\n    {\n        imgPath:\n            'car.jpg',\n    },\n    {\n        imgPath:\n            'car1.jpg',\n    },\n    {\n        imgPath:\n            'car2.jpg',\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 400,\n        flexGrow: 1,\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 50,\n        paddingLeft: theme.spacing(4),\n        backgroundColor: theme.palette.background.default,\n    },\n    img: {\n        height: 255,\n        display: 'block',\n        maxWidth: 400,\n        overflow: 'hidden',\n        width: '100%',\n    },\n}));\n\nfunction SwipeableTextMobileStepper() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = tutorialSteps.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className={classes.root}>\n            <img className=\"img\" src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n\n                    </Button>\n                }\n            />\n        </div>\n    );\n}\n\nexport default SwipeableTextMobileStepper;\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/pages/AdminDetailedReport.js",["375","376","377","378","379","380"],"import React, { useState,useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MyGallery from './ImageGallery';\nimport {getInspectionVehicleDetails} from '../service/api';\nimport moment from 'moment';\n\n\nexport default function AdminDetailedReport(props) {\n    let groundingDetails = {\n        \"Account Number\": \"00000000000\",\n        \"Current Status\": \"Detail\",\n        \"Customer Return Date\": \"00/00/2021\",\n        \"Current Status\": \"Detail\",\n        \"Grounding Dealer Number\": \"00000000000\",\n        \"Grounding Dealer Name\": \"Dealer Name\",\n        \"Grounding Date\": \"00/00/2021\",\n        \"Grounding Mileage\": \"000,000 mi\",\n        \"Transportation Order Date\": \"00/00/2021\",\n        \"Transportation Company\": \"Company Name\",\n        \"Bankruptcy Code\": \"Detail\",\n        \"Term Code\": \"Detail\",\n        \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\n        \"Type\": \"Detail\",\n        \"Residual\": \"$00,000.00\",\n        \"Current Payoff Amount\": \"$00,000.00\",\n        \"Grounding Dealer Auction\": \"Detail\",\n        \"Total Outstanding Remaining Payments\": \"00\",\n        \"Guaranteed Payments\": \"$00,000.00\",\n        \"Payment Guarantee\": \"Yes/No\",\n        \"10-Day Rule No Charge Amount\": \"$00,000.00\",\n        \"Payoff at Grounding\": \"?????\",\n        \"Market Based Price\": \"$00,000.00\",\n        \"Remaining Payments at Grounding\": \"$00,000.00\"\n    };\n    let inspectionDetails = {\n        \"Inspection Scheduled Date\": `${moment(props?.inspectiondata?.inspection_date).format('MM/DD/YYYY')}`,\n        \"Inspection Date\": \"00/00/2021\",\n        \"Inspection Status\": \"Detail\",\n        \"Inspection Mileage\": \"000,000 mi\",\n        \"Master Keys Returned\": \"00\",\n        \"Value Keys Returned\": \"00\",\n        \"Inspection Type\": \"Detail\",\n        \"Excess Wear & Tear Amount\": \"$00,000.00\"\n    };\n\n    let purchaseDetails = {\n        \"Sold Date\": \"00/00/2021\",\n        \"Purchasing Dealer\": \"Dealer Name\",\n        \"Purchase Dealer Number\": \"00000000000\",\n        \"Purchase Type\": \"Detail\",\n        \"Gross Purchase Amount\": \"$00,000.00\",\n        \"Purchasing Dealer Legal Name\": \"Detail\"\n    };\n    const [open, setOpen] = React.useState(false)\n    const [condionVehicleDetails, setCondionVehicleDetails] = useState({})\n    const [vin,setvin] = useState( 'JM3KFBDM0K1698372');\n\n\n    console.log(\"admndetailedreport props:\",props)\n\n\n    useEffect(() => {\n        getConditionVehicleDetails()\n    }, [vin])\n\n    async function getConditionVehicleDetails() {\n        let apiResponse = await getInspectionVehicleDetails(vin);\n        console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\n        setCondionVehicleDetails(apiResponse.data);\n    }\n\n    const handleOpen = () => {\n        setOpen(!open)\n    }\n    const handleClose = () => {\n        setOpen(!open)\n    }\n    return (\n        <div className='conditionPageCard'>\n            <Grid container spacing={3} className=\"ConditionCardReportSpace\">\n                <Grid item xs={5}>\n                    <MyGallery />\n                </Grid>\n                <Grid item xs={7}>\n                    <div className='ConditionReportSection'>\n                        <div className='reportTitle'>\n                            <span>Year Make Model Color</span>\n                        </div>\n                        <span className='ConditionReportInspection'>\n                            <span className='BadgeValue'>Inspection Complete</span>\n                        </span>\n                    </div>\n\n                    <Grid container spacing={3}>\n                        <Card className=\"vehicleSectionCR\">\n                            <Typography variant=\"h6\">Grounding Details</Typography>\n                            <hr />\n                            <CardContent>\n\n                                {Object.entries(groundingDetails).map(([key, value]) => {\n                                    return (\n                                        <List className=\"paddingCSS\">\n                                            <ListItemText>\n                                                <span className=\"textStyle\">\n                                                    <span className=\"textBold\">  {key}  </span>\n\n                                                </span>\n                                            </ListItemText>\n                                            <ListItemSecondaryAction>\n                                                <span className=\"textSize\">{value}</span>\n                                            </ListItemSecondaryAction>\n                                        </List>\n                                    )\n                                })\n                                }\n\n                            </CardContent>\n\n                            <Typography variant=\"h6\">Inspection Details</Typography>\n                            <hr />\n                            <CardContent>\n\n                                {Object.entries(inspectionDetails).map(([key, value]) => {\n                                    return (\n                                        <List className=\"paddingCSS\">\n                                            <ListItemText>\n                                                <span className=\"textStyle\">\n                                                    <span className=\"textBold\">  {key}  </span>\n\n                                                </span>\n                                            </ListItemText>\n                                            <ListItemSecondaryAction>\n                                                <span className=\"textSize\">{value}</span>\n                                            </ListItemSecondaryAction>\n                                        </List>\n                                    )\n                                })\n                                }\n\n                            </CardContent>\n                            <Typography variant=\"h6\">Purchase Details</Typography>\n                            <hr />\n                            <CardContent>\n\n                                {Object.entries(purchaseDetails).map(([key, value]) => {\n                                    return (\n                                        <List className=\"paddingCSS\">\n                                            <ListItemText>\n                                                <span className=\"textStyle\">\n                                                    <span className=\"textBold\">  {key}  </span>\n\n                                                </span>\n                                            </ListItemText>\n                                            <ListItemSecondaryAction>\n                                                <span className=\"textSize\">{value}</span>\n                                            </ListItemSecondaryAction>\n                                        </List>\n                                    )\n                                })\n                                }\n\n                            </CardContent>\n                            <div className=\"disclaimerVRS\">\n                                Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\n                            </div>\n                        </Card>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/CustomisedInput.js",["381","382","383"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 550,\n        marginRight: '50px'\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function CustomizedInputBase(props) {\n    const classes = useStyles();\n    const [searchtext, setSearchtext] = React.useState(\"\");\n    console.log(\"searchtext : \",searchtext)\n\n    const handleSearchText = (value) => {\n        setSearchtext(value)\n        props.searchdetails(searchtext)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Search Vehicle By VIN\"\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\n                onChange={(evt) => handleSearchText(evt.target.value)}\n            />\n        </Paper>\n    );\n}\n","/Users/z003cbv/Desktop/ASPNew/Auction/ASP/src/components/SwipableFilter.js",["384","385","386","387","388"],"import React, {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles({\n  inline: {\n    display: \"inline-block\",\n    marginTop: '25px',\n  },\n  inlineDate: {\n    display: \"inline-block\",\n    marginTop: '135px',\n  },\n  list: {\n    width: 264,\n    height: \"100%\",\n    paddingBottom: \"64px\",\n    position: \"relative\",\n  },\n  fullList: {\n    width: 'auto',\n  },\n  filterStyles: {\n    position: 'absolute',\n    top: \"132px\",\n    left: \"320px\",\n    display: \"flex\",\n    alignContent: \"center\"\n  },\n  textField: {\n    width: \"216px\",\n    borderRadius: \"4px\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  updateButton: {\n    padding: \"4px 8px\",\n    minWidth: \"114px\",\n    borderRadius: \"4px\",\n    color: \"#ffffff!important\",\n    backgroundColor: \"#c23934!important\",\n  },\n  cancelButton: {\n    padding: \"4px 8px\",\n    minWidth: \"88px\",\n    borderRadius: \"4px\",\n    color: \"#0070d2!important\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  searchBlock: {\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"none\",\n  },\n  customSelect: {\n    marginTop: \"24px\",\n    color: \"#706e6b\",\n    fontSize: \"13px\",\n  },\n  selectFormControl: {\n    width: \"100%\" \n  },\n  iconButton: {\n    padding: \"2px 12px\"\n  },\n  filterInput: {\n    height: \"32px\",\n  },\n  swipeFilterBtn: {\n    position: \"absolute\",\n    bottom: \"0\",\n    left: \"0px\",\n    padding: \"8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    background: \"#FFF\",\n  },\n  filterResultText: {\n    color: \"#006dcc\",\n    fontSize: \"13px\",\n    lineHeigt: \"20px\",\n    fontWeight: \"500\",\n    textTransform: \"lowercase\",\n    marginLeft: \"16px\",\n  }\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: \"#ffffff\",\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    height: '10px',\n    padding: '10px 12px',\n    '&:focus': {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: \"#ffffff\",\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    display: 'inline-block',\n    minWidth: '65px',\n    height: '10px',\n    marginRight: '5px',\n    padding: '10px 12px',\n    '&:focus': {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nexport default function SwipableFilter(props) {\n  const { fetchDataBasedOnSearchValue, fetchDataBasedOnFilters, resetFilterList } = props;\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [filterInput, setFilterInput] = useState({\n    vin: '',\n    yearFrom: '',\n    yearTo: '',\n    make: '',\n    inspectionStatus: '',\n    inspectionDateFrom: '',\n    inspectionDateTo: '',\n    groundingRegion: '',\n    auctionCode: ''\n  });\n  const [makeOptions, setMakeOptions] = useState([\n    {value: 'Audi', text: 'Audi'},\n    {value: 'BMW', text: 'BMW'},\n    {value: 'Benz', text: 'Benz'}\n  ]);\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n    {value: 'Pending', text: 'Pending'},\n    {value: 'Completed', text: 'Completed'}\n  ]);\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n    {value: 'Texas', text: 'Texas'},\n    {value: 'Florida', text: 'Florida'},\n    {value: 'Indiana', text: 'Indiana'}\n  ]);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleOnChange = (event) => {\n    setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value }});\n  };\n\n  const resetFilterInput = () => {\n    setFilterInput({\n      vin: '',\n      yearFrom: '',\n      yearTo: '',\n      make: '',\n      inspectionStatus: '',\n      inspectionDateFrom: '',\n      inspectionDateTo: '',\n      groundingRegion: '',\n      auctionCode: ''\n    });\n    resetFilterList();\n    setState({ ...state, ['right']: false });\n  }\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {[classes.fullList]: anchor === 'top' || anchor === 'bottom'})}\n      role=\"presentation\"\n      //onClick={toggleDrawer(anchor, false)}\n      //onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Filter Options'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"vin-input\">\n              VIN\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter full or partial VIN\"\n              id=\"vin-input\"\n              name=\"vin\"\n              value={filterInput.vin}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"year-input\">\n              Year Range\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"year-from-input\"\n              name=\"yearFrom\"\n              value={filterInput.yearFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"year-to-input\"\n              name=\"yearTo\"\n              value={filterInput.yearTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Make\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"make\"\n              value={filterInput.make}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {makeOptions.map(make => (\n                <MenuItem value={make.value}>{make.text}</MenuItem>  \n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Inspection Status\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"inspectionStatus\"\n              value={filterInput.inspectionStatus}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {inspectionStatusOptions.map(inspectionStatus => (\n                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>  \n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"Inspection-input\">\n              Inspection Date\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateFrom\"\n              value={filterInput.inspectionDateFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateTo\"\n              value={filterInput.inspectionDateTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Grounding Region\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              displayEmpty\n              variant=\"outlined\"\n              name=\"groundingRegion\"\n              value={filterInput.groundingRegion}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {groundingRegionOptions.map(groundingRegion => (\n                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>  \n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"auction-code-input\">\n              Auction Code\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter code\"\n              id=\"auction-code-input\"\n              name=\"auctionCode\"\n              value={filterInput.auctionCode}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n      </List>\n      <List className={classes.swipeFilterBtn}>\n        <Button autoFocus className={classes.cancelButton} color=\"primary\" onClick={() => resetFilterInput()}>\n          Cancel\n        </Button>\n        <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={() => fetchDataBasedOnFilters(filterInput)}>\n          Update\n        </Button>\n      </List>\n    </div>\n  );\n\n  const handleSearchText = (value) => {\n    setSearchtext(value)\n  }\n\n  return (\n    <div className={classes.filterStyles}>\n      <Paper component=\"form\" className={classes.searchBlock}>\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n          <SearchIcon />\n        </IconButton>\n        <InputBase\n          className={classes.filterInput}\n          placeholder=\"Search VIN\"\n          inputProps={{ 'aria-label': 'Search' }}\n          value={searchtext || ''}\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\n          onChange={(evt) => handleSearchText(evt.target.value)}\n        />\n      </Paper>\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor} >\n          <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n",{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","severity":1,"message":"394","line":9,"column":10,"nodeType":"395","messageId":"396","endLine":9,"endColumn":18},{"ruleId":"393","severity":1,"message":"397","line":9,"column":20,"nodeType":"395","messageId":"396","endLine":9,"endColumn":29},{"ruleId":"393","severity":1,"message":"398","line":9,"column":43,"nodeType":"395","messageId":"396","endLine":9,"endColumn":52},{"ruleId":"399","severity":1,"message":"400","line":31,"column":45,"nodeType":"401","messageId":"402","endLine":31,"endColumn":50},{"ruleId":"393","severity":1,"message":"403","line":6,"column":48,"nodeType":"395","messageId":"396","endLine":6,"endColumn":59},{"ruleId":"393","severity":1,"message":"404","line":7,"column":20,"nodeType":"395","messageId":"396","endLine":7,"endColumn":33},{"ruleId":"393","severity":1,"message":"405","line":14,"column":8,"nodeType":"395","messageId":"396","endLine":14,"endColumn":22},{"ruleId":"399","severity":1,"message":"400","line":88,"column":69,"nodeType":"401","messageId":"402","endLine":88,"endColumn":74},{"ruleId":"393","severity":1,"message":"406","line":10,"column":7,"nodeType":"395","messageId":"396","endLine":10,"endColumn":10},{"ruleId":"393","severity":1,"message":"407","line":18,"column":7,"nodeType":"395","messageId":"396","endLine":18,"endColumn":14},{"ruleId":"393","severity":1,"message":"408","line":52,"column":9,"nodeType":"395","messageId":"396","endLine":52,"endColumn":16},{"ruleId":"409","severity":1,"message":"410","line":64,"column":8,"nodeType":"411","endLine":64,"endColumn":63,"suggestions":"412"},{"ruleId":"409","severity":1,"message":"413","line":64,"column":9,"nodeType":"414","endLine":64,"endColumn":62},{"ruleId":"393","severity":1,"message":"415","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":14},{"ruleId":"393","severity":1,"message":"416","line":6,"column":5,"nodeType":"395","messageId":"396","endLine":6,"endColumn":11},{"ruleId":"393","severity":1,"message":"417","line":11,"column":10,"nodeType":"395","messageId":"396","endLine":11,"endColumn":18},{"ruleId":"409","severity":1,"message":"413","line":19,"column":7,"nodeType":"418","endLine":19,"endColumn":28},{"ruleId":"419","severity":1,"message":"420","line":19,"column":24,"nodeType":"418","messageId":"421","endLine":19,"endColumn":26},{"ruleId":"419","severity":1,"message":"420","line":36,"column":23,"nodeType":"418","messageId":"421","endLine":36,"endColumn":25},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"423","line":27,"column":9,"nodeType":"395","messageId":"396","endLine":27,"endColumn":19},{"ruleId":"393","severity":1,"message":"424","line":28,"column":9,"nodeType":"395","messageId":"396","endLine":28,"endColumn":28},{"ruleId":"393","severity":1,"message":"425","line":33,"column":17,"nodeType":"395","messageId":"396","endLine":33,"endColumn":23},{"ruleId":"393","severity":1,"message":"426","line":36,"column":12,"nodeType":"395","messageId":"396","endLine":36,"endColumn":17},{"ruleId":"393","severity":1,"message":"427","line":36,"column":19,"nodeType":"395","messageId":"396","endLine":36,"endColumn":27},{"ruleId":"393","severity":1,"message":"428","line":38,"column":12,"nodeType":"395","messageId":"396","endLine":38,"endColumn":31},{"ruleId":"409","severity":1,"message":"429","line":47,"column":7,"nodeType":"411","endLine":47,"endColumn":12,"suggestions":"430"},{"ruleId":"409","severity":1,"message":"431","line":59,"column":7,"nodeType":"411","endLine":59,"endColumn":9,"suggestions":"432"},{"ruleId":"409","severity":1,"message":"433","line":71,"column":8,"nodeType":"411","endLine":71,"endColumn":10,"suggestions":"434"},{"ruleId":"409","severity":1,"message":"435","line":80,"column":8,"nodeType":"411","endLine":80,"endColumn":13,"suggestions":"436"},{"ruleId":"409","severity":1,"message":"437","line":22,"column":3,"nodeType":"395","endLine":22,"endColumn":12,"suggestions":"438"},{"ruleId":"419","severity":1,"message":"420","line":53,"column":23,"nodeType":"418","messageId":"421","endLine":53,"endColumn":25},{"ruleId":"419","severity":1,"message":"420","line":53,"column":79,"nodeType":"418","messageId":"421","endLine":53,"endColumn":81},{"ruleId":"419","severity":1,"message":"420","line":53,"column":107,"nodeType":"418","messageId":"421","endLine":53,"endColumn":109},{"ruleId":"393","severity":1,"message":"439","line":67,"column":9,"nodeType":"395","messageId":"396","endLine":67,"endColumn":22},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"440","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":24},{"ruleId":"393","severity":1,"message":"441","line":9,"column":11,"nodeType":"395","messageId":"396","endLine":9,"endColumn":20},{"ruleId":"393","severity":1,"message":"442","line":13,"column":11,"nodeType":"395","messageId":"396","endLine":13,"endColumn":18},{"ruleId":"393","severity":1,"message":"423","line":25,"column":9,"nodeType":"395","messageId":"396","endLine":25,"endColumn":19},{"ruleId":"393","severity":1,"message":"424","line":26,"column":9,"nodeType":"395","messageId":"396","endLine":26,"endColumn":28},{"ruleId":"393","severity":1,"message":"425","line":31,"column":17,"nodeType":"395","messageId":"396","endLine":31,"endColumn":23},{"ruleId":"393","severity":1,"message":"443","line":32,"column":18,"nodeType":"395","messageId":"396","endLine":32,"endColumn":29},{"ruleId":"393","severity":1,"message":"426","line":35,"column":12,"nodeType":"395","messageId":"396","endLine":35,"endColumn":17},{"ruleId":"393","severity":1,"message":"427","line":35,"column":19,"nodeType":"395","messageId":"396","endLine":35,"endColumn":27},{"ruleId":"393","severity":1,"message":"428","line":37,"column":12,"nodeType":"395","messageId":"396","endLine":37,"endColumn":31},{"ruleId":"409","severity":1,"message":"429","line":44,"column":7,"nodeType":"411","endLine":44,"endColumn":12,"suggestions":"444"},{"ruleId":"409","severity":1,"message":"431","line":56,"column":7,"nodeType":"411","endLine":56,"endColumn":9,"suggestions":"445"},{"ruleId":"409","severity":1,"message":"433","line":68,"column":8,"nodeType":"411","endLine":68,"endColumn":10,"suggestions":"446"},{"ruleId":"409","severity":1,"message":"435","line":77,"column":8,"nodeType":"411","endLine":77,"endColumn":13,"suggestions":"447"},{"ruleId":"393","severity":1,"message":"448","line":1,"column":27,"nodeType":"395","messageId":"396","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"449","line":12,"column":8,"nodeType":"395","messageId":"396","endLine":12,"endColumn":28},{"ruleId":"450","severity":1,"message":"451","line":92,"column":56,"nodeType":"414","messageId":"452","endLine":92,"endColumn":58},{"ruleId":"450","severity":1,"message":"451","line":92,"column":92,"nodeType":"414","messageId":"452","endLine":92,"endColumn":94},{"ruleId":"453","severity":1,"message":"454","line":160,"column":23,"nodeType":"455","endLine":160,"endColumn":87},{"ruleId":"453","severity":1,"message":"454","line":102,"column":41,"nodeType":"455","endLine":102,"endColumn":105},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"456","line":8,"column":8,"nodeType":"395","messageId":"396","endLine":8,"endColumn":18},{"ruleId":"393","severity":1,"message":"457","line":6,"column":8,"nodeType":"395","messageId":"396","endLine":6,"endColumn":20},{"ruleId":"458","severity":1,"message":"459","line":61,"column":5,"nodeType":"460","messageId":"421","endLine":61,"endColumn":18},{"ruleId":"393","severity":1,"message":"461","line":161,"column":9,"nodeType":"395","messageId":"396","endLine":161,"endColumn":27},{"ruleId":"419","severity":1,"message":"420","line":174,"column":23,"nodeType":"418","messageId":"421","endLine":174,"endColumn":25},{"ruleId":"419","severity":1,"message":"420","line":174,"column":79,"nodeType":"418","messageId":"421","endLine":174,"endColumn":81},{"ruleId":"419","severity":1,"message":"420","line":174,"column":107,"nodeType":"418","messageId":"421","endLine":174,"endColumn":109},{"ruleId":"462","severity":1,"message":"463","line":196,"column":9,"nodeType":"455","endLine":196,"endColumn":88},{"ruleId":"462","severity":1,"message":"463","line":218,"column":13,"nodeType":"455","endLine":218,"endColumn":20},{"ruleId":"393","severity":1,"message":"408","line":52,"column":11,"nodeType":"395","messageId":"396","endLine":52,"endColumn":18},{"ruleId":"453","severity":1,"message":"454","line":101,"column":41,"nodeType":"455","endLine":101,"endColumn":105},{"ruleId":"393","severity":1,"message":"464","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":24},{"ruleId":"393","severity":1,"message":"465","line":22,"column":12,"nodeType":"395","messageId":"396","endLine":22,"endColumn":16},{"ruleId":"393","severity":1,"message":"466","line":22,"column":18,"nodeType":"395","messageId":"396","endLine":22,"endColumn":25},{"ruleId":"393","severity":1,"message":"408","line":23,"column":11,"nodeType":"395","messageId":"396","endLine":23,"endColumn":18},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"467","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":14},{"ruleId":"393","severity":1,"message":"427","line":18,"column":19,"nodeType":"395","messageId":"396","endLine":18,"endColumn":27},{"ruleId":"393","severity":1,"message":"468","line":20,"column":22,"nodeType":"395","messageId":"396","endLine":20,"endColumn":33},{"ruleId":"393","severity":1,"message":"469","line":35,"column":11,"nodeType":"395","messageId":"396","endLine":35,"endColumn":30},{"ruleId":"393","severity":1,"message":"470","line":58,"column":17,"nodeType":"395","messageId":"396","endLine":58,"endColumn":19},{"ruleId":"393","severity":1,"message":"471","line":69,"column":11,"nodeType":"395","messageId":"396","endLine":69,"endColumn":36},{"ruleId":"393","severity":1,"message":"472","line":74,"column":17,"nodeType":"395","messageId":"396","endLine":74,"endColumn":25},{"ruleId":"393","severity":1,"message":"465","line":66,"column":12,"nodeType":"395","messageId":"396","endLine":66,"endColumn":16},{"ruleId":"393","severity":1,"message":"473","line":68,"column":11,"nodeType":"395","messageId":"396","endLine":68,"endColumn":26},{"ruleId":"393","severity":1,"message":"422","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":25},{"ruleId":"393","severity":1,"message":"474","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":15},{"ruleId":"393","severity":1,"message":"475","line":7,"column":8,"nodeType":"395","messageId":"396","endLine":7,"endColumn":16},{"ruleId":"393","severity":1,"message":"476","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":22},{"ruleId":"393","severity":1,"message":"477","line":36,"column":12,"nodeType":"395","messageId":"396","endLine":36,"endColumn":22},{"ruleId":"393","severity":1,"message":"478","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":14},{"ruleId":"393","severity":1,"message":"479","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":22},{"ruleId":"393","severity":1,"message":"427","line":13,"column":19,"nodeType":"395","messageId":"396","endLine":13,"endColumn":27},{"ruleId":"409","severity":1,"message":"433","line":19,"column":8,"nodeType":"411","endLine":19,"endColumn":15,"suggestions":"480"},{"ruleId":"393","severity":1,"message":"427","line":12,"column":19,"nodeType":"395","messageId":"396","endLine":12,"endColumn":27},{"ruleId":"393","severity":1,"message":"481","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":25},{"ruleId":"393","severity":1,"message":"482","line":8,"column":10,"nodeType":"395","messageId":"396","endLine":8,"endColumn":16},{"ruleId":"393","severity":1,"message":"483","line":8,"column":18,"nodeType":"395","messageId":"396","endLine":8,"endColumn":27},{"ruleId":"393","severity":1,"message":"484","line":9,"column":25,"nodeType":"395","messageId":"396","endLine":9,"endColumn":41},{"ruleId":"393","severity":1,"message":"485","line":218,"column":11,"nodeType":"395","messageId":"396","endLine":218,"endColumn":18},{"ruleId":"393","severity":1,"message":"485","line":232,"column":11,"nodeType":"395","messageId":"396","endLine":232,"endColumn":18},{"ruleId":"393","severity":1,"message":"482","line":7,"column":10,"nodeType":"395","messageId":"396","endLine":7,"endColumn":16},{"ruleId":"393","severity":1,"message":"483","line":7,"column":18,"nodeType":"395","messageId":"396","endLine":7,"endColumn":27},{"ruleId":"393","severity":1,"message":"484","line":8,"column":25,"nodeType":"395","messageId":"396","endLine":8,"endColumn":41},{"ruleId":"393","severity":1,"message":"486","line":10,"column":9,"nodeType":"395","messageId":"396","endLine":10,"endColumn":24},{"ruleId":"393","severity":1,"message":"487","line":11,"column":9,"nodeType":"395","messageId":"396","endLine":11,"endColumn":23},{"ruleId":"393","severity":1,"message":"488","line":12,"column":9,"nodeType":"395","messageId":"396","endLine":12,"endColumn":24},{"ruleId":"393","severity":1,"message":"489","line":13,"column":9,"nodeType":"395","messageId":"396","endLine":13,"endColumn":24},{"ruleId":"393","severity":1,"message":"464","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":24},{"ruleId":"393","severity":1,"message":"490","line":11,"column":8,"nodeType":"395","messageId":"396","endLine":11,"endColumn":13},{"ruleId":"393","severity":1,"message":"491","line":12,"column":8,"nodeType":"395","messageId":"396","endLine":12,"endColumn":18},{"ruleId":"393","severity":1,"message":"492","line":13,"column":8,"nodeType":"395","messageId":"396","endLine":13,"endColumn":18},{"ruleId":"393","severity":1,"message":"465","line":50,"column":12,"nodeType":"395","messageId":"396","endLine":50,"endColumn":16},{"ruleId":"393","severity":1,"message":"466","line":50,"column":18,"nodeType":"395","messageId":"396","endLine":50,"endColumn":25},{"ruleId":"393","severity":1,"message":"408","line":51,"column":11,"nodeType":"395","messageId":"396","endLine":51,"endColumn":18},{"ruleId":"393","severity":1,"message":"493","line":52,"column":11,"nodeType":"395","messageId":"396","endLine":52,"endColumn":22},{"ruleId":"393","severity":1,"message":"448","line":1,"column":27,"nodeType":"395","messageId":"396","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"494","line":167,"column":25,"nodeType":"395","messageId":"396","endLine":167,"endColumn":39},{"ruleId":"393","severity":1,"message":"495","line":172,"column":37,"nodeType":"395","messageId":"396","endLine":172,"endColumn":63},{"ruleId":"393","severity":1,"message":"496","line":176,"column":36,"nodeType":"395","messageId":"396","endLine":176,"endColumn":61},{"ruleId":"393","severity":1,"message":"477","line":181,"column":12,"nodeType":"395","messageId":"396","endLine":181,"endColumn":22},{"ruleId":"393","severity":1,"message":"448","line":1,"column":27,"nodeType":"395","messageId":"396","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"494","line":167,"column":25,"nodeType":"395","messageId":"396","endLine":167,"endColumn":39},{"ruleId":"393","severity":1,"message":"495","line":172,"column":37,"nodeType":"395","messageId":"396","endLine":172,"endColumn":63},{"ruleId":"393","severity":1,"message":"496","line":176,"column":36,"nodeType":"395","messageId":"396","endLine":176,"endColumn":61},{"ruleId":"393","severity":1,"message":"477","line":181,"column":12,"nodeType":"395","messageId":"396","endLine":181,"endColumn":22},{"ruleId":null,"fatal":true,"severity":2,"message":"497","line":64,"column":27},{"ruleId":"393","severity":1,"message":"498","line":35,"column":11,"nodeType":"395","messageId":"396","endLine":35,"endColumn":21},{"ruleId":"393","severity":1,"message":"499","line":39,"column":11,"nodeType":"395","messageId":"396","endLine":39,"endColumn":21},{"ruleId":"393","severity":1,"message":"500","line":58,"column":11,"nodeType":"395","messageId":"396","endLine":58,"endColumn":27},{"ruleId":"458","severity":1,"message":"501","line":19,"column":9,"nodeType":"460","messageId":"421","endLine":19,"endColumn":25},{"ruleId":"393","severity":1,"message":"502","line":61,"column":12,"nodeType":"395","messageId":"396","endLine":61,"endColumn":33},{"ruleId":"393","severity":1,"message":"503","line":62,"column":16,"nodeType":"395","messageId":"396","endLine":62,"endColumn":22},{"ruleId":"409","severity":1,"message":"435","line":70,"column":8,"nodeType":"411","endLine":70,"endColumn":13,"suggestions":"504"},{"ruleId":"393","severity":1,"message":"505","line":78,"column":11,"nodeType":"395","messageId":"396","endLine":78,"endColumn":21},{"ruleId":"393","severity":1,"message":"506","line":81,"column":11,"nodeType":"395","messageId":"396","endLine":81,"endColumn":22},{"ruleId":"393","severity":1,"message":"474","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":15},{"ruleId":"393","severity":1,"message":"475","line":7,"column":8,"nodeType":"395","messageId":"396","endLine":7,"endColumn":16},{"ruleId":"393","severity":1,"message":"476","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":22},{"ruleId":"393","severity":1,"message":"448","line":1,"column":26,"nodeType":"395","messageId":"396","endLine":1,"endColumn":35},{"ruleId":"393","severity":1,"message":"494","line":168,"column":23,"nodeType":"395","messageId":"396","endLine":168,"endColumn":37},{"ruleId":"393","severity":1,"message":"495","line":173,"column":35,"nodeType":"395","messageId":"396","endLine":173,"endColumn":61},{"ruleId":"393","severity":1,"message":"496","line":177,"column":34,"nodeType":"395","messageId":"396","endLine":177,"endColumn":59},{"ruleId":"507","severity":1,"message":"508","line":208,"column":26,"nodeType":"509","messageId":"510","endLine":208,"endColumn":42,"fix":"511"},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'OktaContext' is defined but never used.","'toRelativeUrl' is defined but never used.","'GroundPending1' is defined but never used.","'Nav' is assigned a value but never used.","'NavIcon' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["514"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'Search' is defined but never used.","'styles' is assigned a value but never used.","'isSubmit' is assigned a value but never used.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useState' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOEMBuildDetails'. Either include it or remove the dependency array.",["515"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["516"],"React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["517"],"React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["518"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["519"],"'setSearchData' is assigned a value but never used.","'OktaSignInWidget' is defined but never used.","'onSuccess' is assigned a value but never used.","'onError' is assigned a value but never used.","'setPageName' is assigned a value but never used.",["520"],["521"],["522"],["523"],"'useEffect' is defined but never used.","'ManualPricingSideBar' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","unexpectedMixedOperator","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SearchText' is defined but never used.","'ListItemIcon' is defined but never used.","no-dupe-keys","Duplicate key 'font-weight'.","ObjectExpression","'accountInformation' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'TextareaAutosize' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Link' is defined but never used.","'setProgress' is assigned a value but never used.","'openConditionReport' is assigned a value but never used.","'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'Button' is defined but never used.","'LinearProgress' is defined but never used.",["524"],"'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'options' is assigned a value but never used.","'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","Parsing error: Unexpected reserved word 'await'.\n\n\u001b[0m \u001b[90m 62 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 63 |\u001b[39m     \u001b[36mconst\u001b[39m handleProceed \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 64 |\u001b[39m         \u001b[36mlet\u001b[39m apiResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m postDealerActionPassOnVehicle(props\u001b[33m.\u001b[39mvin)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 65 |\u001b[39m         setOpen(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 66 |\u001b[39m         props\u001b[33m.\u001b[39mclose()\u001b[0m\n\u001b[0m \u001b[90m 67 |\u001b[39m     }\u001b[33m;\u001b[39m\u001b[0m","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleStepChange' is assigned a value but never used.","Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.",["525"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['right'] found.","Property","unnecessarilyComputedProperty",{"range":"526","text":"527"},"no-global-assign","no-unsafe-negation",{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"530","fix":"540"},{"desc":"532","fix":"541"},{"desc":"534","fix":"542"},{"desc":"536","fix":"543"},{"desc":"544","fix":"545"},{"desc":"536","fix":"546"},[5201,5210],"'right'","Update the dependencies array to be: [props.location.state]",{"range":"547","text":"548"},"Update the dependencies array to be: [getOEMBuildDetails, vin]",{"range":"549","text":"550"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"551","text":"552"},"Update the dependencies array to be: [getVehicleDetails]",{"range":"553","text":"554"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"555","text":"556"},"Add dependencies array: []",{"range":"557","text":"558"},{"range":"559","text":"550"},{"range":"560","text":"552"},{"range":"561","text":"554"},{"range":"562","text":"556"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"563","text":"564"},{"range":"565","text":"556"},[1811,1866],"[props.location.state]",[2472,2477],"[getOEMBuildDetails, vin]",[2702,2704],"[getInspectionDamageDetails]",[3002,3004],"[getVehicleDetails]",[3294,3299],"[getConditionVehicleDetails, vin]",[1280,1280],", []",[2466,2471],[2696,2698],[2996,2998],[3288,3293],[1746,1753],"[getVehicleDetails, value]",[2734,2739]]