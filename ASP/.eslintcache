[{"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/index.js":"1","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/App.js":"2","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/reportWebVitals.js":"3","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/theme.js":"4","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Home.js":"5","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/InventoryRequestsTabs.js":"6","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Login2.js":"7","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Sidebar.js":"8","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/AdminHome.js":"9","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Grounded.js":"10","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending1.js":"11","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending.js":"12","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ConditionReportRequests.js":"13","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/VINSearch.js":"14","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending2.js":"15","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Header/Header.js":"16","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ConditionReport.js":"17","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/ManualPricing.js":"18","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/VehicleInformation.js":"19","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/AdminVehicleSearch.js":"20","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/RRMApproval.js":"21","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/NotesSection.js":"22","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/NewSideBar.js":"23","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/ManualPricingSideBar.js":"24","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/MileageDisc.js":"25","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Tabs.js":"26","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/TransactionModal.js":"27","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundVehicleMFS.js":"28","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundVehiclePLV.js":"29","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Search/Search.js":"30","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/groundedListPage.js":"31","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/passedPage.js":"32","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ViewDetailedReport.js":"33","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ImageGallery.js":"34","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SearchText/Search.js":"35","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/purchasedPage.js":"36","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/service/api.js":"37","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Separator.js":"38","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/AdminSearchHeader.js":"39","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/PurchasedPricingSideBar.js":"40","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Pagination.js":"41","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/StatusHistory.js":"42","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/LoaderPage.js":"43","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/Carousel.js":"44","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/PassOnVehicle.js":"45","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/AdminDetailedReport.js":"46","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/ExclusivityPeriod.js":"47","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Stepper/VerticalStepper.js":"48","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilterMileage.js":"49","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilterRRM.js":"50","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/CustomisedInput.js":"51","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilter.js":"52"},{"size":643,"mtime":1631725669503,"results":"53","hashOfConfig":"54"},{"size":3434,"mtime":1634287699170,"results":"55","hashOfConfig":"54"},{"size":362,"mtime":1631725669513,"results":"56","hashOfConfig":"54"},{"size":306,"mtime":1631725669516,"results":"57","hashOfConfig":"54"},{"size":475,"mtime":1631725669511,"results":"58","hashOfConfig":"54"},{"size":2762,"mtime":1631725669493,"results":"59","hashOfConfig":"54"},{"size":1383,"mtime":1634832607027,"results":"60","hashOfConfig":"54"},{"size":3570,"mtime":1633916422939,"results":"61","hashOfConfig":"54"},{"size":1633,"mtime":1633482961281,"results":"62","hashOfConfig":"54"},{"size":657,"mtime":1631725669511,"results":"63","hashOfConfig":"54"},{"size":227,"mtime":1633482961294,"results":"64","hashOfConfig":"54"},{"size":231,"mtime":1631725669508,"results":"65","hashOfConfig":"54"},{"size":54115,"mtime":1633482961289,"results":"66","hashOfConfig":"54"},{"size":9504,"mtime":1631725669510,"results":"67","hashOfConfig":"54"},{"size":219,"mtime":1631725669509,"results":"68","hashOfConfig":"54"},{"size":1930,"mtime":1635300682177,"results":"69","hashOfConfig":"54"},{"size":41772,"mtime":1635324235335,"results":"70","hashOfConfig":"54"},{"size":19630,"mtime":1633482961270,"results":"71","hashOfConfig":"54"},{"size":8252,"mtime":1631725669503,"results":"72","hashOfConfig":"54"},{"size":1401,"mtime":1631725669492,"results":"73","hashOfConfig":"54"},{"size":24217,"mtime":1633482961278,"results":"74","hashOfConfig":"54"},{"size":2214,"mtime":1631725669496,"results":"75","hashOfConfig":"54"},{"size":5796,"mtime":1634832607014,"results":"76","hashOfConfig":"54"},{"size":4613,"mtime":1631725669495,"results":"77","hashOfConfig":"54"},{"size":17511,"mtime":1633916422936,"results":"78","hashOfConfig":"54"},{"size":2510,"mtime":1634287676038,"results":"79","hashOfConfig":"54"},{"size":6650,"mtime":1633482961308,"results":"80","hashOfConfig":"54"},{"size":315,"mtime":1631725669509,"results":"81","hashOfConfig":"54"},{"size":299,"mtime":1631725669509,"results":"82","hashOfConfig":"54"},{"size":1411,"mtime":1631725669498,"results":"83","hashOfConfig":"54"},{"size":15869,"mtime":1635300815657,"results":"84","hashOfConfig":"54"},{"size":7431,"mtime":1635300682184,"results":"85","hashOfConfig":"54"},{"size":31454,"mtime":1635300682205,"results":"86","hashOfConfig":"54"},{"size":3470,"mtime":1635300682187,"results":"87","hashOfConfig":"54"},{"size":1279,"mtime":1631725669498,"results":"88","hashOfConfig":"54"},{"size":9390,"mtime":1635300682186,"results":"89","hashOfConfig":"54"},{"size":21949,"mtime":1635323304795,"results":"90","hashOfConfig":"54"},{"size":247,"mtime":1631725669499,"results":"91","hashOfConfig":"54"},{"size":1809,"mtime":1634832607009,"results":"92","hashOfConfig":"54"},{"size":8233,"mtime":1634832607015,"results":"93","hashOfConfig":"54"},{"size":3133,"mtime":1631725669496,"results":"94","hashOfConfig":"54"},{"size":3068,"mtime":1631725669501,"results":"95","hashOfConfig":"54"},{"size":299,"mtime":1634832607026,"results":"96","hashOfConfig":"54"},{"size":3875,"mtime":1634832607020,"results":"97","hashOfConfig":"54"},{"size":3272,"mtime":1633482961306,"results":"98","hashOfConfig":"54"},{"size":6319,"mtime":1631725669504,"results":"99","hashOfConfig":"54"},{"size":2645,"mtime":1635300682181,"results":"100","hashOfConfig":"54"},{"size":4654,"mtime":1634832607016,"results":"101","hashOfConfig":"54"},{"size":12548,"mtime":1631725669502,"results":"102","hashOfConfig":"54"},{"size":12544,"mtime":1631725669502,"results":"103","hashOfConfig":"54"},{"size":1653,"mtime":1631725669492,"results":"104","hashOfConfig":"54"},{"size":13196,"mtime":1631725669502,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"ijm02j",{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"108"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"108"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"108"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"108"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"108"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"108"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"108"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"108"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"108"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"253","usedDeprecatedRules":"108"},"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/index.js",[],["254","255"],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/App.js",["256","257","258","259","260"],"import \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Header from \"./components/Header/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport Home from \"./pages/Home\";\nimport GroundPending from \"./pages/GroundPending/GroundPending\";\nimport GroundPending1 from \"./pages/GroundPending/GroundPending1\";\nimport GroundPending2 from \"./pages/GroundPending/GroundPending2\";\nimport { Grounded, Grounded1, LastChance, Purchased } from \"./pages/Grounded\";\nimport \"../src/assets/WebFont/ToyotaType-Book.ttf\";\nimport \"../src/sass/main.scss\";\nimport VINSearch from \"./pages/GroundPending/VINSearch\";\nimport ConditionReport from \"./pages/ConditionReport\";\nimport AdminHome from \"./pages/AdminHome\";\nimport ConditionReportRequests from \"./pages/ConditionReportRequests\";\nimport InventoryRequestsTabs from \"./components/InventoryRequestsTabs\";\nimport Login2 from \"./pages/Login2\";\nfunction App() {\n  const [stateUpdate, setStateUpdate] = useState(1);\n  const fireEvents = () => {\n    setStateUpdate(stateUpdate + 1);\n  };\n\n  return (\n    <>\n      <div>\n        <Router>\n          <Header></Header>\n          <div>\n            <Sidebar stateUpdate={stateUpdate}>\n              <Switch>\n              <Route\n                  path=\"/\"\n                  exact\n                  exact\n                  render={(props) => <GroundPending {...props} fireEvents={fireEvents}\n                  />}\n                />\n                <Route\n                  path=\"/home\"\n                  exact\n                  render={(props) => <Home {...props} />}\n                />\n                <Route path=\"/adminSearch\" exact component={AdminHome} />\n                <Route path=\"/checkinvehicle\" exact component={VINSearch} />\n                <Route\n                  path=\"/grounded\"\n                  exact\n                  exact\n                  render={(props) => <GroundPending {...props} fireEvents={fireEvents}\n                  />}\n                />\n                <Route path=\"/passed\" exact render={(props) => <GroundPending1 {...props} />} />\n                <Route path=\"/purchased\" exact component={GroundPending2} />\n                <Route\n                  path=\"/grounded/lastchance\"\n                  exact\n                  component={LastChance}\n                />\n\n                <Route\n                  path=\"/adminInventoryRequests\"\n                  exact\n                  component={InventoryRequestsTabs}\n                />\n                <Route\n                  path=\"/conditionreportRequests\"\n                  exact\n                  render={(props) => <ConditionReportRequests {...props} />}\n                />\n                <Route\n                  path=\"/conditionreport:vin\"\n                  exact\n                  render={(props) => <ConditionReport {...props} />}\n                />\n                <Route\n                  path=\"/conditionreport\"\n                  exact\n                  render={(props) => <ConditionReport {...props} />}\n                />\n                <Route\n                  path=\"/login2\"\n                  exact\n                  render={(props) => <Login2 {...props} />}\n                />\n              </Switch>\n            </Sidebar>\n          </div>\n        </Router>\n      </div>\n      {/* <Router>\n        <AppWithRouterAccess />\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/reportWebVitals.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/theme.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Home.js",["261","262"],"import React from 'react';\nimport Search from '../components/Search/Search';\nimport VehicleInformation from '../components/VehicleInformation';\n\n\nlet styles = {\n  homesearch: {\n    'width': '371px',\n    'height': '32px',\n    'margin': '3px 0 0',\n    'padding': '7px 9px 8px 12px',\n    'border-radius': '4px',\n    'border': 'solid 1px #dddbda',\n    'background-color': '#ffffff'\n\n  },\n}\nconst Home = () => {\n  return (\n    <VehicleInformation />\n  );\n};\n\nexport default Home;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/InventoryRequestsTabs.js",["263","264","265","266"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ManualPricing from './ManualPricing';\nimport RRMApproval from './RRMApproval';\nimport MileageDisc from './MileageDisc'\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3} pt={16}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n}));\n\nexport default function InventoryRequestsTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  useEffect(() => {\n    if (props.location.state && props.location.state.pageName === 'RRMApproval') {\n      setValue(1)\n    } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\n      setValue(0)\n    }\n    else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\n      setValue(2)\n    }\n  }, [props.location.state && props.location.state.pageName]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n      <AppBar position=\"fixed\" className='topBarAdmin'>\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className='tabset'>\n          <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\n          <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\n          <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\n          {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <ManualPricing props={props} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <RRMApproval props={props} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <MileageDisc props={props} />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <h2>No Inspections</h2>\n      </TabPanel>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Login2.js",["267","268","269","270"],"import React,{ useState, useEffect } from 'react'\nimport { getAccessTokenEndpoint, getUserInfoToken } from '../service/api';\n\n\n\n\n\n\nfunction Login2(props) {\n\n  let data1 = getParameterByName(\"code\");\nfunction getParameterByName(name, url = window.location.href) {\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n  const [token, setToken] = useState();\n  const [dealerCode, setDealerCode] = useState('');\n  useEffect(() => {\n    getToken();\n    // getUserAccessInfoToken();\n  }, {});\n  useEffect(() => {\n    getUserAccessInfoToken();\n  }, [token]);\n  async function getToken() {\n    let apiResponse = await getAccessTokenEndpoint(data1);\n    console.log(\"--->\",apiResponse)\n    setToken(apiResponse?.data.access_token);\n  }\n  async function getUserAccessInfoToken(){\n  let resp = await getUserInfoToken(token);\n  setDealerCode(resp.data.custom_attributes.dealerCode);\n  localStorage.setItem(\"dealerCode\",resp.data.custom_attributes.dealerCode);\n  localStorage.setItem(\"dealerName\",resp.data.custom_attributes.dealerName);\n  props.history.push('/grounded')\n\n  console.log(dealerCode);\n  }\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nexport default Login2\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Sidebar.js",["271","272"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n\nimport NewSidebar from './NewSideBar'\nimport \"./SideBar.scss\"\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginTop: 52,\n    backgroundColor: 'white',\n    color: 'black',\n    boxShadow: '0px 0px 3px grey',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    top: 52,\n    height: 'calc(100% - 52px) !important',\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n    top: 52,\n    height: 'calc(100% - 52px) !important',\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n    fontSize: 18,\n    fontWeight: 600\n  },\n  content: {\n    flexGrow: 1,\n  },\n  closeIcon: {\n    border: '1px solid'\n  }\n\n}));\n\nconst Sidebar = (props) => {\n  const { children } = props\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerClose = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar} >\n          {open ? <div> Main Menu</div> : ''}\n          <IconButton onClick={handleDrawerClose}>\n            {open ? <ChevronLeftIcon className={classes.closeIcon} /> : <ChevronRightIcon className={classes.closeIcon} />}\n          </IconButton>\n        </div>\n        <Divider />\n        {open ? <NewSidebar stateUpdate={props.stateUpdate}></NewSidebar> : \"\"}\n      </Drawer>\n      <main className={classes.content}>\n        {children}\n      </main>\n    </div>\n  );\n}\n\n\nexport default Sidebar;","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/AdminHome.js",["273","274","275"],"import React,{useState,useEffect} from 'react';\nimport AdminVehicleSearch from '../components/AdminVehicleSearch';\nimport Grid from '@material-ui/core/Grid';\nimport VehicleSearchTabs from '../components/Tabs';\nimport NotesSection from '../components/NotesSection';\nimport {getInspectionVehicleDetails} from '../service/api';\n\n\nconst AdminHome = (props) => {\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [isSubmit,setisSubmit] = useState(false);\n  const [inspectiondata,setinspectiondata]=useState([])\n\n  console.log(\"inspectiondata\",inspectiondata)\n\n\n  useEffect(() => {\n    getConditionVehicleDetails()\n  }, [searchText.length==15])\n\n  async function getConditionVehicleDetails() {\n    let apiResponse = await getInspectionVehicleDetails(\"JM3KFBDM0K1698372\");\n    console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\n    setinspectiondata(apiResponse.data)\n}\n\n  const handleSubmitbtn = () =>{\n    //setisSubmit(true);\n  }\n  const handleSearch = (text) => {\n    console.log(\"home\",text)\n    setSearchText(text);\n    if(text.length > 15){\n      setisSubmit(true);\n    }\n    \n    //openConditionScreen(text,\"\")\n  }\n  const openConditionScreen = (VINumber, vehicle) => {\n    // props.history.push(\"/conditionreport\", {\n    //   vin: VINumber,\n    //   vehicleDetails: vehicle,\n    // });\n  };\n  return (\n    (isSubmit) ? (<Grid container><Grid xs={10}><VehicleSearchTabs inspectiondata={inspectiondata} /></Grid><Grid xs={2}><NotesSection /></Grid></Grid>) : (<AdminVehicleSearch fromchildhandleSubmitbtn={handleSubmitbtn} searchdetails={(text) => handleSearch(text)} />)\n  );\n};\n\nexport default AdminHome;","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/Grounded.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending1.js",["276"],"import React, { useState } from 'react';\nimport ListingPage1 from './passedPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage1 {...props}></ListingPage1>\n    </div>\n  );\n};","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending.js",["277"],"import React, { useState } from 'react';\nimport ListingPage from './groundedListPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage {...props}></ListingPage>\n    </div>\n  );\n};\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ConditionReportRequests.js",["278","279","280","281","282","283","284","285","286","287"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ViewDetailedReport from \"./ViewDetailedReport\";\nimport MyGallery from \"./ImageGallery\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  getPassedList1,\n  getInspectionDamageDetailsApi,\n  getOEMBuildDetailsApi,\n} from \"../service/api\";\nimport {\n  getInspectionVehicleDetails,\n  getInspectionAccessoryDetails,\n  getInspectionWheelTiresDetails,\n} from \"../service/api\";\nimport ManualPricingSideBar from \"../components/ManualPricingSideBar\";\nimport { Box } from \"@material-ui/core\";\nimport TransactionModal from \"./TransactionModal\";\n\nexport default function ConditionReportRequests(props) {\n  let listOfItem = [\n    \"VIN\",\n    \"Engine\",\n    \"Door\",\n    \"Body Style\",\n    \"Transmission\",\n    \"Drive Train\",\n    \"Interior type\",\n    \"Interior Color\",\n    \"Keys\",\n    \"Interior Type\",\n    \"Odor\",\n    \"Grounding Mileage\",\n    \"Account Type\",\n  ];\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\n  const [open, setOpen] = React.useState(false);\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});\n  const [accessoryDetails, setAccessoryDetails] = React.useState({});\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\n  const [vin, setVin] = React.useState(props?.match?.params?.vin);\n  const [pageName, setPageName] = React.useState(\n    props?.location?.state?.pageName\n  );\n  const [inspectionId, setInspectionId] = React.useState([]);\n  const [VehicleResponse, setVehicleResponse] = useState([]);\n  const [value, setValue] = useState([]);\n  const [DamageDetails, setDamageDetails] = useState([]);\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\n\n  // const [openTransactionPopup, setOpenTransactionPopup] = useState(true);\n\n  useEffect(() => {\n    getOEMBuildDetails();\n    getConditionVehicleDetails();\n    getVehicleDetails();\n  }, [vin]);\n\n  async function getOEMBuildDetails() {\n    let apiResponse = await getOEMBuildDetailsApi(vin);\n    setOEMBuildDetailsData(apiResponse.data);\n  }\n\n  useEffect(() => {\n    getInspectionDamageDetails();\n  }, []);\n\n  async function getInspectionDamageDetails() {\n    let getInspectionDamageDetailsaApiResponse =\n      await getInspectionDamageDetailsApi(inspectionId, vin);\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\n  }\n  async function getVehicleDetails() {\n    let apiResponse = await getPassedList1();\n    setVehicleResponse(apiResponse.data.data);\n    console.log(VehicleResponse.data);\n  }\n\n  useEffect(() => {\n    getInspectionAccessory(inspectionId);\n    getInspectionWheelTires(inspectionId);\n  }, [inspectionId]);\n\n  async function getConditionVehicleDetails() {\n    let apiResponse = await getInspectionVehicleDetails(vin);\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\n    setCondionVehicleDetails(apiResponse.data);\n    setInspectionId(apiResponse.data.inspection_id);\n  }\n\n  async function getInspectionAccessory(inspectionId) {\n    let apiResponse = await getInspectionAccessoryDetails(inspectionId);\n    setAccessoryDetails(apiResponse.data);\n  }\n\n  async function getInspectionWheelTires(inspectionId) {\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\n    setWheelTiresDetails(apiResponse.data);\n  }\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <>\n      <div className=\"conditionTopBar\">\n        <Box p={1} textAlign=\"right\">\n          <Link\n            to={{\n              pathname: \"/adminInventoryRequests\",\n              state: { pageName: pageName },\n            }}\n          >\n            {pageName}\n          </Link>\n        </Box>\n      </div>\n      <Box p={2} pt={14}>\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <MyGallery />\n            <Grid container className=\"ConditionCardBody\">\n              <div className=\"damageTitle\">\n                <span>Damage Report</span>\n              </div>\n              <Grid item xs={4}>\n                <Card className=\"ConditionCardDamage\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Exterior total</div>\n                    <div className=\"smallCardBody warningColor\">\n                      {DamageDetails.exteriorCost\n                        ? DamageDetails.exteriorCost\n                        : \"NA\"}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={4}>\n                <Card className=\"ConditionCardDamage\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Interior total</div>\n                    <div className=\"smallCardBody warningColor\">\n                      {DamageDetails.interiorCost\n                        ? DamageDetails.interiorCost\n                        : \"NA\"}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={4}>\n                <Card className=\"ConditionCardDamage\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Mechanical total</div>\n                    <div className=\"smallCardBody warningColor\">\n                      {DamageDetails.maintainenceCost\n                        ? DamageDetails.maintainenceCost\n                        : \"NA\"}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className=\"detailedReport\"\n                  onClick={handleOpen}\n                >\n                  View Full Detailed Report\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <div className=\"disclaimer\">\n                  Disclaimer: Damage estimates are included for reference and\n                  may not be reflective of the actual repair costs\n                </div>\n              </Grid>\n            </Grid>\n            <div className=\"LabelTextTextArea\">Announcements</div>\n            <TextareaAutosize\n              className=\"inputFieldTextArea\"\n              aria-label=\"maximum height\"\n              placeholder=\"Maximum 4 rows\"\n              defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <Box display=\"flex\" justifyContent=\"space-between\" py={2}>\n              <div className=\"reportTitle\">\n                <span>MAZDA SD 2019 </span>\n              </div>\n              <span className=\"ConditionReportInspection\">\n                <span className=\"BadgeValue\">Inspection Complete</span>\n              </span>\n            </Box>\n            <Grid container spacing={2}>\n              <Grid item md={4}>\n                <Card className=\"ConditionCard\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Payoff</div>\n                    <div className=\"smallCardBody\">$12,000.00</div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item md={4}>\n                <Card className=\"ConditionCard\">\n                  <CardContent>\n                    <div className=\"smallCardTitle1\">Residual + Remaining</div>\n                    <div className=\"smallCardBody\">$11,250.00</div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item md={4}>\n                <Card className=\"ConditionCard\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Market Based</div>\n                    <div className=\"smallCardBody\">$10,500.00</div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item md={4}>\n                <Card className=\"ConditionCard\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Inspection Grade</div>\n                    <div className=\"smallCardBody\">\n                      {condionVehicleDetails.condition_grade}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item md={4}>\n                <Card className=\"ConditionCard\">\n                  <CardContent>\n                    <div className=\"smallCardTitle\">Odometer</div>\n                    <div className=\"smallCardBody\">\n                      {condionVehicleDetails.inspection_mileage}\n                    </div>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item md={12}>\n                <Box mt={2}>\n                  <Card>\n                    <Box p={2}>\n                      <Typography variant=\"h6\">Vehicle Details</Typography>\n                      <hr />\n                      <CardContent>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> VIN </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">{vin}</span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\">\n                                {\" \"}\n                                Inspection Date{\" \"}\n                              </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails.inspection_date}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\">\n                                {\" \"}\n                                Inspection Location{\" \"}\n                              </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails.location_address}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span>.</span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails.location_address2}\n                              {condionVehicleDetails.location_city}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span> . </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails.location_code}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Consignor </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.location_address}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Engine </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.engine_cylinder}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Door </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Body Style </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.body_style}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Transmission </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.transmission_type}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Drive Train </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Exterior color </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.ext_color}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Interior Type </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.interior_material}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Interior color </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">\n                              {condionVehicleDetails?.int_color}\n                            </span>\n                          </ListItemSecondaryAction>\n                        </List>\n\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Keys </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\">\n                                {\" \"}\n                                Grounding Mileage{\" \"}\n                              </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\">9,000 miles</span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Account Type </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\"></span>\n                          </ListItemSecondaryAction>\n                        </List>\n                        <List className=\"paddingCSS\">\n                          <ListItemText>\n                            <span className=\"textStyle\">\n                              <span className=\"textBold\"> Odor </span>\n                            </span>\n                          </ListItemText>\n                          <ListItemSecondaryAction>\n                            <span className=\"textSize\"></span>\n                          </ListItemSecondaryAction>\n                        </List>\n                      </CardContent>\n\n                      <CardContent>\n                        <Typography variant=\"h6\">Accessories</Typography>\n                        <hr />\n                        <TableContainer component={Paper}>\n                          <Table\n                            className=\"table\"\n                            size=\"small\"\n                            aria-label=\"a dense table\"\n                          >\n                            <TableBody>\n                              <TableRow key=\"10074\">\n                                <TableCell component=\"th\" scope=\"row\">\n                                  {accessoryDetails.item_id}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  {accessoryDetails.description}\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </CardContent>\n                      <CardContent>\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\n                        <hr />\n                        <TableContainer component={Paper}>\n                          <Table\n                            className=\"table\"\n                            size=\"small\"\n                            aria-label=\"a dense table\"\n                          >\n                            <TableHead>\n                              <TableRow>\n                                <TableCell>Location</TableCell>\n                                <TableCell align=\"right\">Brand</TableCell>\n                                <TableCell align=\"right\">Size</TableCell>\n                                <TableCell align=\"right\">Wheel</TableCell>\n                                <TableCell align=\"right\">Tread Depth</TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {wheelTiresDetails?.map((list) => {\n                                return (\n                                  <TableRow key={list}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                      {wheelTiresDetails?.tire_location}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      {list.tire_location}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      {list.manufracturer}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      {list.size}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      {list.tread}\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      {list.tread}\n                                    </TableCell>\n                                  </TableRow>\n                                );\n                              })}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </CardContent>\n                      <CardContent>\n                        <Typography variant=\"h6\">Build Data</Typography>\n                        <hr />\n                        <TableContainer component={Paper}>\n                          <Table\n                            className=\"table\"\n                            size=\"small\"\n                            aria-label=\"a dense table\"\n                          >\n                            <TableHead>\n                              <TableRow>\n                                <TableCell>Code</TableCell>\n                                <TableCell align=\"right\">Description</TableCell>\n                                <TableCell align=\"right\">\n                                  Package Details\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {[\"1\"].map((list) => {\n                                return (\n                                  <TableRow key={list}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                      {list}\n                                    </TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                    <TableCell align=\"right\"> </TableCell>\n                                  </TableRow>\n                                );\n                              })}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </CardContent>\n                      <div className=\"disclaimerVRS\">\n                        Disclaimer: The parts, equipment, accessories, and other\n                        information listed above are based on\n                        equipment/configuration at the time vehicle was sold by\n                        Mazda Motor Corporation to a dealer and does not mean\n                        that this vehicle is still so equipped.\n                      </div>\n                    </Box>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={3}>\n            <ManualPricingSideBar />\n          </Grid>\n        </Grid>\n\n        <ViewDetailedReport\n          DamageDetails={DamageDetails}\n          open={open}\n          close={handleClose}\n        />\n      </Box>\n\n      {/* <Box>\n        <TransactionModal\n        type={'confirm'}\n          open={openTransactionPopup}\n          onClose={() => {\n            setOpenTransactionPopup(false);\n          }}\n        ></TransactionModal>\n      </Box> */}\n\n\n\n      {/* <div className='conditionPageCardReports'>\n                <Grid item xs={12}>\n                    <div className='conditionTopBar'>\n                        <Grid xs={12} className='conditionTopBarLayout'>\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\n                        </Grid>\n                    </div>\n                </Grid>\n                <Grid container spacing={3} className=\"ConditionCardReportSpace\">\n                    <Grid item xs={5}>\n                        <MyGallery />\n                        <Grid container className=\"ConditionCardBody\">\n                            <div className='damageTitle'>\n                                <span>Damage Report</span>\n                            </div>\n                            <Grid item xs={4} >\n                                <Card className=\"ConditionCardDamage\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Exterior total\n                                        </div>\n                                        <div className=\"smallCardBody warningColor\">\n                                            {DamageDetails.exteriorCost ? DamageDetails.exteriorCost : 'NA'}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={4} >\n                                <Card className=\"ConditionCardDamage\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Interior total\n                                        </div>\n                                        <div className=\"smallCardBody warningColor\">\n                                            {DamageDetails.interiorCost ? DamageDetails.interiorCost : 'NA'}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={4} >\n                                <Card className=\"ConditionCardDamage\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Mechanical total\n                                        </div>\n                                        <div className=\"smallCardBody warningColor\">\n                                            {DamageDetails.maintainenceCost ? DamageDetails.maintainenceCost : 'NA'}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} >\n                                <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\n                                    View Full Detailed Report\n                                </Button>\n                            </Grid>\n                            <Grid item xs={12} >\n                                <div className=\"disclaimer\">\n                                    Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <div className=\"LabelTextTextArea\">Announcements</div>\n                        <TextareaAutosize\n                            className=\"inputFieldTextArea\"\n                            aria-label=\"maximum height\"\n                            placeholder=\"Maximum 4 rows\"\n                            defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\n                        />\n                    </Grid>\n                    <Grid item xs={7}>\n                        <div className='ConditionReportSection'>\n                            <div className='reportTitle'>\n                                <span>MAZDA SD 2019 </span>\n                            </div>\n                            <span className='ConditionReportInspection'>\n                                <span className='BadgeValue'>Inspection Complete</span>\n                            </span>\n                        </div>\n                        <Grid container spacing={3}>\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\n                                <Card className=\"ConditionCard\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Payoff\n                                        </div>\n                                        <div className=\"smallCardBody\">\n                                            $12,000.00\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={3} className=\"ConditionCardMargin\" >\n                                <Card className=\"ConditionCard\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle1\">\n                                            Residual + Remaining\n                                        </div>\n                                        <div className=\"smallCardBody\">\n                                            $11,250.00\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\n                                <Card className=\"ConditionCard\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Market Based\n                                        </div>\n                                        <div className=\"smallCardBody\">\n                                            $10,500.00\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\n                                <Card className=\"ConditionCard\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Inspection Grade\n                                        </div>\n                                        <div className=\"smallCardBody\">\n                                            {condionVehicleDetails.condition_grade}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\n                                <Card className=\"ConditionCard\" >\n                                    <CardContent>\n                                        <div className=\"smallCardTitle\">\n                                            Odometer\n                                        </div>\n                                        <div className=\"smallCardBody\">\n                                            {condionVehicleDetails.inspection_mileage}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3}>\n                            <Card className=\"vehicleSectionCR\">\n                                <Typography variant=\"h6\">Vehicle Details</Typography>\n                                <hr />\n                                <CardContent>\n\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  VIN  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{vin}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Inspection Date  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">\n                                                {condionVehicleDetails.inspection_date}\n                                            </span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Inspection Location  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">\n                                                {condionVehicleDetails.location_address}\n                                            </span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span >\n                                                    .\n                                                </span>\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">\n                                                {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\n                                            </span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span > .   </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Consignor  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Engine  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Door  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Body Style  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Transmission  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Drive Train  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Exterior color  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Interior Type  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Interior color  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Keys  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Grounding Mileage  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\">9,000 miles</span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Account Type  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\"></span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n                                    <List className=\"paddingCSS\">\n                                        <ListItemText>\n                                            <span className=\"textStyle\">\n                                                <span className=\"textBold\">  Odor  </span>\n\n                                            </span>\n                                        </ListItemText>\n                                        <ListItemSecondaryAction>\n                                            <span className=\"textSize\"></span>\n                                        </ListItemSecondaryAction>\n                                    </List>\n\n\n                                </CardContent>\n\n                                <CardContent>\n                                    <Typography variant=\"h6\">Accessories</Typography>\n                                    <hr />\n                                    <TableContainer component={Paper}>\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                            <TableBody>\n                                                <TableRow key=\"10074\">\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {accessoryDetails.item_id}\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\n                                             \n                                                </TableRow>\n                                               \n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </CardContent>\n                                <CardContent>\n                                    <Typography variant=\"h6\">Wheels and Tyres</Typography>\n                                    <hr />\n                                    <TableContainer component={Paper}>\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Location</TableCell>\n                                                    <TableCell align=\"right\">Brand</TableCell>\n                                                    <TableCell align=\"right\">Size</TableCell>\n                                                    <TableCell align=\"right\">Wheel</TableCell>\n                                                    <TableCell align=\"right\">Tread Depth</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {wheelTiresDetails?.map(list => {\n                                                    return (\n                                                        <TableRow key={list}>\n                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                {wheelTiresDetails?.tire_location}\n                                                            </TableCell>\n                                                            <TableCell align=\"right\">{list.tire_location}</TableCell>\n                                                            <TableCell align=\"right\">{list.manufracturer}</TableCell>\n                                                            <TableCell align=\"right\">{list.size}</TableCell>\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                                }\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </CardContent>\n                                <CardContent>\n                                    <Typography variant=\"h6\">Build Data</Typography>\n                                    <hr />\n                                    <TableContainer component={Paper}>\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Code</TableCell>\n                                                    <TableCell align=\"right\">Description</TableCell>\n                                                    <TableCell align=\"right\">Package Details</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {['1'].map(list => {\n                                                    return (\n                                                        <TableRow key={list}>\n                                                            <TableCell component=\"th\" scope=\"row\">\n                                                                {list}\n                                                            </TableCell>\n                                                            <TableCell align=\"right\"></TableCell>\n                                                            <TableCell align=\"right\"> </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                })\n                                                }\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n\n                                </CardContent>\n                                <div className=\"disclaimerVRS\">\n                                    Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\n                                </div>\n                            </Card>\n\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\n            </div>\n            <ManualPricingSideBar /> */}\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/VINSearch.js",["288","289","290","291","292"],"import React, { useState, useEffect } from \"react\";\nimport Search from \"../../components/SearchText/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { InputLabel } from \"@material-ui/core\";\nimport GroundVehicleMFS from \"./GroundVehicleMFS\";\nimport GroundVehiclePLV from \"./GroundVehiclePLV\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { getAuthToken, getVehicleDetails } from \"../../service/api\";\n\nexport default function VINSearch(props) {\n  const placeholder = \"Enter last 6 digits of VIN\";\n  const [token, setToken] = useState(\"\");\n  const [vehicleResponse, setVehicleResponse] = useState({});\n  const [validSearch, setValidSearch] = useState(false);\n  const [reasonForReturn, setreasonForReturn] = useState(\n    \"Ground_Vehicle_for_MFS\"\n  );\n  const [suggestions, setSuggestions] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  let searchSuggestions = [\n    \"12345678901234567\",\n    \"12345678901234566\",\n    \"12345678901234568\",\n    \"12345678901234569\",\n    \"12345678901234560\",\n  ];\n\n  useEffect(() => {\n    let tokenResponse = getAuthToken();\n    setToken(tokenResponse.data?.access_token);\n  });\n  async function getVehDetails(value) {\n    let apiResponse = await getVehicleDetails(token, value);\n    setVehicleResponse(apiResponse.data);\n    if (apiResponse.data.vehicleInfo?.length > 0) {\n      setValidSearch(true);\n      setSuggestions(false);\n    } else {\n      setValidSearch(false);\n      setSuggestions(true);\n    }\n  }\n\n  const showResults = (e) => {\n    setSearchValue(e?.target?.value);\n\n    let value = e?.target?.value;\n    console.log(value);\n    getVehDetails(value);\n\n    searchSuggestions = searchSuggestions.filter((val) => {\n      return val.startsWith(value);\n    });\n    if (\n      value?.length == 0 ||\n      !searchSuggestions ||\n      searchSuggestions?.length == 0 ||\n      searchValue?.length == 0\n    ) {\n      setValidSearch(false);\n      setSuggestions(false);\n    } else if (searchSuggestions.length > 1) {\n      setValidSearch(false);\n      setSuggestions(true);\n    } else {\n      setValidSearch(true);\n      setSuggestions(false);\n    }\n  };\n\n  const setSearchData = (i) => {\n    setSearchValue(searchSuggestions[i]);\n    setValidSearch(false);\n    setSuggestions(false);\n  };\n  const handleReasonChange = (e) => {\n    console.log(e.target.value);\n    setreasonForReturn(e.target.value);\n  };\n\n  return (\n    <div className=\"form\">\n      <div className=\"grounding\">\n        <div className=\"searchLabelHeader\">Vehicle Grounding</div>\n        <div className=\"searchLabel\">Begin Vehicle Lease return process</div>\n        <Search\n          showSearchRight={true}\n          searchCompleted={validSearch}\n          placeholder={placeholder}\n          editSearchTerm={showResults}\n          searchValue={searchValue}\n        ></Search>\n        {!validSearch && suggestions && (\n          <div className=\"noMatchesFrame\">\n            <div className=\"noMatches\">VIN not found/Inactive</div>\n          </div>\n        )}\n\n        {validSearch && (\n          <div>\n            <div className=\"carRecordFound\">\n              <div className=\"vehicleMakeModel\">\n                <span>\n                  {vehicleResponse?.vehicleInfo[0]?.brand}\n                  {\" & \"}\n                </span>\n                <span>\n                  {\"  \"}\n                  {vehicleResponse?.vehicleInfo[0]?.model}\n                  {\" | \"}{\" \"}\n                </span>\n                <span>\n                  {\"  \"}\n                  {vehicleResponse?.vehicleInfo[0]?.ext_color}{\" \"}\n                </span>\n              </div>\n            </div>\n            <div className=\"customerReturnStyle\">\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Customer Return date\n              </InputLabel>\n              <TextField\n                id=\"date\"\n                type=\"date\"\n                defaultValue=\"00/00/0000\"\n                className=\"customerReturnDate\"\n                variant=\"outlined\"\n              />\n            </div>\n\n            <div className=\"customerReturnStyle\">\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Reason for Return\n              </InputLabel>\n              <Select\n                name=\"Reason for Return\"\n                value={reasonForReturn}\n                variant=\"outlined\"\n                inputProps={{ \"aria-label\": \"age\" }}\n                className=\"customerReturnDate\"\n                onChange={(event) => handleReasonChange(event)}\n              >\n                <MenuItem value={\"Purchase_Leased_Vehicle\"}>\n                  Purchase Leased Vehicle\n                </MenuItem>\n                <MenuItem value={\"Ground_Vehicle_for_MFS\"}>\n                  Ground Vehicle for MFS\n                </MenuItem>\n                <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\n              </Select>\n            </div>\n            {reasonForReturn === \"Ground_Vehicle_for_MFS\" && (\n              <>\n                {\" \"}\n                <GroundVehicleMFS />\n                <div className=\"odometerBox\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Odometer Reading\n                  </InputLabel>\n                  <TextField\n                    id=\"standard-basic\"\n                    placeholder=\"Enter odometer reading\"\n                    variant=\"outlined\"\n                    className=\"odometer\"\n                  />\n                  <TextField\n                    id=\"standard-basic\"\n                    placeholder=\"Renter odometer reading\"\n                    variant=\"outlined\"\n                    className=\"odometer\"\n                  />\n                </div>{\" \"}\n                <div className=\"customerReturnStyle\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Do you have a signed odometer statement?\n                  </InputLabel>\n                  <Select\n                    name=\"age\"\n                    value={1}\n                    variant=\"outlined\"\n                    inputProps={{ \"aria-label\": \"age\" }}\n                    className=\"customerReturnDate\"\n                  >\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\n                    <MenuItem value={10}>Yes</MenuItem>\n                    <MenuItem value={20}>No</MenuItem>\n                  </Select>\n                </div>\n                <div className=\"keysReturnedBox\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Number of Keys Returned\n                  </InputLabel>\n                  <TextField\n                    id=\"standard-basic\"\n                    placeholder=\"Master Keys Returned\"\n                    variant=\"outlined\"\n                    className=\"keysReturned\"\n                  />\n                  <TextField\n                    id=\"standard-basic\"\n                    placeholder=\"Valet Keys Returned\"\n                    variant=\"outlined\"\n                    className=\"keysReturned\"\n                  />\n                </div>\n                <div className=\"vehicleCondition\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Vehicle Condition\n                  </InputLabel>\n                  <div className=\"Rectangle-3\">\n                    <FormControlLabel control={<Radio />} label=\"Drivable\" />\n                  </div>\n                  <div className=\"Rectangle-3\">\n                    {\" \"}\n                    <FormControlLabel\n                      control={<Radio />}\n                      label=\"Not Drivable\"\n                    />\n                  </div>\n                </div>\n                <div className=\"pickUpLocation\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Pick Up Location\n                  </InputLabel>\n                  <div className=\"pickUpLocationBox\">\n                    <FormControlLabel\n                      control={<Radio />}\n                      label=\"Location Name 1\"\n                    />\n                  </div>\n\n                  <div className=\"pickUpLocationBox\">\n                    <FormControlLabel\n                      control={<Radio />}\n                      label=\"Location Name 2\"\n                    />\n                  </div>\n                </div>{\" \"}\n              </>\n            )}\n\n            {(reasonForReturn === \"Purchase_Leased_Vehicle\" ||\n              reasonForReturn === \"Trade_In\") && (\n              <>\n                <GroundVehiclePLV />\n                <div className=\"customerReturnStyle\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\n                    Do you have a signed odometer statement?\n                  </InputLabel>\n                  <Select\n                    name=\"age\"\n                    value={1}\n                    variant=\"outlined\"\n                    inputProps={{ \"aria-label\": \"age\" }}\n                    className=\"customerReturnDate\"\n                  >\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\n                    <MenuItem value={10}>Yes</MenuItem>\n                    <MenuItem value={20}>No</MenuItem>\n                  </Select>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundPending2.js",["293"],"import React, { useState } from 'react';\nimport ListingPage2 from './purchasedPage'\nexport default function Overview(props) {\n\n  return (\n    <div className='home'>\n      <ListingPage2></ListingPage2>\n    </div>\n  );\n};","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Header/Header.js",["294","295"],"import React, { useState } from \"react\";\nimport Separator from \"../Separator\";\nimport AdminSearchHeader from \"../AdminSearchHeader\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Route , withRouter} from 'react-router-dom';\nconst Header = (props) => {\n  const [showDealer, setShowDealer] = useState(null);\n  const [dealerName, setDealerName] = useState(\"\");\n  const toggleShowDealer = (event) => {\n    setShowDealer(event.currentTarget);\n  };\n  React.useEffect(() => {\n    setDealerName(localStorage.getItem(\"dealerName\"));\n  }, [localStorage.getItem(\"dealerName\")])\n  const handleClose = () => {\n    setShowDealer(null);\n  };\n  const handleSearch = (SearchText) => {\n    console.log(props)\n    //props.searchdetails(SearchText);\n    openConditionScreen(SearchText,\"\")\n  }\n  \n  const openConditionScreen = (VINumber, vehicle) => {\n    console.log(props)\n    props.history.push(\"/conditionreport\", {\n      vin: VINumber,\n      vehicleDetails: vehicle,\n      results:true,\n    });\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"imageHolder\">\n        <img src=\"MFS.png\" alt=\"logo\" width=\"174px\" height=\"33px\" />\n        <Separator />\n        <div className=\"auctionSales\">Auction Sales Platform </div>\n      </div>\n      <AdminSearchHeader\n        searchdetails={(SearchText) =>{ handleSearch(SearchText)}}\n      />\n      <div onClick={toggleShowDealer} className=\"dealerName\">\n      \n        {dealerName?dealerName:'Dealer Name'}\n      </div>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={showDealer}\n        keepMounted\n        open={Boolean(showDealer)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem onClick={handleClose}>User Settings</MenuItem>\n        <MenuItem onClick={handleClose}>Help</MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ConditionReport.js",["296","297","298","299","300","301","302","303","304","305","306"],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/ManualPricing.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SwipableFilter from \"./SwipableFilter\";\nimport { TableSortLabel } from \"@material-ui/core\";\nimport Paginator from \"./Pagination\";\nimport SortIcon from \"../assets/WebFont/sort.svg\";\nimport { awaitManualPricing } from \"../service/api\";\nconst useStyles = makeStyles({\n  table: {\n    border: \"1px solid #e1e1e1\",\n  },\n  tableRow: {\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  tableHeaderRow: {\n    borderTop: \"1px solid #e1e1e1\",\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  tableHeadFont: {\n    fontWeight: 600,\n  },\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n  },\n});\n\nfunction createVehicleData(\n  VIN,\n  Year,\n  Make,\n  Model_Trim,\n  Grounding_Region,\n  Inspection_Date,\n  Inspection_Status,\n  Action_Code\n) {\n  return {\n    VIN,\n    Year,\n    Make,\n    Model_Trim,\n    Grounding_Region,\n    Inspection_Date,\n    Inspection_Status,\n    Action_Code,\n  };\n}\nconst rows = [\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0087479668724131\",\n    \"2022\",\n    \"CX-5\",\n    \"B3\",\n    \"Texas\",\n    \"10/24/2022\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"0704303398645911\",\n    \"2015\",\n    \"CX-5\",\n    \"A1\",\n    \"Florida\",\n    \"01/23/2015\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"6672920469419405\",\n    \"2016\",\n    \"Mazda3\",\n    \"B1\",\n    \"Indiana\",\n    \"04/26/2016\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"7660443910307535\",\n    \"2017\",\n    \"Mazda6\",\n    \"C1\",\n    \"Texas\",\n    \"08/13/2017\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2769586046735830\",\n    \"2018\",\n    \"MX-5\",\n    \"A2\",\n    \"Texas\",\n    \"12/17/2018\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"2563959933582287\",\n    \"2019\",\n    \"Mazda3\",\n    \"B2\",\n    \"Florida\",\n    \"07/30/2019\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"8309130666254027\",\n    \"2020\",\n    \"Mazda3\",\n    \"C2\",\n    \"Indiana\",\n    \"03/14/2020\",\n    \"Completed\",\n    \"XYZ\"\n  ),\n  createVehicleData(\n    \"3180783430963337\",\n    \"2021\",\n    \"Mazda6\",\n    \"A3\",\n    \"Indiana\",\n    \"11/15/2021\",\n    \"Pending\",\n    \"XYZ\"\n  ),\n];\n\nexport default function ManualPricing(props) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState([]);\n  const [vehicleList, setVehicleList] = useState(rows);\n  const [pageCount, setPageCount] = React.useState(10);\n  const [manualPricingList, setManualPricingList] = useState([]);\n  const [manualPricingListRows, setManualPricingListRows] = useState([]);\n  //const [pageCount, setPageCount] = React.useState(10);\n\n  /*   const handleChangePageCount = (event) => {\n          setPageCount(event.target.value);\n      };\n      const handleChangePage = (event, newPage) => {\n          setPage(newPage);\n      };\n  \n      const handleChangeRowsPerPage = (event) => {\n          setRowsPerPage(parseInt(event.target.value, 10));\n          setPage(0);\n      }; */\n\n  useEffect(() => {\n    getManualPricingDetails();\n  }, []);\n  async function getManualPricingDetails() {\n    let apiResponse = await awaitManualPricing();\n    console.log(\"ManualPricing------->\", apiResponse.data);\n    setManualPricingListRows(apiResponse.data);\n  }\n  const handleChangePageCount = (event) => {\n    setPageCount(event.target.value);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const openConditionReport = (VINumber) => {\n    props.props.history.push(\"/conditionreportRequests\", {\n      vin: VINumber,\n      pageName: \"Manual Pricing\",\n    });\n  };\n\n  const fetchDataBasedOnSearchValue = (searchText) => {\n    const vehicleListCopy = [...rows];\n    if (searchText) {\n      const filteredList = vehicleListCopy.filter((row) => {\n        return row.VIN.indexOf(searchText) !== -1;\n      });\n      setVehicleList(filteredList);\n    } else {\n      setVehicleList(rows);\n    }\n  };\n\n  const fetchDataBasedOnFilters = (filterInput) => {\n    let vehicleListCopy = [...rows];\n    if (filterInput.vin) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return (\n          row.VIN.indexOf(filterInput.vin) !== -1 ||\n          (row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo)\n        );\n      });\n    }\n    if (filterInput.yearFrom && filterInput.yearTo) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return (\n          row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo\n        );\n      });\n    }\n    if (filterInput.make) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return row.Make.indexOf(filterInput.make) !== -1;\n      });\n    }\n    if (filterInput.inspectionStatus) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return (\n          row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1\n        );\n      });\n    }\n    if (filterInput.groundingRegion) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\n      });\n    }\n    if (filterInput.auctionCode) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\n      });\n    }\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\n      vehicleListCopy = vehicleListCopy.filter((row) => {\n        const dateTs = Date.parse(row.Inspection_Date);\n        return (\n          dateTs >= Date.parse(filterInput.inspectionDateFrom) &&\n          dateTs <= Date.parse(filterInput.inspectionDateTo)\n        );\n      });\n    }\n    setVehicleList(vehicleListCopy);\n  };\n\n  const resetFilterList = () => {\n    setVehicleList(rows);\n  };\n\n  const onChangePage = (data) => {\n    console.log(\"data\", data);\n    setManualPricingList(data);\n  };\n\n  return (\n    <>\n      <div>\n        <SwipableFilter\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\n          resetFilterList={resetFilterList}\n        />\n\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead className={classes.tableHeaderRow}>\n              <TableRow className={classes.tableHeadFont}>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    VIN\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Year\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Make\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Model/Trim\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Grounding Region\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Inspection Date\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Inspection Status\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Action Code\n                  </TableSortLabel>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {manualPricingList?.map((row, index) => (\n                <TableRow key={index} className={classes.tableRow}>\n                  <TableCell align=\"center\">\n                    <span className=\"textStyle\">\n                      <a\n                        className=\"vin\"\n                        onClick={() => openConditionReport(row.VIN)}\n                      >\n                        {\" \"}\n                        {row.vin}\n                      </a>\n                    </span>\n                  </TableCell>\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\n                  <TableCell align=\"center\">{row.make}</TableCell>\n                  <TableCell align=\"center\">{row.model}</TableCell>\n                  <TableCell align=\"center\">{row.groundingRegion}</TableCell>\n                  <TableCell align=\"center\">{row.inspectionDate}</TableCell>\n                  <TableCell align=\"center\">{row.inspectionStatus}</TableCell>\n                  <TableCell align=\"center\">{row.actionCode}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {manualPricingListRows.length != 0 ? (\n          <Paginator\n            label=\"Result per page\"\n            showItemsPerPage={10}\n            pages={[10, 20, 30, 40]}\n            data={manualPricingListRows}\n            onChangePage={onChangePage}\n          />\n        ) : null}\n      </div>\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/VehicleInformation.js",["324","325","326","327","328","329","330"],"import React, { useState } from \"react\";\nimport Search from \"./Search/Search\";\n\nlet styles = {\n  container: {\n    width: \"371px\",\n    height: \"270px\",\n    margin: \"8px 540px 16px\",\n    padding: \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    border: \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n  },\n\n  VehicleMakeModel: {\n    width: \"271px\",\n    height: \"24px\",\n    margin: \"0 69px 0 0\",\n    \"font-family\": \"SalesforceSans\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"bold\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    color: \"#080707\",\n  },\n  line: {\n    width: \"350px\",\n    height: \"2px\",\n    margin: \"4px 2px 11px 2px\",\n    \"background-color\": \"#000000\",\n  },\n\n  label: {\n    width: \"85px\",\n    height: \"18px\",\n    margin: \"8px 24px 4px 0\",\n    \"font-family\": \"ToyotaType\",\n    \"font-size\": \"12px\",\n    \"font-weight\": \"600\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    color: \"#3e3e3c\",\n  },\n  value: {\n    width: \"85px\",\n    height: \"18px\",\n    margin: \"8px 24px 4px 0\",\n    \"font-family\": \"ToyotaType\",\n    \"font-size\": \"12px\",\n    \"font-weight\": \"600\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    color: \"#3e3e3c\",\n    \"font-weight\": \"normal\",\n  },\n\n  imagebox: {\n    width: \"180px\",\n    height: \"160px\",\n    margin: \"0px 1px 2px 2px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    \"background-color\": \"#000000\",\n  },\n  search: {\n    width: \"371px\",\n    height: \"32px\",\n    \"margin-top\": \"10px\",\n    padding: \" 0 0 0px\",\n    \"border-radius\": \"4px\",\n    border: \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n  },\n  noMatchesFrame: {\n    width: \"371px\",\n    height: \"76px\",\n    padding: \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    border: \"solid 1px #dddbda\",\n    \"background-color\": \"#ffffff\",\n    display: \"block\",\n    margin: \"1% 0 0 40%\",\n  },\n  noMatches: {\n    height: \"18px\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    color: \"#3e3e3c\",\n  },\n  searchSuggestionFrame: {\n    width: \"371px\",\n    height: \"200px\",\n    margin: \"8px 540px 16px\",\n    padding: \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    border: \"solid 1px #dddbda\",\n  },\n  searchSuggestion: {\n    width: \"350px\",\n    height: \"35px\",\n    \"background-color\": \"#ffffff\",\n  },\n  searchLabel: {\n    height: \"18px\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\",\n    \"font-stretch\": \"normal\",\n    \"font-style\": \"normal\",\n    \"line-height\": \"1.5\",\n    \"letter-spacing\": \"normal\",\n    color: \"#3e3e3c\",\n  },\n  imageContainer: {\n    width: \"371px\",\n    height: \"160px\",\n    margin: \"48px 54px 16px\",\n    //\"padding\": \"14px 30px 16px 16px\",\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n    border: \"solid 1px #dddbda\",\n  },\n  imageContainer1: {\n    display: \"block\",\n    \"margin-left\": \"40%\",\n  },\n  alighnCenterItems: {\n    background: \"#f3f2f2\",\n    height: \"100vh\",\n    width: \"100%\",\n    right: \"0px\",\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\n  },\n  centerSection: {\n    marginTop: \"12%\",\n  },\n};\nconst VehicleInformation = (props) => {\n  const searchBox = styles.search;\n  const placeholder = \"Enter VIN\";\n  const [validSearch, setValidSearch] = useState(false);\n  const [suggestions, setSuggestions] = useState(false);\n  const [searchValue, setSearchValue] = useState();\n  const accountInformation = props.accountInformation;\n  let searchSuggestions = [\n    \"12345678901234567\",\n    \"12345678901234566\",\n    \"12345678901234568\",\n    \"12345678901234569\",\n    \"12345678901234560\",\n  ];\n\n  // useEffect(() => {\n  //      //need to filter search data based on the backend data\n  //   });\n\n  const showResults = (e) => {\n    setSearchValue(e?.target?.value);\n    let value = e?.target?.value;\n    searchSuggestions = searchSuggestions.filter((val) => {\n      return val.startsWith(value);\n    });\n    if (\n      value?.length == 0 ||\n      !searchSuggestions ||\n      searchSuggestions?.length == 0 ||\n      searchValue?.length == 0\n    ) {\n      setValidSearch(false);\n      setSuggestions(false);\n    } else if (searchSuggestions.length > 1) {\n      setValidSearch(false);\n      setSuggestions(true);\n    } else {\n      setValidSearch(true);\n      setSuggestions(false);\n    }\n  };\n\n  const setSearchData = (i) => {\n    setSearchValue(searchSuggestions[i]);\n    setValidSearch(false);\n    setSuggestions(false);\n  };\n\n  return (\n    <div style={styles.alighnCenterItems}>\n      <div style={styles.centerSection}>\n        <img\n          src=\"car.png\"\n          width=\"371px\"\n          height=\"160px\"\n          style={styles.imageContainer1}\n        ></img>\n      </div>\n      <div style={{ marginLeft: \"40%\" }}>\n        <div style={styles.searchLabel}>Search Vehicles</div>\n        <Search\n          searchBox={searchBox}\n          showSearchRight={true}\n          searchCompleted={validSearch}\n          placeholder={placeholder}\n          editSearchTerm={showResults}\n          searchValue={searchValue}\n        ></Search>\n      </div>\n      {validSearch && (\n        <div style={styles.container}>\n          <div style={styles.VehicleMakeModel}>\n            {\" \"}\n            Vehicle Make & Model Name | Year{\" \"}\n          </div>\n          <div style={styles.line}></div>\n          <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n            <div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Maturity Date </div>{\" \"}\n                <div style={styles.value}> 00/00/0000 </div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Lease Type </div>{\" \"}\n                <div style={styles.value}> Type Name</div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Lease Name </div>{\" \"}\n                <div style={styles.value}> Lease Name </div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Acct Type </div>{\" \"}\n                <div style={styles.value}> Type Name </div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Acct Number </div>{\" \"}\n                <div style={styles.value}> 00000000 </div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Ream Payments </div>{\" \"}\n                <div style={styles.value}> $000.00 </div>{\" \"}\n              </div>\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\n                {\" \"}\n                <div style={styles.label}>Color </div>{\" \"}\n                <div style={styles.value}> Color Name </div>{\" \"}\n              </div>\n            </div>\n\n            <div style={styles.imagebox}>\n              <img />\n            </div>\n          </div>\n        </div>\n      )}\n      {!validSearch && !suggestions && (\n        <div style={styles.noMatchesFrame}>\n          <div style={styles.noMatches}>No Matches Available</div>\n        </div>\n      )}\n      {suggestions && (\n        <div style={styles.searchSuggestionFrame}>\n          {searchSuggestions.map((name, index) => (\n            <div\n              key={index}\n              style={styles.searchSuggestion}\n              onClick={() => setSearchData(index)}\n            >\n              {name}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default VehicleInformation;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/AdminVehicleSearch.js",["331","332","333","334"],"import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CustomizedInputBase from './CustomisedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\nimport SearchText from './SearchText/Search';\nconst AdminVehicleSearch = (props) => {\n\n  console.log(\"searchdetails\",props);\n\n  return (\n    <Card className=\"adminSearchCard\">\n     \n      <CardContent className=\"adminSearcheader\">\n      <img\n        className=\"cover\"\n        src=\"searchCar.jpeg\"\n      />\n       <div className=\"adminSearcheaderColor\">\n     <Typography variant=\"h4\" component=\"h4\">\n          Vehicle Search\n        </Typography>\n        <Typography variant=\"p\" component=\"p\">\n          Search for a vehicle, or start with any of the menu items on the left.\n        </Typography>\n     </div>\n      \n      </CardContent>\n      <Divider />\n      <CardContent className=\"adminSearchCardBody\">\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\n          Submit\n        </Button>\n      </CardContent>\n    </Card>\n\n  )\n}\nexport default AdminVehicleSearch;","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/RRMApproval.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React, { useState ,useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { TableSortLabel } from \"@material-ui/core\";\nimport SwipableFilterRRM from \"./SwipableFilterRRM\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paginator from \"./Pagination\";\nimport SortIcon from \"../assets/WebFont/sort.svg\";\nimport Check from \"@material-ui/icons/Check\";\nimport {RRMList} from \"../service/api\"\n\nconst useStyles = makeStyles({\n  table: {\n    border: \"1px solid #e1e1e1\",\n  },\n  tableRow: {\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  tableHeaderRow: {\n    borderTop: \"1px solid #e1e1e1\",\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n  },\n});\n\nfunction createVehicleData(\n  VIN,\n  Year,\n  Make,\n  Model_Trim,\n  auction,\n  mmr,\n  mmb,\n  percent,\n  priced_rate,\n  priced_by,\n  approve\n) {\n  return {\n    VIN,\n    Year,\n    Make,\n    Model_Trim,\n    auction,\n    mmr,\n    mmb,\n    percent,\n    priced_rate,\n    priced_by,\n    approve,\n  };\n}\n\nconst rows = [\n  createVehicleData(\n    \"0000000000000001\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000002\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000003\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000004\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000005\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000006\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000007\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000008\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000009\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000010\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000011\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000012\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000013\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000014\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000015\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000016\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000017\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000018\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000019\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000020\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000021\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000022\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000023\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000024\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000025\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000026\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000027\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000028\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000029\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000030\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000031\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000032\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000033\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000034\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000035\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000036\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000037\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000038\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000039\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000040\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000041\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000042\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000043\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000044\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000045\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000046\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000047\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000048\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000049\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000050\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000051\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000052\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000053\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000054\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000055\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000056\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000057\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000058\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000059\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000060\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000061\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    true\n  ),\n  createVehicleData(\n    \"0000000000000062\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000063\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000064\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000065\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000066\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000067\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000068\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000069\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000070\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000071\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n  createVehicleData(\n    \"0000000000000072\",\n    \"2021\",\n    \"Make Name\",\n    \"Model/Trim\",\n    \"auction\",\n    \"00,0000\",\n    \"00,0000\",\n    \"+00\",\n    \"00/00/000\",\n    \"Employee Name\",\n    false\n  ),\n];\n\nexport default function RRMApproval(props) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState([]);\n  const [rrmList, setRrmList] = useState([]);\n  const [rrmListRows, setRrmListRows] = useState([]);\n  //const [pageCount, setPageCount] = React.useState(10);\n\n  /*   const handleChangePageCount = (event) => {\n          setPageCount(event.target.value);\n      };\n      const handleChangePage = (event, newPage) => {\n          setPage(newPage);\n      };\n  \n      const handleChangeRowsPerPage = (event) => {\n          setRowsPerPage(parseInt(event.target.value, 10));\n          setPage(0);\n      }; */\n\n  useEffect(() => {\n    getRRMApprovalDetails();\n  }, []);\n  async function getRRMApprovalDetails() {\n    let apiResponse = await RRMList();\n    console.log('RRMList------->', apiResponse)\n    setRrmListRows(apiResponse.data);\n  }\n  const openConditionReport = (VINumber) => {\n    props.props.history.push(\"/conditionreportRequests\", {\n      vin: VINumber,\n      pageName: \"RRMApproval\",\n    });\n  };\n  const onChangePage = (data) => {\n    setRrmList(data);\n  };\n\n  const onChangeApprove = (row) => {\n    // let updatedRowsPerPage = rrmList.map((item) => {\n    //   if (item.vin === row.vin) {\n    //     item.approve = !item.approve;\n    //   }\n    //   return item;\n    // });\n    // setRrmList(updatedRowsPerPage);\n  };\n\n  return (\n    <>\n      <div>\n        <SwipableFilterRRM />\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead className={classes.tableHeaderRow}>\n              <TableRow className={classes.tableHeadFont}>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    VIN\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Year\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Make\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Model/Trim\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Auction\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    MMR\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    MBP\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    %\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Priced rate\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <TableSortLabel\n                    active={true}\n                    direction={\"asc\"}\n                    onClick={() => {}}\n                    IconComponent={() => (\n                      <img src={SortIcon} className=\"tableSortIcon\" />\n                    )}\n                  >\n                    Priced By\n                  </TableSortLabel>\n                </TableCell>\n                <TableCell align=\"center\">\n                  Approve\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rrmList?.map((row, index) => (\n                <TableRow key={index} className={classes.tableRow}>\n                  <TableCell align=\"center\">\n                    <span className=\"textStyle\">\n                      <a\n                        className=\"vin\"\n                        onClick={() => openConditionReport(row.VIN)}\n                      >\n                        {\" \"}\n                        {row.vin}\n                      </a>\n                    </span>\n                  </TableCell>\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\n                  <TableCell align=\"center\">{row.make}</TableCell>\n                  <TableCell align=\"center\">{row.model}</TableCell>\n                  <TableCell align=\"center\">{row.auction}</TableCell>\n                  <TableCell align=\"center\">{row.mmr}</TableCell>\n                  <TableCell align=\"center\">{row.mmb}</TableCell>\n                  <TableCell align=\"center\">{row.percent}</TableCell>\n                  <TableCell align=\"center\">{row.pricedDate}</TableCell>\n                  <TableCell align=\"center\">{row.pricedBy}</TableCell>\n                  <TableCell align=\"center\">\n                    {/* {row.approve} */}\n                   <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={false}\n                          onChange={() => onChangeApprove(row)}\n                          checkedIcon={<Check className={classes.checkedIcon} />}\n                        />\n                      }\n                      label=\"\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n       {rrmListRows.length != 0? <Paginator\n          label=\"Result per page\"\n          showItemsPerPage={10}\n          pages={[10, 20, 30, 40]}\n          data={rrmListRows}\n          onChangePage={onChangePage}\n        /> : null }\n      </div>\n    </>\n  );\n}","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/NotesSection.js",["352","353","354","355"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"30px\",\n        height: \"30px\",\n        backgroundColor: \"#B80F0A\",\n        borderRadius: \"50%\",\n        fontSize: \"12px\",\n        padding: \"10px 20px 13px 12px\",\n        color: \"white\",\n    },\n    sideBarCSS: {\n        marginLeft: \"16px\",\n    }\n}));\nexport default function NotesSection() {\n    const [open, setOpen] = React.useState(true);\n    const classes = useStyles();\n    const handleClick = () => {\n        //setOpen(!open);\n    };\n    return (\n        <div className=\"notesSection\">\n            <ListItem className=\"notesSectionHeader\">\n                NotesSection\n            </ListItem>\n            <ListItem>\n                <div className=\"notesText\">\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                </div>\n\n            </ListItem>\n            <ListItem >\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\n                    Save\n                </Button>\n            </ListItem>\n            <Divider variant=\"middle\" />\n\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n            <ListItem >\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n            </ListItem>\n\n        </div>\n    )\n}","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/NewSideBar.js",["356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  getGroundingList,\n  getPassedList,\n  getPurchasedList,\n} from \"../service/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#B80F0A\",\n    borderRadius: \"50%\",\n    fontSize: \"12px\",\n    padding: \"0px\",\n    color: \"white\",\n  },\n  sideBarCSS: {\n    marginLeft: \"16px\",\n  },\n  activeNavLink: {\n    background: \"#e7f3fd\",\n    borderLeft: \"3px solid #407ed2\",\n  },\n}));\n\nlet sidebarItems = [\n  {\n    label: \"Grounded\",\n    open: true,\n    childs: [\n      {\n        label: \"Grounded\",\n        link: \"/grounded\",\n        badge: null,\n      },\n      {\n        label: \"Passed\",\n        link: \"/passed\",\n        badge: null,\n      },\n      {\n        label: \"Purchased\",\n        link: \"/purchased\",\n        badge: null,\n      },\n    ],\n  },\n  {\n    label: \"Admin\",\n    open: true,\n    childs: [\n      {\n        label: \"Vehicle Search\",\n        link: \"/adminSearch\",\n        badge: null,\n      },\n      {\n        label: \"Inventory Requests\",\n        link: \"/adminInventoryRequests\",\n        badge: null,\n      },\n    ],\n  },\n];\n\nexport default function NewSidebar(props) {\n  const location = useLocation();\n  const [list, setList] = React.useState([]);\n  const [open, setOpen] = React.useState([]);\n  const [activeChild, setActiveChild] = React.useState(location.pathname);\n  const classes = useStyles();\n\n  useEffect(async () => {\n    let getGroundingListRes = await getGroundingList();\n    let getPassedListRes = await getPassedList();\n    let getPurchasedListRes = await getPurchasedList(\"ALL\");\n    // setVehicleResponse(apiResponse.data.data);\n    // console.log(\"setVehicleResponse::\", getGroundingListRes.data.data);\n    // console.log(\"setVehicleResponse::\", getPassedListRes.data.data);\n    // console.log(\"setVehicleResponse::\", getPurchasedListRes.data.data);\n\n    sidebarItems.map((item) => {\n      item.childs.map((child) => {\n        if (activeChild == child.link) {\n          item.open = true;\n        }\n\n        if (child.link == \"/grounded\") {\n          if (\n            getGroundingListRes &&\n            getGroundingListRes.data &&\n            getGroundingListRes.data.data.length !== 0\n          ) {\n            child.badge = getGroundingListRes?.data.data.length;\n          } else {\n            child.badge = 0;\n          }\n        }\n        if (child.link == \"/passed\") {\n          if (\n            getPassedListRes &&\n            getPassedListRes.data &&\n            getPassedListRes.data.data.length !== 0\n          ) {\n            child.badge = getPassedListRes?.data.data.length;\n          } else {\n            child.badge = 0;\n          }\n        }\n        if (child.link == \"/purchased\") {\n          if (\n            getPurchasedListRes &&\n            getPurchasedListRes.data &&\n            getPurchasedListRes.data.data.length !== 0\n          ) {\n            child.badge = getPurchasedListRes?.data.data.length;\n          } else {\n            child.badge = 0;\n          }\n        }\n      });\n    });\n    if(localStorage.getItem('dealerCode'))\n    {\n    console.log('dealerCode')\n    \n    sidebarItems = sidebarItems.filter(row=>row.label != 'Admin')\n    }\n    setList([...sidebarItems]);\n  }, [props.stateUpdate]);\n\n  const handleClick = (item) => {\n    let updatedList = list.map((litem) => {\n      if (litem.label === item.label) {\n        litem.open ? (litem.open = false) : (litem.open = true);\n      }\n      return litem;\n    });\n    setList(updatedList);\n  };\n\n  const handleClickMakeActive = (child) => {\n    setActiveChild(child.link);\n  };\n\n  return (\n    <div className={classes.sideBarCSS}>\n      {list &&\n        list.map((item, index) => (\n          <List\n            key={index}\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n          >\n            <ListItem\n              button\n              onClick={() => {\n                handleClick(item);\n              }}\n            >\n              {item.open ? <ExpandLess /> : <ExpandMore />}\n              <ListItemText primary={item.label} />\n            </ListItem>\n            <Collapse in={item.open} timeout=\"auto\" unmountOnExit>\n              <List\n                component=\"div\"\n                disablePadding\n                className={classes.sideBarCSS}\n              >\n                {item.childs.map((child) => (\n                  <ListItem\n                    component={Link}\n                    to={child.link}\n                    key={child.link}\n                    className={\n                      activeChild == child.link ? classes.activeNavLink : \"\"\n                    }\n                    onClick={() => {\n                      handleClickMakeActive(child);\n                    }}\n                  >\n                    <ListItemText primary={child.label} />\n                    {child.badge ? (\n                      <Chip className={classes.root} label={child.badge}></Chip>\n                    ) : (\n                      \"\"\n                    )}\n                  </ListItem>\n                ))}\n              </List>\n            </Collapse>\n          </List>\n        ))}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/ManualPricingSideBar.js",["369","370","371","372","373","374","375","376"],"import React, { useState } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"30px\",\n    height: \"30px\",\n    backgroundColor: \"#B80F0A\",\n    borderRadius: \"50%\",\n    fontSize: \"12px\",\n    padding: \"10px 20px 13px 12px\",\n    color: \"white\",\n  },\n  sideBarCSS: {\n    marginLeft: \"16px\",\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    height: \"10px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nexport default function ManualPricingSideBar() {\n  const [open, setOpen] = React.useState(true);\n  const classes = useStyles();\n  const handleClick = () => {\n    //setOpen(!open);\n  };\n  const handleOnChange = (event) => {\n    setFilterInput({\n      ...filterInput,\n      ...{ [event.target.name]: event.target.value },\n    });\n  };\n  const [filterInput, setFilterInput] = useState({\n    vin: \"\",\n    yearFrom: \"\",\n    yearTo: \"\",\n    make: \"\",\n    inspectionStatus: \"\",\n    inspectionDateFrom: \"\",\n    inspectionDateTo: \"\",\n    groundingRegion: \"\",\n    auctionCode: \"\",\n  });\n  return (\n    <div className=\"manualPricingSidebar\">\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\n      <ListItem button>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"vin-input\">\n            Market Price\n          </InputLabel>\n          <BootstrapInput\n            placeholder=\"Enter price\"\n            id=\"EntermarketPrice-input\"\n            name=\"EntermarketPrice\"\n            value={filterInput.vin}\n            onChange={handleOnChange}\n          />\n        </FormControl>\n      </ListItem>\n      <ListItem button>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"vin-input\">\n            Re-Enter Market Price\n          </InputLabel>\n          <BootstrapInput\n            placeholder=\"Enter Price\"\n            id=\"reEntermarketPrice-input\"\n            name=\"reEntermarketPrice\"\n            value={filterInput.vin}\n            onChange={handleOnChange}\n          />\n        </FormControl>\n      </ListItem>\n      <ListItem button>\n        <FormControl>\n          <InputLabel shrink htmlFor=\"vin-input\">\n            MMR\n          </InputLabel>\n          <BootstrapInput\n            placeholder=\"MMR\"\n            id=\"vin-input\"\n            name=\"vin\"\n            value={filterInput.vin}\n            onChange={handleOnChange}\n          />\n        </FormControl>\n      </ListItem>\n      <Divider variant=\"middle\" />\n      <ListItem>\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\n      </ListItem>\n\n      <ListItem>\n        <p className=\"manualPricing\">Autograde: 3.0</p>\n      </ListItem>\n      <ListItem>\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\n      </ListItem>\n      <Divider variant=\"middle\" />\n      <ListItem>\n        <div>\n          <h3>Price History</h3>\n        </div>\n      </ListItem>\n      <ListItem>\n        <div className=\"manualPricingText\">\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\n          <p className=\"manualPricing\">Price: $00,000.00</p>\n          <p className=\"manualPricing\">User Name: First, Last</p>\n        </div>\n      </ListItem>\n      <ListItem>\n        <div className=\"manualPricingText\">\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\n          <p className=\"manualPricing\">Price: $00,000.00</p>\n          <p className=\"manualPricing\">User Name: First, Last</p>\n        </div>\n      </ListItem>\n      <List className=\"swipeFilterBtn\">\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\n          Cancel\n        </Button>\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\n          Update\n        </Button>\n      </List>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/MileageDisc.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { TableSortLabel } from \"@material-ui/core\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SwipableFilterMileage from \"./SwipableFilterMileage\";\nimport Paginator from \"./Pagination\";\nimport SortIcon from \"../assets/WebFont/sort.svg\";\nimport { getMileageDiscList } from \"../service/api\";\n\nconst useStyles = makeStyles({\n  table: {\n    border: \"1px solid #e1e1e1\",\n  },\n  tableRow: {\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  tableHeaderRow: {\n    borderTop: \"1px solid #e1e1e1\",\n    borderBottom: \"1px solid #e1e1e1\",\n  },\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n  },\n});\n\n// function createVehicleData(\n//   VIN,\n//   Year,\n//   Make,\n//   Model_Trim,\n//   region,\n//   ground_mileage,\n//   inspection_mileage,\n//   difference\n// ) {\n//   return {\n//     VIN,\n//     Year,\n//     Make,\n//     Model_Trim,\n//     region,\n//     ground_mileage,\n//     inspection_mileage,\n//     difference,\n//   };\n// }\n\n// const rows = [\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n//   createVehicleData(\n//     \"0000000000000000\",\n//     \"2021\",\n//     \"Make Name\",\n//     \"Model/Trim\",\n//     \"Region Label\",\n//     \"00,0000\",\n//     \"00,0000\",\n//     \"00/00/000\"\n//   ),\n// ];\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"5px 26px 5px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nexport default function MileageDisc(props) {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState([]);\n  const [pageCount, setPageCount] = React.useState(10);\n  const [mdList, setMdList] = useState([]);\n  const [mdListRows, setMdListRows] = useState([]);\n\n  useEffect(() => {\n    getMdList();\n  }, []);\n  async function getMdList() {\n    let apiResponse = await getMileageDiscList();\n    console.log(\"RRMList------->\", apiResponse);\n    setMdListRows(apiResponse.data);\n  }\n  const handleChangePageCount = (event) => {\n    setPageCount(event.target.value);\n  };\n\n  const openConditionReport = (VINumber) => {\n    props.props.history.push(\"/conditionreportRequests\", {\n      vin: VINumber,\n      pageName: \"Mileage Discrepencies\",\n    });\n  };\n\n  const onChangePage = (data) => {\n    setMdList(data);\n  };\n  return (\n    <>\n      <SwipableFilterMileage />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead className={classes.tableHeaderRow}>\n            <TableRow className={classes.tableHeadFont}>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  VIN\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Year\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Make\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Model/Trim\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Region\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Grounding Mileage\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Inspection Mileage\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"center\">\n                <TableSortLabel\n                  active={true}\n                  direction={\"asc\"}\n                  onClick={() => {}}\n                  IconComponent={() => (\n                    <img src={SortIcon} className=\"tableSortIcon\" />\n                  )}\n                >\n                  Differnence\n                </TableSortLabel>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mdList.map((row) => (\n              <TableRow key={row.model} className={classes.tableRow}>\n                <TableCell align=\"center\">\n                  <span className=\"textStyle\">\n                    <a\n                      className=\"vin\"\n                      onClick={() => openConditionReport(row.vin)}\n                    >\n                      {\" \"}\n                      {row.vin}\n                    </a>\n                  </span>\n                </TableCell>\n                <TableCell align=\"center\">{row.modelyear}</TableCell>\n                <TableCell align=\"center\">{row.make}</TableCell>\n                <TableCell align=\"center\">{row.model}</TableCell>\n                <TableCell align=\"center\">{row.region}</TableCell>\n                <TableCell align=\"center\">{row.inspectionmileage}</TableCell>\n                <TableCell align=\"center\">{row.groundingmileage}</TableCell>\n                <TableCell align=\"center\">{row.mileagediff}</TableCell>\n              </TableRow>\n           ))}\n          </TableBody>\n        </Table>\n        {mdListRows.length != 0 ? (\n          <Paginator\n            label=\"Result per page\"\n            showItemsPerPage={10}\n            pages={[10, 20, 30, 40]}\n            data={mdListRows}\n            onChangePage={onChangePage}\n          />\n        ) : null}\n      </TableContainer>\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Tabs.js",["394","395"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\nimport StatusHistory from './StatusHistory';\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                   {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function VehicleSearchTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const{inspectiondata}=props;\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <AppBar position=\"fixed\" className='topBarAdmin'>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" style={{marginLeft:\"35%\"}}>\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <div className='adminTabsSection'><StatusHistory /></div>\n\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <div className='adminTabsSection'>Update Mileage/price</div>\n            </TabPanel>\n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/TransactionModal.js",["396","397","398"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { Box, Button } from \"@material-ui/core\";\n\nimport confirmmark from \"../assets/images/confirm.svg\";\nimport Checkmark from \"../assets/images/success.svg\";\nimport Crossmark from \"../assets/images/failure.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    width: 400,\n    //   padding: theme.spacing(2, 4, 3),\n    borderRadius: 5,\n  },\n  btntext: {\n    textTransform: \"capitalize\",\n  },\n  redText: {\n    color: \"red\",\n  },\n}));\n\nfunction TransactionModal(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.onClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <Box\n              display=\"flex\"\n              borderBottom={1}\n              borderColor={\"grey.500\"}\n              id=\"transition-modal-title\"\n              alignItems={\"center\"}\n            >\n              <Box\n                borderRight={1}\n                borderColor={\"grey.500\"}\n                width={70}\n                textAlign={\"center\"}\n              >\n                {props.type === \"confirm\" ? (\n                  <img src={confirmmark} width=\"50px\" />\n                ) : null}\n                {props.type === \"success\" ? (\n                  <img src={Checkmark} width=\"50px\" />\n                ) : null}\n                {props.type === \"failed\" ? (\n                  <img src={Crossmark} width=\"50px\" />\n                ) : null}\n              </Box>\n              <Box width={330} py={1} px={2}>\n                {props.type === \"confirm\" ? (\n                  <Box>\n                    <Box component={\"h2\"}> Confirm Purchase </Box>\n                    <small> Verify your purchase details </small>\n                  </Box>\n                ) : null}\n                {props.type === \"success\" ? (\n                  <Box>\n                    <Box component={\"h2\"}> Success! </Box>\n                    <small> Vehical purchased </small>\n                  </Box>\n                ) : null}\n                {props.type === \"failed\" ? (\n                  <Box>\n                    <Box component={\"h2\"}> Transaction Failed </Box>\n                    <small className={classes.redText}>\n                      {\" \"}\n                      Unable to complete payment, Please try again{\" \"}\n                    </small>\n                  </Box>\n                ) : null}\n              </Box>\n            </Box>\n            <Box p={2} id=\"transition-modal-description\">\n              <Box component={\"h4\"}>\n                2019 Mazda Mazda6 Grand Touring, Machine Gray Metallic\n              </Box>\n              <small> VIN 000000000000</small>\n              <Box p={2} my={2} borderRadius={5} bgcolor={\"#e6e6e6\"}>\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                  <Box color={\"#000000\"} fontWeight={500}>\n                    Payoff\n                  </Box>\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\n                </Box>\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                  <Box color={\"#000000\"} fontWeight={500}>\n                    Admin Fee\n                  </Box>\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\n                </Box>\n                <Box borderBottom={1} borderColor={\"error.main\"} my={1}></Box>\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\n                  <Box fontWeight={\"fontWeightBold\"}>Total</Box>\n                  <Box fontWeight={\"fontWeightBold\"}>$00.000.00</Box>\n                </Box>\n              </Box>\n\n              <Box display={\"flex\"} justifyContent={\"space-between\"} px={1}>\n                <Box fontWeight={500}>Bank Account</Box>\n                <Box fontWeight={500}>City(...00000)</Box>\n              </Box>\n\n              {props.type !== \"confirm\" ? (\n                <Box\n                  display={\"flex\"}\n                  justifyContent={\"space-between\"}\n                  px={1}\n                  mt={1}\n                >\n                  <Box fontWeight={500}>Transaction Number</Box>\n                  {props.type === \"success\" ? (\n                    <Box fontWeight={500}>00000000000</Box>\n                  ) : null}\n                </Box>\n              ) : null}\n\n              {props.type !== \"confirm\" ? (\n                <Box p={1} my={2} borderRadius={5} bgcolor={\"#faffbd\"}>\n                  <Box fontSize={12}>\n                    Purchanse transaction may be completed, but the funds will\n                    be pulled from your bank account in 2-3 days.\n                  </Box>\n                </Box>\n              ) : null}\n\n              {props.type === \"confirm\" ? (\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\n                  <Box mr={2}>\n                    <Button\n                      variant=\"outlined\"\n                      className={classes.btntext}\n                      onClick={props.onClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Box>\n                  <Box>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.btntext}\n                    >\n                      Confirm\n                    </Button>\n                  </Box>\n                </Box>\n              ) : null}\n\n              {props.type !== \"confirm\" ? (\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\n                  <Box>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.btntext}\n                    >\n                      Continue\n                    </Button>\n                  </Box>\n                </Box>\n              ) : null}\n            </Box>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TransactionModal;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundVehicleMFS.js",["399"],"import React, { useState } from \"react\";\n\nexport default function GroundVehicleMFS(props) {\n  return (\n    <div className=\"groundVehicleMFS\">\n      <p>\n        By grounding this vehicle, dealer will have multiple purchase options\n        and customer will be invoiced asa lease return.\n      </p>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/GroundVehiclePLV.js",["400"],"import React, { useState } from \"react\";\n\nexport default function GroundVehicleMFS(props) {\n  return (\n    <div className=\"groundVehiclePLV\">\n      <p>\n        Dealer is responsible for paying off the vehicle and customer will not\n        recieve any lease-end charges.\n      </p>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Search/Search.js",["401","402","403","404"],"import React, { useState } from \"react\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nconst Search = (props) => {\n  const [search, setSearch] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const placeholder = props.placeholder;\n  const serachBoxEntire = props.searchBox;\n  const showSearchLeft = props.showSearchLeft;\n  const showSearchRight = props.showSearchRight;\n  const searchCompleted = props.searchCompleted;\n\n  return (\n    <div style={serachBoxEntire}>\n      {showSearchLeft && (\n        <div className=\"searchDiv\">\n          {\" \"}\n          <img\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\n            alt=\"Logo\"\n            width=\"20px\"\n            height=\"20px\"\n          />{\" \"}\n        </div>\n      )}\n      <input\n        value={props?.searchValue}\n        className=\"searchInput\"\n        onChange={(evt) => props?.editSearchTerm(evt)}\n        placeholder={placeholder}\n      />\n      {showSearchRight && (\n        <div className=\"searchDiv\">\n          {\" \"}\n          <img\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\n            alt=\"Logo\"\n            width=\"20px\"\n            height=\"20px\"\n          />{\" \"}\n        </div>\n      )}\n\n      <br></br>\n      <div>\n        {searchResults?.map((name, index) => (\n          <div key={index}>{name}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Search;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/groundedListPage.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport SwipeableTextMobileStepper from \"./Carousel\";\nimport moment from \"moment\";\nimport {\n  getGroundingList,\n  getAuthTokenSSO,\n  getAccessTokenEndpoint,\n  getUserInfo,\n  getImageData,\n  // getCarXml,\n} from \"../../service/api\";\nimport CurrencyFormat from \"react-currency-format\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PassOnVehicle from \"../PassOnVehicle\";\nimport ExclusivityPeriod from \"./ExclusivityPeriod\";\nimport Loaderpage from \"../LoaderPage\";\nimport { Box } from \"@material-ui/core\";\n// const parseString = require(\"xml2js\").parseString;\n\nlet resp = [\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12000,\n    residual_amt: 11000,\n    remaining_pmts: 250,\n    model_year: 19,\n    brand: \"MAZDA\",\n    model: \"SD\",\n    ext_color: \"Color\",\n    grounding_date: \"2021-08-13T00:00:00\",\n    odometer_reading: \"9000\",\n    vin: \"JM3KFBDM0K1698372\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12500,\n    residual_amt: 9000,\n    remaining_pmts: 300,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Black\",\n    grounding_date: \"2021-05-11T00:00:00\",\n    odometer_reading: \"12000\",\n    vin: \"JM3KFADM3K1586305\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 14000,\n    residual_amt: 11000,\n    remaining_pmts: 400,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-07T00:00:00\",\n    odometer_reading: \"8000\",\n    vin: \"3MZBPBCM4LM125760\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 15000,\n    residual_amt: 14000,\n    remaining_pmts: 500,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-08T00:00:00\",\n    odometer_reading: \"6000\",\n    vin: \"JM3KFABM2L0748452\",\n  },\n];\nexport default function ListingPage(props) {\n  const [vehicleResponse, setVehicleResponse] = useState(resp);\n  const [SSOAuth, setSSOAuth] = useState();\n  const [value, setValue] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [time, setTime] = React.useState(\"00:00\");\n  const [passVin, setPassVin] = React.useState(\"\");\n  const [images, setImages] = React.useState([]);\n  const [loader, setLoader] = React.useState(true);\n\n  useEffect(() => {\n    getVehicleDetails();\n    //getImages();\n  }, [value]);\n\n  async function getVehicleDetails() {\n    let apiResponse = await getGroundingList();\n    setVehicleResponse(apiResponse.data.data);\n    console.log(\"------->\", apiResponse.data);\n    setLoader(false);\n  }\n\n  useEffect(() => {\n    getAuthTokenSSO1();\n  }, [value]);\n\n  async function getAuthTokenSSO1() {\n    let apiResponse = await getAuthTokenSSO();\n    setSSOAuth(apiResponse.data.data);\n    console.log(\"-------0------>\", SSOAuth);\n  }\n\n  const getImages = async () => {\n    let reqObj = {\n      inspectionId: 18734078,\n      paramForImage: \"Inspection_Front_Page\",\n      tenantId: \"t002\",\n    };\n    let getimagesRes = await getImageData(reqObj);\n    console.log(\"get image data::\", getimagesRes);\n\n    getimagesRes &&\n      getimagesRes.data &&\n      getimagesRes.data.imageDetails.map((item) => {\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\n      });\n    setImages(getimagesRes?.data.imageDetails);\n  };\n\n  // const getImages = async () => {\n  //   // let obj = {\n  //   //     \"inspectionId\": 0,\n  //   //     \"paramForImage\": \"string\",\n  //   //     \"tenantId\": \"string\"\n  //   //   }\n\n  //     // let getimagesRes = getImageData(null);\n  //     // console.log(\"get image data::\", getimagesRes)\n\n  //   // let getXmlImages = await getCarXml();\n  //   // parseString(getXmlImages.data, (err, body) => {\n  //   //   console.log(\"get Xml Images::\", body);\n  //   // });\n  // };\n\n  const openConditionReport = (VINumber, vehicle) => {\n    props.history.push(\"/conditionreport\", {\n      vin: VINumber,\n      purchaseSection: true,\n      vehicleDetails: vehicle,\n    });\n  };\n  const openConditionScreen = (VINumber, vehicle) => {\n    props.history.push(\"/conditionreport\", {\n      vin: VINumber,\n      vehicleDetails: vehicle,\n    });\n  };\n  const handleOpen = (vin) => {\n    setPassVin(vin);\n    setOpen(!open);\n  };\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  React.useEffect(() => {\n    // const timer = setInterval(() => {\n    //     setProgress(oldProgress => {\n    //         if (oldProgress === 100) {\n    //             return 0;\n    //         }\n    //         return Math.min(oldProgress + 15, 100);\n    //     });\n    // }, 1000);\n    const timer = setInterval(() => {\n      var d1 = moment.duration();\n      var d2 = d1.clone();\n      var x = d1.add(24, \"hours\");\n\n      let timeremaining = moment.unix(x).format(\"hh:mm\");\n      setTime(timeremaining);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const getEstimagetTimeRemaining = (grounding_date) => {\n    setInterval(() => {\n      let time = moment(grounding_date).unix();\n      let end = moment.duration(1, \"d\");\n      var duration = moment.duration(end.diff(time));\n      let hours = time.add(end).asHours();\n\n      let timeremaining = moment.unix(hours).format(\"hh:mm\");\n      setTime(timeremaining);\n    }, 600);\n  };\n\n  return (\n    <>\n      {vehicleResponse?.length > 0 ? (\n        vehicleResponse.map((vehicle, index) => {\n          return (\n            <div className=\"listingPageCard\" key={index}>\n              <Grid container spacing={3}>\n                <Grid item xs={4}>\n                  {vehicle.inspection_status === \"Inspection Complete\" ? (\n                    <SwipeableTextMobileStepper\n                      // vehical={vehicle}\n                      images={vehicle.groundingImage}\n                    />\n                  ) : (\n                    <img\n                      className=\"pendingImg\"\n                      src=\"inspection_pending.png\"\n                      alt=\"pending\"\n                    />\n                  )}\n\n                  {/* <img\n                    className=\"pendingImg\"\n                    src=\"inspection_pending.png\"\n                    alt=\"pending\"\n                  /> */}\n                </Grid>\n                <Grid item xs={4}>\n                  <div className=\"Year-Make-Model-Col\">\n                    <div className=\"vehicleMakeModel\">\n                      <span>\n                      {vehicle.model_year} {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\n                        \n                      </span>\n                    </div>\n                    <List>\n                      {/* <span className=\"textStyle\">\n                        <span className=\"textBold\"> Exclusivity Period</span>:{\" \"}\n                        <span className=\"textStyleWarning\">\n                          {time} Remaining\n                        </span>\n                      </span>\n                      <span className=\"progressStyle\">\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={progress}\n                          color=\"secondary\"\n                        />\n                      </span>  */}\n\n                      {vehicle.vehicle_price ? (\n                        <ExclusivityPeriod vehicle={vehicle} />\n                      ) : (\n                        \"\"\n                      )}\n\n                      <span className=\"textStyle\">\n                        <span className=\"textBold\"> VIN:</span>\n                        <a\n                          className=\"vin\"\n                          onClick={openConditionScreen.bind(\n                            this,\n                            vehicle.vin,\n                            vehicle\n                          )}\n                        >\n                          {\" \"}\n                          {vehicle.vin}\n                        </a>\n                      </span>\n\n                      <span className=\"textStyle\">\n                        <span className=\"textBold\"> Grounding Date:</span>{\" \"}\n                        {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\n                      </span>\n                      <span className=\"textStyle\">\n                        <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\n                        <CurrencyFormat\n                          value={vehicle.odometer_reading}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                          suffix={\" miles\"}\n                        />\n                      </span>\n                      <span className=\"textStyle\">\n                        <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\n                        {vehicle.inspection_status === \"Inspection Complete\" ? (\n                          <CurrencyFormat\n                            value={vehicle.inspection_mileage}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            suffix={\"miles\"}\n                          />\n                        ) : (\n                          \"Pending\"\n                        )}\n                      </span>\n                      <span className=\"textStyle\">\n                        <span className=\"textBold\"> Account Type: </span>{\" \"}\n                        {vehicle.account_type}\n                      </span>\n                    </List>\n                  </div>\n                </Grid>\n                <Grid item xs={4}>\n                  <div className=\"Vehicle-Price-Option\">\n                    <div className=\"vehicleMakeModel1\">\n                      <span>Vehicle Price Options </span>\n                    </div>\n                    <List>\n                      <ListItem className=\"paddingCSS\">\n                        <ListItemText>\n                          <span className=\"textStyle\">\n                            <span className=\"textBold\"> Payoff </span>\n                          </span>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <span className=\"textSize\">\n                            <CurrencyFormat\n                              value={\n                                vehicle.pay_off_amt ? vehicle.pay_off_amt : \"\"\n                              }\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          </span>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n\n                      <ListItem className=\"paddingCSS\">\n                        <ListItemText>\n                          <span className=\"textStyle\">\n                            <span className=\"textBold\">\n                              {\" \"}\n                              Residual + Remaining Payments{\" \"}\n                            </span>\n                          </span>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <span className=\"textSize\">\n                            <CurrencyFormat\n                              value={\n                                vehicle.residual_amt + vehicle.remaining_pmts\n                              }\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          </span>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      <ListItem className=\"paddingCSS\">\n                        <ListItemText>\n                          <span className=\"textStyle\">\n                            <span className=\"textBold\"> Market </span>\n                          </span>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <span className=\"textSize\">\n                            {vehicle.vehicle_price ? (\n                              <CurrencyFormat\n                                value={vehicle.vehicle_price}\n                                displayType={\"text\"}\n                                thousandSeparator={true}\n                                prefix={\"$\"}\n                              />\n                            ) : (\n                              \"Pending\"\n                            )}\n                          </span>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      <ListItem className=\"paddingCSS\">\n                        <ListItemText>\n                          <span className=\"textStyle\">\n                            <span className=\"textBold\">\n                              {\" \"}\n                              Market + Remaining Payments{\" \"}\n                            </span>\n                          </span>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                          <span className=\"textSize\">\n                            {/* <CurrencyFormat\n                              value={\n                                vehicle.remaining_pmts\n                                  ? vehicle.remaining_pmts\n                                  : \"\"\n                              }\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            /> */}\n                            Pending\n                          </span>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    </List>\n                    <div className=\"NavigatorButtons\">\n                      <Button\n                        className=\"PassonVehicleStyle\"\n                        onClick={handleOpen.bind(this, vehicle.vin)}\n                      >\n                        Pass on vehicle\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\"button\"\n                        onClick={openConditionReport.bind(\n                          this,\n                          vehicle.vin,\n                          vehicle\n                        )}\n                      >\n                        {\"Purchase Vehicle\"}\n                      </Button>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          );\n        })\n      ) : (\n        <div>\n          {loader ? (\n            <Box\n              height={\"90vh\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n            >\n              <div>\n                <Loaderpage />\n                <span className=\"loaderText\">Loading...</span>\n              </div>\n            </Box>\n          ) : (\n            <div className=\"listingPageCardNoData\">\n              <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\n              <span className=\"nodataText\">No Vehicles found</span>\n            </div>\n          )}\n        </div>\n      )}\n      <PassOnVehicle\n        open={open}\n        close={handleClose}\n        vin={passVin}\n        reload={() => {\n          getVehicleDetails();\n          props.fireEvents();\n        }}\n      />\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/passedPage.js",["420","421","422","423","424","425"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport SwipeableTextMobileStepper from \"./Carousel\";\nimport moment from \"moment\";\nimport {\n  getPassedList,\n  getImageData,\n  getTransportationDetails,\n} from \"../../service/api\";\nimport CurrencyFormat from \"react-currency-format\";\nimport VerticalVehicleStepper from \"../../components/Stepper/VerticalStepper\";\nimport Loaderpage from \"../LoaderPage\";\nimport { Box } from \"@material-ui/core\";\nlet resp = [\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12000,\n    residual_amt: 11000,\n    remaining_pmts: 250,\n    model_year: 19,\n    brand: \"MAZDA\",\n    model: \"SD\",\n    ext_color: \"Color\",\n    grounding_date: \"2021-05-11T00:00:00\",\n    odometer_reading: \"9000\",\n    vin: \"JM3KFBDM0K1698372\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12500,\n    residual_amt: 9000,\n    remaining_pmts: 300,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Black\",\n    grounding_date: \"2021-05-11T00:00:00\",\n    odometer_reading: \"12000\",\n    vin: \"JM3KFADM3K1586305\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 14000,\n    residual_amt: 11000,\n    remaining_pmts: 400,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-07T00:00:00\",\n    odometer_reading: \"8000\",\n    vin: \"3MZBPBCM4LM125760\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 15000,\n    residual_amt: 14000,\n    remaining_pmts: 500,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-08T00:00:00\",\n    odometer_reading: \"6000\",\n    vin: \"JM3KFABM2L0748452\",\n  },\n];\nexport default function ListingPage1(props) {\n  const [vehicleResponse, setVehicleResponse] = useState([]);\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\n  const [value, setValue] = useState([]);\n  const [images, setImages] = React.useState([]);\n  const [transport, setTransport] = useState({});\n  const [loader, setLoader] = React.useState(true);\n\n  useEffect(() => {\n    getVehicleDetails();\n    getImages();\n  }, [value]);\n  async function getVehicleDetails() {\n    let apiResponse = await getPassedList();\n\n    getTransportDetails(apiResponse?.data.data);\n  }\n\n  async function getTransportDetails(data) {\n    if (data.length !== 0) {\n      let vinlistqueryparams = \"\";\n      data.forEach((item, index) => {\n        if (data.length - 1 === index) {\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin;\n        } else {\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin + \"&\";\n        }\n      });\n\n      console.log(\"vinlistqueryparams\", vinlistqueryparams);\n\n      let apiResponse = await getTransportationDetails(vinlistqueryparams);\n      setTransport(apiResponse.data);\n      setVehicleResponse(data);\n      setLoader(false);\n    }\n  }\n\n  const openConditionScreen = (VINumber, vehicle) => {\n    props.history.push(\"/conditionreport\", {\n      vin: VINumber,\n      vehicleDetails: vehicle,\n    });\n  };\n\n  const getImages = async () => {\n    let reqObj = {\n      inspectionId: 18734078,\n      paramForImage: \"Inspection_Front_Page\",\n      tenantId: \"t002\",\n    };\n    let getimagesRes = await getImageData(reqObj);\n    console.log(\"get image data::\", getimagesRes);\n\n    getimagesRes &&\n      getimagesRes.data &&\n      getimagesRes.data.imageDetails.map((item) => {\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\n      });\n    setImages(getimagesRes.data.imageDetails);\n  };\n\n  return vehicleResponse?.length > 0 ? (\n    vehicleResponse.map((vehicle, index) => {\n      return (\n        <div className=\"listingPageCard\" key={index}>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              {vehicle.inspection_mileage > 0 ? (\n                <SwipeableTextMobileStepper vehical={vehicle} images={images} />\n              ) : (\n                <img\n                  className=\"pendingImg\"\n                  src=\"inspection_pending.png\"\n                  alt=\"pending\"\n                />\n              )}\n            </Grid>\n            <Grid item xs={4}>\n              <div className=\"Year-Make-Model-Col\">\n                <div className=\"vehicleMakeModel\">\n                  <span>\n                  {vehicle.model_year} {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\n                \n                  </span>\n                </div>\n                <List>\n                  {/* <span className=\"textStyle\">\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\n                                        </span>\n                                        <span className=\"progressStyle\">\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                        </span> */}\n\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> VIN:</span>\n                    <a\n                      className=\"vin\"\n                      onClick={openConditionScreen.bind(\n                        this,\n                        vehicle.vin,\n                        vehicle\n                      )}\n                    >\n                      {\" \"}\n                      {vehicle.vin}\n                    </a>\n                  </span>\n\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Grounding Date:</span>{\" \"}\n                    {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\n                    <CurrencyFormat\n                      value={vehicle.odometer_reading}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      suffix={\"  miles\"}\n                    />\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\n                    Pending\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Account Type: </span>{\" \"}\n                    {vehicle.account_type}\n                  </span>\n                </List>\n              </div>\n            </Grid>\n            <Grid item xs={4}>\n              <div className=\"Vehicle-Price-Option\">\n                <VerticalVehicleStepper\n                  vin={vehicle.vin}\n                  transportData={transport}\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      );\n    })\n  ) : (\n    <div>\n      {loader ? (\n        <Box\n          height={\"90vh\"}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <div>\n            <Loaderpage />\n            <span className=\"loaderText\">Loading...</span>\n          </div>\n        </Box>\n      ) : (\n        <div className=\"listingPageCardNoData\">\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\n          <span className=\"nodataText\">No Vehicles found</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ViewDetailedReport.js",["426","427","428","429","430","431","432","433","434","435"],"import React, { useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MyGallery from \"./ImageGallery\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CurrencyFormat from \"react-currency-format\";\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\nconst BlueTooltip = withStyles({\n    tooltip: {\n        width: \"185px\",\n        height: \"68px\",\n        fontSize: \"12px\",\n        lineHeight: 1.6,\n        color: \"#080707\",\n        borderRadius: \"4px\",\n  boxShadow: \"0 2px 3px 0 rgba(0, 0, 0, 0.16)\",\n  backgroundColor: \"#fff\",\n    }\n  })(Tooltip);\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nlet DamageDetails = {\n  damageDetails: [\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Windshield\",\n      partlabor_hours: 0,\n      total: \"285.00\",\n      paint_rate: 46,\n      chargeable_flag: \"true\",\n      paint_hours: 0,\n      part_cost: 200,\n      damage_type: \"X\",\n      damage_description:\n        'w/s glass mazda w/o wiper deicer w/o smart city br - 1X2.0\" Cracked (Replace)',\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Front Bumper\",\n      partlabor_hours: 0,\n      total: \"221.60\",\n      paint_rate: 46,\n      chargeable_flag: \"true\",\n      paint_hours: 2,\n      part_cost: 0,\n      damage_type: \"X\",\n      damage_description:\n        'bmpr cvr w/parking sensors hiroshima plant - 1X8.0\" Cracked (Repair)',\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Right Fender\",\n      partlabor_hours: 0,\n      total: \"0.00\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 0,\n      part_cost: 0,\n      damage_type: \"X\",\n      damage_description: \"Fndr pnl -  Previous repair (REPORT)\",\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Right Front Door\",\n      partlabor_hours: 0,\n      total: \"0.00\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 0,\n      part_cost: 0,\n      damage_type: \"X\",\n      damage_description: \"Door shell -  SSR-Dirt in Paint (REPORT)\",\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Left 1/4 Panel\",\n      partlabor_hours: 0,\n      total: \"169.20\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 2,\n      part_cost: 0,\n      damage_type: \"X\",\n      damage_description:\n        'Otr 1/4 pnl - 1X3.0\" Dented / dinged - paint broken (Repair)',\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Left Rear Door\",\n      partlabor_hours: 0,\n      total: \"55.00\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 0,\n      part_cost: 55,\n      damage_type: \"X\",\n      damage_description:\n        'Door shell - 1X1.5\" Dented / dinged - paint not broken (Repair)',\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Front Left Tire\",\n      partlabor_hours: 0,\n      total: \"200.00\",\n      paint_rate: 46,\n      chargeable_flag: \"true\",\n      paint_hours: 0,\n      part_cost: 200,\n      damage_type: \"X\",\n      damage_description: '19 Inch Tire - 1X3.0\" Cut (Replace)',\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Warning Light\",\n      partlabor_hours: 0,\n      total: \"34.00\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 0,\n      part_cost: 0,\n      damage_type: \"M\",\n      damage_description:\n        \"Check engine warning light -  Stays on (FurtherDiagnosis)\",\n    },\n    {\n      inspection_id: 232211,\n      vin: \"JM3KFADM6L0797974\",\n      damage_location_detail: \"Rear Left Wheel/Cover\",\n      partlabor_hours: 0,\n      total: \"100.00\",\n      paint_rate: 46,\n      chargeable_flag: \"false\",\n      paint_hours: 0,\n      part_cost: 100,\n      damage_type: \"X\",\n      damage_description:\n        'aly whl 19\" type 1 dicastal brand - 1X2.0\" Scratched (Repair)',\n    },\n  ],\n  interiorCost: 0,\n  exteriorCost: 1030.8,\n  mechanicalCost: 34,\n  excessiveWandT: 706.6,\n  normal: 358.2,\n  inspectionPaintRate: 50,\n  inspectionLaborRate: 60,\n};\nexport default function ViewDetailedReport(props) {\n  const [open, setOpen] = React.useState(false);\n  const [interior, setInterior] = React.useState([]);\n  const [exterior, setExterior] = React.useState([]);\n  const [mechanical, setMechanical] = React.useState([]);\n  const [finalTotal, setFinalTotal] = React.useState([]);\n  const [damagedesc, setDamagedesc] = React.useState(\"\");\n\n  let wheelTyrelistOfItem = [\"LF\", \"RF\"];\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    props.close();\n  };\n\n  //const {DamageDetails}=props;\n  const handleSeperation = () => {\n    let interior = [];\n    let exterior = [];\n    let mechanical = [];\n    let total = 0;\n    if (DamageDetails?.damageDetails?.length > 0) {\n      DamageDetails?.damageDetails?.map((row) => {\n        if (row.damage_type == \"X\") {\n          exterior.push(row);\n        } else if (row.damage_type == \"I\") {\n          interior.push(row);\n        } else if (row.damage_type == \"M\") {\n          mechanical.push(row);\n        }\n        total = total + (row.total ? parseFloat(row.total) : \"$0\");\n      });\n      console.log(exterior, \"iiiiiiii\");\n      console.log(interior, \"iiiiiiii\");\n      console.log(mechanical, \"iiiiiiii\");\n      setExterior(exterior);\n      setInterior(interior);\n      setMechanical(mechanical);\n      setFinalTotal(total);\n    }\n  };\n  useEffect(() => {\n    handleSeperation();\n  }, [props.DamageDetails]);\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        maxWidth={\"lg\"}\n        aria-labelledby=\"max-width-dialog-title\"\n        open={props.open}\n      >\n        <DialogTitle\n          className=\"viewReportHeader\"\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Damage Report\n        </DialogTitle>\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={6} className=\"galleryView\">\n              <MyGallery getDamageDesc={(e) =>{ e? setDamagedesc(e) :setDamagedesc(\"\") }} />\n            </Grid>\n\n            <Grid xs={6}>\n              <div className=\"viewReportCenter\">\n                Estimated Damage Repair Totals\n              </div>\n              <div className=\"hrLine\" />\n              <Grid container className=\"experiorSpacing\">\n                <Grid item xs={12}>\n                  <List>\n                    <ListItem>\n                      <ListItemText className=\"smallCardTitle\">\n                        <span className=\"textBold alignleft\">Interior</span>\n                      </ListItemText>\n                      <ListItemSecondaryAction className=\"smallCardBody \">\n                        {DamageDetails.interiorCost ? (\n                          <CurrencyFormat\n                            value={DamageDetails.interiorCost}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                          />\n                        ) : (\n                          \"$0.00\"\n                        )}\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText className=\"smallCardTitle\">\n                        <span className=\"textBold alignleft\">Exterior</span>\n                      </ListItemText>\n                      <ListItemSecondaryAction className=\"smallCardBody \">\n                        {DamageDetails.exteriorCost ? (\n                          <CurrencyFormat\n                            value={DamageDetails.exteriorCost}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                          />\n                        ) : (\n                          \"$0.00\"\n                        )}\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText className=\"smallCardTitle\">\n                        <span className=\"textBold alignleft\">\n                          Mechanical total\n                        </span>\n                      </ListItemText>\n                      <ListItemSecondaryAction className=\"smallCardBody \">\n                        {DamageDetails.maintainenceCost ? (\n                          <CurrencyFormat\n                            value={DamageDetails.maintainenceCost}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                          />\n                        ) : (\n                          \"$0.00\"\n                        )}\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                      <ListItemText className=\"smallCardTitle\">\n                        <span className=\"textBold alignleft\">Normal W&T</span>\n                      </ListItemText>\n                      <ListItemSecondaryAction className=\"smallCardBody \">\n                        {DamageDetails.normal ? (\n                          <CurrencyFormat\n                            value={DamageDetails.normal}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                          />\n                        ) : (\n                          \"$0.00\"\n                        )}\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                    <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft \">Excessive W&T<BlueTooltip title={`Excessive W&T charges are those that may be billed to the lessee on their lease end invoice`}>\n                                                <div className=\"icontooltip\"><IconButton color='#005fb2'>\n                                                    <InfoIcon style={{width:\"16px\"}}color=\"#005fb2\"/>\n                                                </IconButton></div>\n                                            </BlueTooltip></span></ListItemText>\n                      <ListItemSecondaryAction className=\"smallCardBody \">\n                        {DamageDetails.excessiveWandT ? (\n                          <CurrencyFormat\n                            value={DamageDetails.excessiveWandT}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                          />\n                        ) : (\n                          \"$0.00\"\n                        )}\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </List>\n                </Grid>\n                <Grid item xs={12}>\n                  <div className=\"LabelTextTextAreaDamage\">\n                    Damage Area Description\n                  </div>\n                  <TextareaAutosize\n                    className=\"inputFieldTextAreaDamage\"\n                    aria-label=\"maximum height\"\n                    placeholder=\"Maximum 4 rows\"\n                    defaultValue={damagedesc}\n                    value={damagedesc}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} align=\"right\">\n            <div className=\"detailedReportRates\">\n              <span>\n                Labor Rate :{\" \"}\n                {DamageDetails.inspectionLaborRate\n                  ? `$${DamageDetails.inspectionLaborRate} /hr`\n                  : \"$000.00/hr\"}\n              </span>\n              <span>\n                {\" \"}\n                | Paint Rate:{\" \"}\n                {DamageDetails.inspectionPaintRate\n                  ? `$${DamageDetails.inspectionPaintRate} /hr`\n                  : \"$000.00/hr\"}\n              </span>\n            </div>\n          </Grid>\n          <TableContainer component={Paper}>\n            <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Damaged Area</TableCell>\n                  <TableCell align=\"left\" className=\"textWidth\">\n                    Wear & Tear\n                  </TableCell>\n                  <TableCell align=\"left\" className=\"textWidth\">\n                    Labor Hours\n                  </TableCell>\n                  <TableCell align=\"left\" className=\"textWidth\">\n                    Paint Hours\n                  </TableCell>\n                  <TableCell align=\"right\" className=\"textWidth\">\n                    Part Cost\n                  </TableCell>\n                  <TableCell align=\"right\" className=\"textWidth\">\n                    Estimate\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell\n                    colSpan={6}\n                    component=\"th\"\n                    scope=\"row\"\n                    className=\"textBold alignleft paddingTop\"\n                  >\n                    Interior\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                    <hr />\n                  </TableCell>\n                </TableRow>\n                {/* <TableRow >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].damage_area : 'N/A'}\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ?DamageDetails.damageDetails[0].damage_type : 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].partlabor_hours: 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].paint_hours? DamageDetails.damageDetails[0].paint_hours:0: 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].part_cost ? DamageDetails.damageDetails[0].part_cost : 0: 'N/A'}</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].total ? DamageDetails.damageDetails[0].total : 0: 'N/A'}</TableCell>\n                                </TableRow> */}\n                {interior.map((inter) => {\n                  return (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? `${inter.damage_location_detail} - ${inter.damage_description}`\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 150 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? inter.chargeable_flag == \"true\"\n                            ? \"E\"\n                            : \"N\"\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 150 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? inter.partlabor_hours\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 150 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? inter.paint_hours\n                            ? inter.paint_hours\n                            : 0\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 150 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          inter.part_cost ? (\n                            <CurrencyFormat\n                              value={inter.part_cost}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                      <TableCell astyle={{ width: 150 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          inter.total ? (\n                            <CurrencyFormat\n                              value={inter.total}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n                <TableRow>\n                  <TableCell\n                    colSpan={6}\n                    component=\"th\"\n                    scope=\"row\"\n                    className=\"textBold alignleft paddingTop\"\n                  >\n                    Exterior\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                    <hr />\n                  </TableCell>\n                </TableRow>\n                {/* <TableRow >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].damage_area : 'N/A'}\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ?DamageDetails.damageDetails[1].damage_type : 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].partlabor_hours: 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].paint_hours? DamageDetails.damageDetails[0].paint_hours:0: 'N/A'}</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].part_cost ? DamageDetails.damageDetails[0].part_cost : 0: 'N/A'}</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].total ? DamageDetails.damageDetails[0].total : 0: 'N/A'}</TableCell>\n                                </TableRow> */}\n                {exterior.map((exter) => {\n                  return (\n                    <TableRow>\n                      <TableCell>\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? `${exter.damage_location_detail} - ${exter.damage_description}`\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? exter.chargeable_flag == \"true\"\n                            ? \"E\"\n                            : \"N\"\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? exter.partlabor_hours\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? exter.paint_hours\n                            ? exter.paint_hours\n                            : 0\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          exter.part_cost ? (\n                            <CurrencyFormat\n                              value={exter.part_cost}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                              suffix={\".00\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                      <TableCell astyle={{ width: 90 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          exter.total ? (\n                            <CurrencyFormat\n                              value={exter.total}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n                <TableRow>\n                  <TableCell\n                    colSpan={6}\n                    component=\"th\"\n                    scope=\"row\"\n                    className=\"textBold alignleft paddingTop\"\n                  >\n                    Mechanical\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\n                    <hr />\n                  </TableCell>\n                </TableRow>\n                {mechanical.map((mech) => {\n                  return (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? `${mech.damage_location_detail} - ${mech.damage_description} `\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? mech.chargeable_flag == \"true\"\n                            ? \"E\"\n                            : \"N\"\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? mech.partlabor_hours\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"left\">\n                        {DamageDetails?.damageDetails?.length > 0\n                          ? mech.paint_hours\n                            ? mech.paint_hours\n                            : 0\n                          : \"N/A\"}\n                      </TableCell>\n                      <TableCell style={{ width: 90 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          mech.part_cost ? (\n                            <CurrencyFormat\n                              value={mech.part_cost}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                      <TableCell astyle={{ width: 90 }} align=\"right\">\n                        {DamageDetails?.damageDetails?.length > 0 ? (\n                          mech.total ? (\n                            <CurrencyFormat\n                              value={mech.total}\n                              displayType={\"text\"}\n                              thousandSeparator={true}\n                              prefix={\"$\"}\n                            />\n                          ) : (\n                            \"$0.00\"\n                          )\n                        ) : (\n                          \"N/A\"\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n\n                {/* {wheelTyrelistOfItem.map(list => {\n                                    return (\n                                        <TableRow key={list}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                Damage area name and description\n                                            </TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                                } */}\n                <TableRow>\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                    <hr />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\n                  <TableCell\n                    colSpan={1}\n                    style={{ width: 90 }}\n                    align=\"left\"\n                    className=\"align_right\"\n                  >\n                    Total\n                  </TableCell>\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\n                  <TableCell\n                    style={{ width: 90, float: \"right\", fontWeight: \"900\" }}\n                    align=\"left\"\n                    className=\"align_right11\"\n                  >\n                    <CurrencyFormat\n                      value={finalTotal}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"$\"}\n                      suffix={\"0\"}\n                    />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                    <hr />\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\n                    <div className=\"disclaimerVRS\">\n                      Disclaimer: Damage estimates are included for reference\n                      and may not be reflective of the actual repair costs\n                    </div>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </DialogContent>\n        <DialogActions className=\"reportFooter\">\n          <Button\n            autoFocus\n            onClick={handleClose}\n            className=\"closeButton\"\n            color=\"secondary\"\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/ImageGallery.js",["436","437","438"],"import ImageGallery from \"react-image-gallery\";\nimport React, { useEffect, useState } from \"react\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport { getCarXml, getImageData } from \"../service/api\";\nimport Loaderpage from \"./LoaderPage\";\nimport { Box } from \"@material-ui/core\";\n// const parseString = require(\"xml2js\").parseString;\n// const images = [\n//   {\n//     original: \"car.jpg\",\n//     thumbnail: \"car.jpg\",\n//   },\n//   {\n//     original: \"car1.jpg\",\n//     thumbnail: \"car1.jpg\",\n//   },\n//   {\n//     original: \"car2.jpg\",\n//     thumbnail: \"car2.jpg\",\n//   },\n//   {\n//     original: \"car1.jpg\",\n//     thumbnail: \"car1.jpg\",\n//   },\n//   {\n//     original: \"car2.jpg\",\n//     thumbnail: \"car2.jpg\",\n//   },\n//   {\n//     original: \"car.jpg\",\n//     thumbnail: \"car.jpg\",\n//   },\n//   {\n//     original: \"car1.jpg\",\n//     thumbnail: \"car1.jpg\",\n//   },\n//   {\n//     original: \"car2.jpg\",\n//     thumbnail: \"car2.jpg\",\n//   },\n// ];\n\nexport default function MyGallery(props) {\n  const [images, setImages] = useState([]);\n  const [loader, setLoader] = React.useState(true);\n\n  useEffect(() => {\n    getImages();\n  }, []);\n  const getImages = async () => {\n    // let getXmlImages = await getCarXml();\n    // parseString(getXmlImages.data, (err, body) => {\n    //   console.log(\"get Xml Images::\", body[\"ns0:sendVehicle\"][\"ns0:vehicles\"]);\n    //   let imageArray = body[\"ns0:sendVehicle\"][\"ns0:vehicles\"];\n    //   let imgagesdata = [];\n    //   for (let img of imageArray) {\n    //     let imgobj = {\n    //       original: \"data:image/jpeg;base64,\" + img[\"ns0:image\"][0],\n    //       thumbnail: \"data:image/jpeg;base64,\" + img[\"ns0:image\"][0],\n    //     };\n    //     imgagesdata.push(imgobj);\n    //   }\n\n    //   console.log(\"imgagesdata\", imgagesdata);\n    //   setImages(imgagesdata);\n    // });\n\n    let reqObj = {\n      inspectionId: 18734078,\n      paramForImage: \"ALL\",\n      tenantId: \"t002\",\n    };\n    let getimagesRes = await getImageData(reqObj);\n\n    console.log(\"get image data::\", getimagesRes);\n\n    setImages(getimagesRes.data.imageDetails);\n    let imgagesdata = [];\n    for (let img of getimagesRes.data.imageDetails) {\n      let imgobj = {\n        original: \"data:image/jpeg;base64,\" + img.binImageArray,\n        thumbnail: \"data:image/jpeg;base64,\" + img.binImageArray,\n        damageDescription: img.damageDescription,\n      };\n      imgagesdata.push(imgobj);\n    }\n\n    console.log(\"imgagesdata\", imgagesdata);\n    setImages(imgagesdata);\n    setLoader(false);\n\n    props.getDamageDesc &&\n      props.getDamageDesc(imgagesdata[0].damageDescription);\n  };\n\n  const onSlideGetIndex = (index) => {\n    console.log(\"index\", index);\n\n    props.getDamageDesc && props.getDamageDesc(images[index].damageDescription);\n  };\n\n  return (\n    <div>\n      {images.length != 0 ? (\n        <ImageGallery\n          {...props}\n          items={images}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          onSlide={onSlideGetIndex}\n        />\n      ) : (\n        <div>\n          {loader ? (\n            <Box\n              height={\"350px\"}\n              display={\"flex\"}\n              justifyContent={\"center\"}\n              alignItems={\"center\"}\n            >\n              <div>\n                <Loaderpage />\n                <span className=\"loaderText\">Loading...</span>\n              </div>\n            </Box>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SearchText/Search.js",["439","440","441","442","443","444","445"],"import React, { useState } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nconst SearchText = (props) => {\n  const [search, setSearch] = useState();\n  const [searchResults, setSearchResults] = useState();\n  const placeholder = props.placeholder;\n  const serachBoxEntire = props.searchBox;\n  const showSearchLeft = props.showSearchLeft;\n  const showSearchRight = props.showSearchRight;\n  const searchCompleted = props.searchCompleted;\n\n  return (\n    <div className=\"search\">\n      <InputBase\n        placeholder={placeholder}\n        variant=\"outlined\"\n        value={props?.searchValue}\n        maxlength=\"18\"\n        className=\"searchInput\"\n        fullWidth\n        onChange={(evt) => props?.editSearchTerm(evt)}\n      />\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <CloseIcon />\n      </IconButton>\n\n      <br></br>\n      <div>\n        {searchResults?.map((name, index) => (\n          <div key={index}>{name}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default SearchText;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/purchasedPage.js",["446","447","448","449","450","451","452","453","454"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport SwipeableTextMobileStepper from \"./Carousel\";\nimport moment from \"moment\";\nimport CurrencyFormat from \"react-currency-format\";\nimport {\n  getAccessTokenEndpoint,\n  getPurchasedList,\n  getUserInfoToken,\n  getImageData,\n} from \"../../service/api\";\nimport Loaderpage from \"../LoaderPage\";\nimport { Box } from \"@material-ui/core\";\n\nlet resp = [\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12000,\n    residual_amt: 11000,\n    remaining_pmts: 250,\n    model_year: 19,\n    brand: \"MAZDA\",\n    model: \"SD\",\n    ext_color: \"Color\",\n    grounding_date: \"2021-05-11T00:00:00\",\n    odometer_reading: \"9000\",\n    groundingDetails: {\n      vin: \"JM3KFBDM0K1698372\",\n    },\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 12500,\n    residual_amt: 9000,\n    remaining_pmts: 300,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Black\",\n    grounding_date: \"2021-05-11T00:00:00\",\n    odometer_reading: \"12000\",\n    groundingDetails: {\n      vin: \"JM3KFADM3K1586305\",\n    },\n    vin: \"JM3KFADM3K1586305\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 14000,\n    residual_amt: 11000,\n    remaining_pmts: 400,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-07T00:00:00\",\n    odometer_reading: \"8000\",\n    groundingDetails: {\n      vin: \"3MZBPBCM4LM125760\",\n    },\n    vin: \"3MZBPBCM4LM125760\",\n  },\n  {\n    account_type: \"LEASE\",\n    pay_off_amt: 15000,\n    residual_amt: 14000,\n    remaining_pmts: 500,\n    model_year: 2018,\n    brand: \"MAZDA\",\n    model: \"MAZDA3\",\n    ext_color: \"Blue\",\n    grounding_date: \"2021-05-08T00:00:00\",\n    odometer_reading: \"6000\",\n    groundingDetails: {\n      vin: \"JM3KFABM2L0748452\",\n    },\n    vin: \"JM3KFABM2L0748452\",\n  },\n];\n\nexport default function ListingPage2(props) {\n  const [vehicleResponse, setVehicleResponse] = useState([]);\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\n  const [value, setValue] = useState([]);\n  const [images, setImages] = React.useState([]);\n  const [loader, setLoader] = React.useState(true);\n\n  useEffect(() => {\n    getVehicleDetails();\n    getImages();\n  }, [value]);\n  async function getVehicleDetails() {\n    let apiResponse = await getPurchasedList(\"ALL\");\n    setVehicleResponse(apiResponse?.data.data);\n    console.log(vehicleResponse);\n    // console.log(apiResponse?.data.data);\n    setLoader(false);\n  }\n\n  const getImages = async () => {\n    let reqObj = {\n      inspectionId: 18734078,\n      paramForImage: \"Inspection_Front_Page\",\n      tenantId: \"t002\",\n    };\n    let getimagesRes = await getImageData(reqObj);\n    console.log(\"get image data::\", getimagesRes);\n\n    getimagesRes &&\n      getimagesRes.data &&\n      getimagesRes.data.imageDetails.map((item) => {\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\n      });\n    setImages(getimagesRes.data.imageDetails);\n  };\n\n  return vehicleResponse?.length > 0 ? (\n    vehicleResponse.map((vehicle, index) => {\n      return (\n        <div className=\"listingPageCard\" key={index}>\n          <Grid container spacing={3}>\n            <Grid item xs={4}>\n              {/* <SwipeableTextMobileStepper /> */}\n              {vehicle.inspection_mileage > 0 ? (\n                <SwipeableTextMobileStepper vehical={vehicle} images={images} />\n              ) : (\n                <img\n                  className=\"pendingImg\"\n                  src=\"inspection_pending.png\"\n                  alt=\"pending\"\n                />\n              )}\n            </Grid>\n            <Grid item xs={4}>\n              <div className=\"Year-Make-Model-Col\">\n                <div className=\"vehicleMakeModel\">\n                  <span>\n                  {vehicle.model_year} {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\n                    \n                  </span>\n                </div>\n                <List>\n                  {/* <span className=\"textStyle\">\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\n                                        </span>\n                                        <span className=\"progressStyle\">\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                        </span> */}\n\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> VIN:</span>\n                    <a className=\"vin\" href={`/conditionreport${vehicle.vin}`}>\n                      {\" \"}\n                      {vehicle.vin}\n                    </a>\n                  </span>\n\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Purchase Date:</span>{\" \"}\n                    {moment(vehicle.purchase_date).format(\"MM/DD/YYYY\")}\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\n                    <CurrencyFormat\n                      value={vehicle.odometer_reading}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                    />{\" \"}\n                    miles\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\n                    Pending\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Purchase Type:</span>{\" \"}\n                    {vehicle.purchase_type ? vehicle.purchase_type : \"\"}\n                  </span>\n                </List>\n              </div>\n            </Grid>\n            <Grid item xs={4}>\n              <div className=\"Vehicle-Price-Option\">\n                <div className=\"vehicleMakeModel\">\n                  <span>Vehicle Cost </span>\n                </div>\n                <List>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Payoff Price </span>{\" \"}\n                    <span className=\"margin__space4\">\n                      <CurrencyFormat\n                        value={\n                          vehicle.groundingDetails &&\n                          vehicle.groundingDetails.pay_off_amt\n                        }\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"$\"}\n                      />\n                    </span>\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Rem.Payments</span>{\" \"}\n                    <span className=\"margin__space5\">\n                      <CurrencyFormat\n                        value={\n                          vehicle.groundingDetails &&\n                          vehicle.groundingDetails.remaining_pmts\n                        }\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"$\"}\n                      />\n                    </span>\n                  </span>\n                  <span className=\"textStyle\">\n                    <span className=\"textBold\"> Admin Fee</span>{\" \"}\n                    <span className=\"margin__space6\">\n                      <CurrencyFormat\n                        value={vehicle.admin_fee}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"$\"}\n                      />\n                    </span>\n                  </span>\n                  <div className=\"purchasedScreenTotal\" />\n                  <span className=\"textStyle\">\n                    <span className=\"textStyleTotalFee\"> Total Price</span>{\" \"}\n                    <span className=\"totalFeeSum\">\n                      <CurrencyFormat\n                        value={\n                          vehicle.groundingDetails &&\n                          vehicle.groundingDetails.pay_off_amt +\n                            vehicle.groundingDetails &&\n                          vehicle.groundingDetails.remaining_pmts +\n                            vehicle.admin_fee\n                        }\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"$\"}\n                      />\n                    </span>\n                  </span>\n                </List>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n      );\n    })\n  ) : (\n    <div>\n      {loader ? (\n        <Box\n          height={\"90vh\"}\n          display={\"flex\"}\n          justifyContent={\"center\"}\n          alignItems={\"center\"}\n        >\n          <div>\n            <Loaderpage />\n            <span className=\"loaderText\">Loading...</span>\n          </div>\n        </Box>\n      ) : (\n        <div className=\"listingPageCardNoData\">\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\n          <span className=\"nodataText\">No Vehicles found</span>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/service/api.js",["455","456","457","458","459","460"],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Separator.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/AdminSearchHeader.js",["461","462","463","464","465"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 300,\n        height: 35,\n        margin: '7px 8px'\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n        fontSize: '14px',\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function AdminSearchHeader(props) {\n    const classes = useStyles();\n    const [searchtext, setSearchtext] = React.useState(\"\");\n\n    const handleSearchText = (value) => {\n        console.log(props)\n        props.searchdetails(value);\n        setSearchtext(value)\n        \n    }\n    if(!localStorage.getItem('dealerCode')){\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Global Search by VIN\"\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\n                onChange={(evt) => props.searchdetails(evt.target.value)}\n            />\n        </Paper>\n    );\n    }\n    else \n    return (  \n        <div>\n            \n        </div>\n    );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/PurchasedPricingSideBar.js",["466","467","468","469","470","471","472","473","474","475"],"import React, { useEffect, useState } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Box, Select } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getDealerPaymentsData, getPurchaseDetails } from \"../service/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"30px\",\n    height: \"30px\",\n    backgroundColor: \"#B80F0A\",\n    borderRadius: \"50%\",\n    fontSize: \"12px\",\n    padding: \"10px 20px 13px 12px\",\n    color: \"white\",\n  },\n  sideBarCSS: {\n    marginLeft: \"16px\",\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    height: \"10px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\nexport default function PurchasedPricingSideBar(props) {\n  const [open, setOpen] = React.useState(true);\n  const classes = useStyles();\n\n  const [accountName, setAccountName] = React.useState(\"\");\n  const [paymentMethods, SetPaymentMethods] = React.useState([]);\n  const [accountMaskNumber, setAccountMaskNumber] = React.useState(null);\n  const [purchasedData, setPurchasedData] = React.useState({});\n\n  useEffect(async () => {\n    let getDealerPaymentsRes = await getDealerPaymentsData();\n    console.log(\"getDealerPaymentsData\", getDealerPaymentsRes);\n    getDealerPaymentsRes &&\n      getDealerPaymentsRes.data &&\n      getDealerPaymentsRes.data.PaymentMethod &&\n      SetPaymentMethods(getDealerPaymentsRes.data.PaymentMethod);\n\n    let getPurchaseDetailsRes = await getPurchaseDetails(props.vin);\n    console.log(\"getPurchaseDetailsRes:::\", getPurchaseDetailsRes);\n    setPurchasedData(getPurchaseDetailsRes.data.data);\n  }, []);\n\n  const handleChangeAccountName = (event) => {\n    setAccountName(event.target.value);\n    paymentMethods.forEach((item) => {\n      if (item.achAccountName == event.target.value) {\n        console.log(item);\n        setAccountMaskNumber(item.achAccountNumberMask);\n      }\n    });\n  };\n\n  const handleClick = () => {\n    //setOpen(!open);\n  };\n  const handleOnChange = (event) => {\n    setFilterInput({\n      ...filterInput,\n      ...{ [event.target.name]: event.target.value },\n    });\n  };\n  const [filterInput, setFilterInput] = useState({\n    vin: \"\",\n    yearFrom: \"\",\n    yearTo: \"\",\n    make: \"\",\n    inspectionStatus: \"\",\n    inspectionDateFrom: \"\",\n    inspectionDateTo: \"\",\n    groundingRegion: \"\",\n    auctionCode: \"\",\n  });\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <div className=\"manualPricingSidebar\">\n      <ListItem className=\"notesSectionHeader\">Purchase Page</ListItem>\n      <ListItem>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Vehicle pricing options</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            value={value}\n            onChange={handleChange}\n          >\n            <Box\n              px={2}\n              py={1}\n              mt={1}\n              boxShadow={\"0px 0px 4px lightgray\"}\n              borderRadius={4}\n            >\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"Payoff\" />\n              <p> ${purchasedData.payOffAmount} </p>\n            </Box>\n            <Box\n              px={2}\n              py={1}\n              mt={1}\n              boxShadow={\"0px 0px 4px lightgray\"}\n              borderRadius={4}\n            >\n              <FormControlLabel\n                value=\"2\"\n                control={<Radio />}\n                label=\"Residual + Remaining Payments\"\n              />\n              <p>\n                {\" \"}\n                $\n                {parseInt(parseFloat(purchasedData.remainingPmts).toFixed(2)) +\n                  parseInt(\n                    parseFloat(purchasedData.residualAmount).toFixed(2)\n                  )}{\" \"}\n              </p>\n            </Box>\n            <Box\n              px={2}\n              py={1}\n              mt={1}\n              boxShadow={\"0px 0px 4px lightgray\"}\n              borderRadius={4}\n            >\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"Market\" />\n              <p> ${purchasedData.vehiclePrice} </p>\n            </Box>\n            <Box\n              px={2}\n              py={1}\n              mt={1}\n              boxShadow={\"0px 0px 4px lightgray\"}\n              borderRadius={4}\n            >\n              <FormControlLabel\n                value=\"4\"\n                control={<Radio />}\n                label=\"Market + Remaining Payments \"\n              />\n              <p>\n                {\" \"}\n                $\n                {parseInt(purchasedData.vehiclePrice) +\n                  parseInt(purchasedData.remainingPmts)}{\" \"}\n              </p>\n            </Box>\n          </RadioGroup>\n        </FormControl>\n      </ListItem>\n      <Divider variant=\"middle\" />\n      <ListItem>\n        <ListItemText className=\"manualPricing\">Admin. Fee:</ListItemText>\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\n      </ListItem>\n      <Divider variant=\"middle\" />\n      <ListItem>\n        <ListItemText className=\"manualPricing\">Total Fee:</ListItemText>\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\n      </ListItem>\n      <ListItem>\n        <ListItemText className=\"manualPricing\">\n          <Box>Account Nick Name</Box>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel> */}\n            <Select\n              style={{ lineHeight: \"2.1em\" }}\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={accountName}\n              onChange={handleChangeAccountName}\n            >\n              {/* <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem> */}\n              {paymentMethods &&\n                paymentMethods.map((opt, index) => (\n                  <MenuItem key={index} value={opt.achAccountName}>\n                    {opt.achAccountName}\n                  </MenuItem>\n                ))}\n              {/* <MenuItem value={20}>BOFA</MenuItem>\n              <MenuItem value={30}>CHASE</MenuItem> */}\n            </Select>\n          </FormControl>\n        </ListItemText>\n      </ListItem>\n      <ListItem>\n        <ListItemText className=\"manualPricing\">\n          <Box px={1} mb={2}>\n            <Box color={\"gray\"}>Dealers bank account number </Box>\n            <Box color={\"black\"} p={1} bgcolor={\"lightgray\"} borderRadius={4}>\n              {accountMaskNumber || \"****0000\"}\n            </Box>\n          </Box>\n        </ListItemText>\n      </ListItem>\n\n      <List className=\"purchasePassBtn\">\n        <Button className=\"passButton\" color=\"primary\">\n          Pass on Vehicle\n        </Button>\n        <Button\n          disabled={!accountName || !value}\n          className=\"purchaseButton\"\n          color=\"secondary\"\n          onClick={props.onPurchaseVehical}\n        >\n          Purchase Vehicle\n        </Button>\n      </List>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Pagination.js",["476","477","478","479","480"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    padding: \"5px 26px 5px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 4,\n      borderColor: \"#80bdff\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\n    },\n  },\n}))(InputBase);\n\nfunction Paginator(props) {\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\n  const [totalData, setTotalData] = useState(data);\n  const [noOfPages, setNoOfPages] = useState(1);\n  const [skipRecords, setSkipRecords] = useState(0);\n\n  useEffect(() => {\n    setNoOfPages(Math.ceil(totalData.length / pageCount));\n    onChangePage(totalData.slice(skipRecords, pageCount));\n  }, [pageCount]);\n\n  const handleChangePageCount = (event) => {\n    event.preventDefault();\n    event.target && event.target.value && setPageCount(event.target.value);\n  };\n\n  const onChangePageNumber = (event, page) => {\n    event.preventDefault();\n    let skip = (page - 1) * pageCount;\n    setSkipRecords(skip);\n    onChangePage(totalData.slice(skip, skip + pageCount));\n  };\n\n  return (\n    <div>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        alignItems=\"center\"\n        p={2}\n        className=\"custompagination\"\n      >\n        <Box pr={2}> {label} </Box>\n        <Box pr={2}>\n          <FormControl>\n            <Select\n              labelId=\"demo-customized-select-label\"\n              id=\"demo-customized-select\"\n              value={pageCount}\n              onChange={handleChangePageCount}\n              input={<BootstrapInput />}\n            >\n              {pages &&\n                pages.map((menuitem, index) => (\n                  <MenuItem key={index} value={menuitem}>\n                    {\" \"}\n                    {menuitem}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <Pagination\n          count={noOfPages}\n          color=\"primary\"\n          variant=\"outlined\"\n          onChange={onChangePageNumber}\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default Paginator;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/StatusHistory.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/LoaderPage.js",[],"/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/Carousel.js",["481","482","483","484","485","486","487","488","489","490","491"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n\nimport Carousel from \"react-material-ui-carousel\";\nimport { Paper, Button } from \"@material-ui/core\";\n\nimport { getImageData } from \"../../service/api\";\n\nconst tutorialSteps = [\n  {\n    imgPath: \"maz.png\",\n  },\n  {\n    imgPath: \"car.png\",\n  },\n  {\n    imgPath: \"maz.png\",\n  },\n  {\n    imgPath: \"maz.png\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n    // border: \"solid 1px #dddbda\",\n    margin: \"20px\",\n    borderRadius: \"4px\",\n    // boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 255,\n    display: \"block\",\n    maxWidth: 400,\n    overflow: \"hidden\",\n    width: \"80%\",\n  },\n  card: {\n    boxShadow: \"unset !important\",\n    // border: \"1px solid gray\",\n  },\n}));\n\nconst Item = ({ image_bin_value }) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  return (\n    <Paper className={classes.card}>\n      <img\n        className=\"img\"\n        src={\"data:image/jpeg;base64,\" + image_bin_value}\n        alt={image_bin_value}\n      />\n    </Paper>\n  );\n};\n\nfunction SwipeableTextMobileStepper(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const maxSteps = tutorialSteps.length;\n\n  useEffect(() => {\n    console.log(\" props.images\", props.images);\n  }, []);\n\n  //   const handleNext = () => {\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  //   };\n\n  //   const handleBack = () => {\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  //   };\n\n  //   const handleStepChange = (step) => {\n  //     setActiveStep(step);\n  //   };\n\n  return (\n    <div className={classes.root}>\n      <Carousel\n        navButtonsAlwaysVisible={true}\n        autoPlay={false}\n        navButtonsProps={{\n          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\n          style: {\n            backgroundColor: \"white\",\n            color: \"gray\",\n          },\n        }}\n        // indicatorIconButtonProps={{\n        //     style: {\n        //         // padding: '10px',    // 1\n        //         color: 'l'       // 3\n        //     }\n        // }}\n\n        // activeIndicatorIconButtonProps={{\n        //     style: {\n        //         backgroundColor: 'blue' // 2\n        //     }\n        // }}\n      >\n        {props.images &&\n          props.images.map((item, i) => <Item key={i} {...item} />)}\n      </Carousel>\n\n      {/* <img className=\"img\" src={tutorialSteps[0].imgPath} alt={tutorialSteps[0].imgPath} /> */}\n\n      {/* <img className=\"img\" src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\n            <MobileStepper\n                steps={maxSteps}\n                position=\"static\"\n                activeStep={activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n\n                    </Button>\n                }\n            /> */}\n    </div>\n  );\n}\n\nexport default SwipeableTextMobileStepper;\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/PassOnVehicle.js",["492","493","494","495","496","497"],"import React, { useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { postDealerActionPassOnVehicle } from \"../service/api\";\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function PassOnVehicle(props) {\n  const [open, setOpen] = React.useState(false);\n  const [noCall, setnoCall] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    props.close();\n  };\n\n  const handleProceed = () => {\n    setOpen(false);\n    // setnoCall(true);\n    getPassOnDetails();\n    props.close();\n  };\n\n  // useEffect(() => {\n  //     getPassOnDetails();\n  // }, [noCall]);\n\n  async function getPassOnDetails() {\n    let apiResponse = await postDealerActionPassOnVehicle(props.vin);\n    props.reload();\n  }\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n        open={props.open}\n      >\n        <DialogTitle\n          className=\"viewReportHeader\"\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Pass On vehicle\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n          <Grid container>\n            <Grid xs={12}>\n              <div className=\"viewReportCenter\">You have passed on Vehicle</div>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions className=\"reportFooter\">\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            autoFocus\n            onClick={handleProceed}\n            className=\"closePassBtn\"\n            color=\"secondary\"\n          >\n            Proceed\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/AdminDetailedReport.js",["498","499","500","501","502","503"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MyGallery from \"./ImageGallery\";\nimport { getInspectionVehicleDetails } from \"../service/api\";\nimport moment from \"moment\";\n\nexport default function AdminDetailedReport(props) {\n  let groundingDetails = {\n    \"Account Number\": \"00000000000\",\n    \"Current Status\": \"Detail\",\n    \"Customer Return Date\": \"00/00/2021\",\n    \"Current Status\": \"Detail\",\n    \"Grounding Dealer Number\": \"00000000000\",\n    \"Grounding Dealer Name\": \"Dealer Name\",\n    \"Grounding Date\": \"00/00/2021\",\n    \"Grounding Mileage\": \"000,000 mi\",\n    \"Transportation Order Date\": \"00/00/2021\",\n    \"Transportation Company\": \"Company Name\",\n    \"Bankruptcy Code\": \"Detail\",\n    \"Term Code\": \"Detail\",\n    \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\n    Type: \"Detail\",\n    Residual: \"$00,000.00\",\n    \"Current Payoff Amount\": \"$00,000.00\",\n    \"Grounding Dealer Auction\": \"Detail\",\n    \"Total Outstanding Remaining Payments\": \"00\",\n    \"Guaranteed Payments\": \"$00,000.00\",\n    \"Payment Guarantee\": \"Yes/No\",\n    \"10-Day Rule No Charge Amount\": \"$00,000.00\",\n    \"Payoff at Grounding\": \"?????\",\n    \"Market Based Price\": \"$00,000.00\",\n    \"Remaining Payments at Grounding\": \"$00,000.00\",\n  };\n  let inspectionDetails = {\n    \"Inspection Scheduled Date\": `${moment(\n      props?.inspectiondata?.inspection_date\n    ).format(\"MM/DD/YYYY\")}`,\n    \"Inspection Date\": \"00/00/2021\",\n    \"Inspection Status\": \"Detail\",\n    \"Inspection Mileage\": \"000,000 mi\",\n    \"Master Keys Returned\": \"00\",\n    \"Value Keys Returned\": \"00\",\n    \"Inspection Type\": \"Detail\",\n    \"Excess Wear & Tear Amount\": \"$00,000.00\",\n  };\n\n  let purchaseDetails = {\n    \"Sold Date\": \"00/00/2021\",\n    \"Purchasing Dealer\": \"Dealer Name\",\n    \"Purchase Dealer Number\": \"00000000000\",\n    \"Purchase Type\": \"Detail\",\n    \"Gross Purchase Amount\": \"$00,000.00\",\n    \"Purchasing Dealer Legal Name\": \"Detail\",\n  };\n  const [open, setOpen] = React.useState(false);\n  const [condionVehicleDetails, setCondionVehicleDetails] = useState({});\n  const [vin, setvin] = useState(\"JM3KFBDM0K1698372\");\n\n  console.log(\"admndetailedreport props:\", props);\n\n  useEffect(() => {\n    getConditionVehicleDetails();\n  }, [vin]);\n\n  async function getConditionVehicleDetails() {\n    let apiResponse = await getInspectionVehicleDetails(vin);\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\n    setCondionVehicleDetails(apiResponse.data);\n  }\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <div className=\"conditionPageCard\">\n      <Grid container spacing={3} className=\"ConditionCardReportSpace\">\n        <Grid item xs={5}>\n          <MyGallery />\n        </Grid>\n        <Grid item xs={7}>\n          <div className=\"ConditionReportSection\">\n            <div className=\"reportTitle\">\n              <span>Year Make Model Color</span>\n            </div>\n            <span className=\"ConditionReportInspection\">\n              <span className=\"BadgeValue\">Inspection Complete</span>\n            </span>\n          </div>\n\n          <Grid container spacing={3}>\n            <Card className=\"vehicleSectionCR\">\n              <Typography variant=\"h6\">Grounding Details</Typography>\n              <hr />\n              <CardContent>\n                {Object.entries(groundingDetails).map(([key, value]) => {\n                  return (\n                    <List className=\"paddingCSS\" key={key}>\n                      <ListItemText>\n                        <span className=\"textStyle\">\n                          <span className=\"textBold\"> {key} </span>\n                        </span>\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        <span className=\"textSize\">{value}</span>\n                      </ListItemSecondaryAction>\n                    </List>\n                  );\n                })}\n              </CardContent>\n\n              <Typography variant=\"h6\">Inspection Details</Typography>\n              <hr />\n              <CardContent>\n                {Object.entries(inspectionDetails).map(([key, value]) => {\n                  return (\n                    <List className=\"paddingCSS\" key={key}>\n                      <ListItemText>\n                        <span className=\"textStyle\">\n                          <span className=\"textBold\"> {key} </span>\n                        </span>\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        <span className=\"textSize\">{value}</span>\n                      </ListItemSecondaryAction>\n                    </List>\n                  );\n                })}\n              </CardContent>\n              <Typography variant=\"h6\">Purchase Details</Typography>\n              <hr />\n              <CardContent>\n                {Object.entries(purchaseDetails).map(([key, value]) => {\n                  return (\n                    <List className=\"paddingCSS\" key={key}>\n                      <ListItemText>\n                        <span className=\"textStyle\">\n                          <span className=\"textBold\"> {key} </span>\n                        </span>\n                      </ListItemText>\n                      <ListItemSecondaryAction>\n                        <span className=\"textSize\">{value}</span>\n                      </ListItemSecondaryAction>\n                    </List>\n                  );\n                })}\n              </CardContent>\n              <div className=\"disclaimerVRS\">\n                Disclaimer: The parts, equipment, accessories, and other\n                information listed above are based on equipment/configuration at\n                the time vehicle was sold by Mazda Motor Corporation to a dealer\n                and does not mean that this vehicle is still so equipped.\n              </div>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/pages/GroundPending/ExclusivityPeriod.js",["504","505","506","507","508"],"import React, { useState, useEffect } from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport * as moment from \"moment\";\nimport Moment from \"react-moment\";\n// import {\n//   getGroundingList,\n//   getAuthTokenSSO,\n//   getAccessTokenEndpoint,\n//   getUserInfo,\n//   getImageData,\n//   // getCarXml,\n// } from \"../../service/api\";\n\nexport default function ExclusivityPeriod(props) {\n  // const [starttime, setStartTime] = React.useState(\n  //   moment(props.vehicle.start_date).format()\n  // );\n  const [endtime, setEndTime] = React.useState(\n    moment(props.vehicle.end_date).format()\n  );\n  const [progress, setProgress] = React.useState(0);\n  const [duration, setDuration] = React.useState(null);\n  const [time, setTime] = React.useState(null);\n\n  useEffect(() => {\n    if (moment(endtime).isAfter(moment(Date.now()))) {\n      setInterval(() => {\n        let TotalDuration = moment.duration(\n          moment(props.vehicle.end_date).diff(moment(props.vehicle.start_date))\n        );\n        let CompletedDuration = moment.duration(\n          moment(Date.now()).diff(moment(props.vehicle.start_date))\n        );\n\n        if (\n          parseInt(TotalDuration.asMilliseconds()) &&\n          parseInt(CompletedDuration.asMilliseconds())\n        ) {\n          const completedPercentage =\n            (parseInt(CompletedDuration.asMilliseconds()) * 100) /\n            parseInt(TotalDuration.asMilliseconds());\n\n          setProgress(parseInt(completedPercentage));\n        }\n      }, 5000);\n\n      setInterval(() => {\n        setTime(\n          <Moment\n            date={endtime}\n            format=\"hh:mm:ss\"\n            trim\n            // durationFromNow={true}\n            duration={Date.now()}\n            interval={1000}\n            utc\n          />\n        );\n      }, 1000);\n    }\n  }, [endtime]);\n\n  return (\n    <>\n      <span className=\"textStyle\">\n        <span className=\"textBold\">\n          Exclusivity Period  &nbsp;\n          {/* {props.vehicle.groundingId} */}\n        </span>\n        :  &nbsp;\n        <span className=\"textStyleWarning\">\n          {moment(endtime).isAfter(moment(Date.now())) ? (\n            <span>\n              {time}\n              <span> Remaining </span>\n            </span>\n          ) : (\n            \"00:00\"\n          )}\n        </span>\n      </span>\n      <span className=\"progressStyle\">\n        {progress ? (\n          <LinearProgress\n            variant=\"determinate\"\n            value={progress}\n            color=\"secondary\"\n          />\n        ) : (\n          <LinearProgress variant=\"determinate\" value={0} color=\"secondary\" />\n        )}\n      </span>\n    </>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/Stepper/VerticalStepper.js",["509","510","511","512","513","514","515","516","517","518","519"],"import React,{useEffect} from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Block from '@material-ui/icons/Block';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport {getTransportationDetails} from '../../service/api'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\nconst QontoConnector = withStyles({\n    alternativeLabel: {\n      top: 10,\n      left: 'calc(-50% + 16px)',\n      right: 'calc(50% + 16px)',\n    },\n    active: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    completed: {\n      '& $line': {\n        borderColor: '#784af4',\n      },\n    },\n    line: {\n      borderColor: '#eaeaf0',\n      borderTopWidth: 3,\n      borderRadius: 1,\n    },\n  })(StepConnector);\n  \n  const useQontoStepIconStyles = makeStyles({\n    root: {\n      color: '#eaeaf0',\n      display: 'flex',\n      height: 22,\n      alignItems: 'center',\n    },\n    active: {\n      color: '#0091ff',\n    },\n    circle: {\n      width: 8,\n      height: 8,\n      borderRadius: '50%',\n      backgroundColor: 'currentColor',\n    },\n    completed: {\n      //color: '#0091ff',\n      color: '#c23934',\n      zIndex: 1,\n      fontSize: 22,\n    },\n  });\n  \n  function QontoStepIcon(props) {\n    const classes = useQontoStepIconStyles();\n    const { active, completed } = props;\n  \n    return (\n      <div\n        className={clsx(classes.root, {\n          [classes.active]: active,\n        })}\n      >\n        {completed ? <Block className={classes.completed} />: <RadioButtonCheckedIcon />}\n      </div>\n    );\n  }\n  \n  QontoStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n  };\nfunction getSteps() {\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\n}\nlet transportMetaData = ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\nexport default function VerticalVehicleStepper(props) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(2);\n    const steps = getSteps();\n\n    const [transportDetails, setTransportDetails] = React.useState(props.transportData);\n\n\n    useEffect(() =>{\n      setTransportInformation();\n    },[props.transportData]);\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const setTransportInformation = () => {\n      transportDetails?.data.length > 0 && transportDetails?.data.map(row =>{\n        if(row.vin == props.vin){\n          transportMetaData.map((trp,index) =>{\n             if(trp == row.derivedStatus){\n               setActiveStep(index);\n             }\n          })\n        }\n      });\n    };\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => {                    \n                    return (\n                        <Step key={label}>\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n                        </Step>\n                    )\n                }\n\n                )}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilterMileage.js",["520","521","522","523","524"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\n\nconst useStyles = makeStyles({\n  inline: {\n    display: \"inline-block\",\n    marginTop: \"25px\",\n  },\n  inlineDate: {\n    display: \"inline-block\",\n    marginTop: \"135px\",\n  },\n  list: {\n    width: 264,\n    height: \"100%\",\n    paddingBottom: \"64px\",\n    position: \"relative\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  filterStyles: {\n    display: \"flex\",\n    alignContent: \"center\",\n    paddingBottom: 10,\n  },\n  textField: {\n    width: \"216px\",\n    borderRadius: \"4px\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  updateButton: {\n    padding: \"4px 8px\",\n    minWidth: \"114px\",\n    borderRadius: \"4px\",\n    color: \"#ffffff!important\",\n    backgroundColor: \"#c23934!important\",\n  },\n  cancelButton: {\n    padding: \"4px 8px\",\n    minWidth: \"88px\",\n    borderRadius: \"4px\",\n    color: \"#0070d2!important\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  searchBlock: {\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"none\",\n  },\n  customSelect: {\n    marginTop: \"24px\",\n    color: \"#706e6b\",\n    fontSize: \"13px\",\n  },\n  selectFormControl: {\n    width: \"100%\",\n  },\n  iconButton: {\n    padding: \"2px 12px\",\n  },\n  filter: {\n    width: \"24px\",\n    fill: \"#706e6b !import\",\n    height: \"21.6px\",\n    margin: \"0 8px 0 0\",\n    padding: \"2.2px 1px\",\n  },\n  filterInput: {\n    height: \"32px\",\n  },\n  swipeFilterBtn: {\n    position: \"absolute\",\n    bottom: \"0\",\n    left: \"0px\",\n    padding: \"8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    background: \"#FFF\",\n  },\n  filterResultText: {\n    color: \"#006dcc\",\n    fontSize: \"13px\",\n    lineHeigt: \"20px\",\n    fontWeight: \"500\",\n    textTransform: \"lowercase\",\n    marginLeft: \"16px\",\n  },\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    height: \"10px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    display: \"inline-block\",\n    minWidth: \"65px\",\n    height: \"10px\",\n    marginRight: \"5px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nexport default function SwipableFilterMileage() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [filterInput, setFilterInput] = useState({\n    vin: \"\",\n    yearFrom: \"\",\n    yearTo: \"\",\n    make: \"\",\n    inspectionStatus: \"\",\n    inspectionDateFrom: \"\",\n    inspectionDateTo: \"\",\n    groundingRegion: \"\",\n    auctionCode: \"\",\n  });\n  const [makeOptions, setMakeOptions] = useState([\n    { value: \"audi\", text: \"Audi\" },\n    { value: \"bmw\", text: \"BMW\" },\n    { value: \"benz\", text: \"Benz\" },\n  ]);\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n    { value: \"pending\", text: \"Pending\" },\n    { value: \"completed\", text: \"Completed\" },\n  ]);\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n    { value: \"texas\", text: \"Texas\" },\n    { value: \"florida\", text: \"Florida\" },\n    { value: \"indiana\", text: \"Indiana\" },\n  ]);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleOnChange = (event) => {\n    setFilterInput({\n      ...filterInput,\n      ...{ [event.target.name]: event.target.value },\n    });\n  };\n\n  const handleOnSubmit = () => {\n    console.log(filterInput);\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      //onClick={toggleDrawer(anchor, false)}\n      //onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Filter Options\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"vin-input\">\n              VIN\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter full or partial VIN\"\n              id=\"vin-input\"\n              name=\"vin\"\n              value={filterInput.vin}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"year-input\">\n              Year Range\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"year-from-input\"\n              name=\"yearFrom\"\n              value={filterInput.yearFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"year-to-input\"\n              name=\"yearTo\"\n              value={filterInput.yearTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Make\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"make\"\n              value={filterInput.make}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {makeOptions.map((make, index) => (\n                <MenuItem value={make.value} key={index}>\n                  {make.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Inspection Status\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"inspectionStatus\"\n              value={filterInput.inspectionStatus}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\n                <MenuItem value={inspectionStatus.value} key={index}>\n                  {inspectionStatus.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"Inspection-input\">\n              Inspection Date\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateFrom\"\n              value={filterInput.inspectionDateFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateTo\"\n              value={filterInput.inspectionDateTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Grounding Region\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              displayEmpty\n              variant=\"outlined\"\n              name=\"groundingRegion\"\n              value={filterInput.groundingRegion}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {groundingRegionOptions.map((groundingRegion, index) => (\n                <MenuItem value={groundingRegion.value} key={index}>\n                  {groundingRegion.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"auction-code-input\">\n              Auction Code\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter code\"\n              id=\"auction-code-input\"\n              name=\"auctionCode\"\n              value={filterInput.auctionCode}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n      </List>\n      <List className={classes.swipeFilterBtn}>\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          autoFocus\n          className={classes.updateButton}\n          color=\"secondary\"\n          onClick={handleOnSubmit}\n        >\n          Update\n        </Button>\n      </List>\n    </div>\n  );\n\n  const handleSearchText = (value) => {\n    setSearchtext(value);\n  };\n\n  return (\n    <div className={classes.filterStyles}>\n      <Paper component=\"form\" className={classes.searchBlock}>\n        <IconButton\n          type=\"submit\"\n          className={classes.iconButton}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n        <InputBase\n          className={classes.filterInput}\n          placeholder=\"Search\"\n          inputProps={{ \"aria-label\": \"Search\" }}\n          onChange={(evt) => handleSearchText(evt.target.value)}\n        />\n      </Paper>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            className={classes.filterResultText}\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <GetImage imagename=\"filter\" className={classes.filter} />\n            {\"Filter Results\"}\n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilterRRM.js",["525","526","527","528","529"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\n\nconst useStyles = makeStyles({\n  inline: {\n    display: \"inline-block\",\n    marginTop: \"25px\",\n  },\n  inlineDate: {\n    display: \"inline-block\",\n    marginTop: \"135px\",\n  },\n  list: {\n    width: 264,\n    height: \"100%\",\n    paddingBottom: \"64px\",\n    position: \"relative\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  filterStyles: {\n    display: \"flex\",\n    alignContent: \"center\",\n    paddingBottom: 10,\n  },\n  textField: {\n    width: \"216px\",\n    borderRadius: \"4px\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  updateButton: {\n    padding: \"4px 8px\",\n    minWidth: \"114px\",\n    borderRadius: \"4px\",\n    color: \"#ffffff!important\",\n    backgroundColor: \"#c23934!important\",\n  },\n  cancelButton: {\n    padding: \"4px 8px\",\n    minWidth: \"88px\",\n    borderRadius: \"4px\",\n    color: \"#0070d2!important\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  searchBlock: {\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"none\",\n  },\n  customSelect: {\n    marginTop: \"24px\",\n    color: \"#706e6b\",\n    fontSize: \"13px\",\n  },\n  selectFormControl: {\n    width: \"100%\",\n  },\n  iconButton: {\n    padding: \"2px 12px\",\n  },\n  filter: {\n    width: \"24px\",\n    fill: \"#706e6b !import\",\n    height: \"21.6px\",\n    margin: \"0 8px 0 0\",\n    padding: \"2.2px 1px\",\n  },\n  filterInput: {\n    height: \"32px\",\n  },\n  swipeFilterBtn: {\n    position: \"absolute\",\n    bottom: \"0\",\n    left: \"0px\",\n    padding: \"8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    background: \"#FFF\",\n  },\n  filterResultText: {\n    color: \"#006dcc\",\n    fontSize: \"13px\",\n    lineHeigt: \"20px\",\n    fontWeight: \"500\",\n    textTransform: \"lowercase\",\n    marginLeft: \"16px\",\n  },\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    height: \"10px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    display: \"inline-block\",\n    minWidth: \"65px\",\n    height: \"10px\",\n    marginRight: \"5px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nexport default function SwipableFilterRRM() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [filterInput, setFilterInput] = useState({\n    vin: \"\",\n    yearFrom: \"\",\n    yearTo: \"\",\n    make: \"\",\n    inspectionStatus: \"\",\n    inspectionDateFrom: \"\",\n    inspectionDateTo: \"\",\n    groundingRegion: \"\",\n    auctionCode: \"\",\n  });\n  const [makeOptions, setMakeOptions] = useState([\n    { value: \"audi\", text: \"Audi\" },\n    { value: \"bmw\", text: \"BMW\" },\n    { value: \"benz\", text: \"Benz\" },\n  ]);\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n    { value: \"pending\", text: \"Pending\" },\n    { value: \"completed\", text: \"Completed\" },\n  ]);\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n    { value: \"texas\", text: \"Texas\" },\n    { value: \"florida\", text: \"Florida\" },\n    { value: \"indiana\", text: \"Indiana\" },\n  ]);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleOnChange = (event) => {\n    setFilterInput({\n      ...filterInput,\n      ...{ [event.target.name]: event.target.value },\n    });\n  };\n\n  const handleOnSubmit = () => {\n    console.log(filterInput);\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      //onClick={toggleDrawer(anchor, false)}\n      //onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Filter Options\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"vin-input\">\n              VIN\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter full or partial VIN\"\n              id=\"vin-input\"\n              name=\"vin\"\n              value={filterInput.vin}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"year-input\">\n              Year Range\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"year-from-input\"\n              name=\"yearFrom\"\n              value={filterInput.yearFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"year-to-input\"\n              name=\"yearTo\"\n              value={filterInput.yearTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Make\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"make\"\n              value={filterInput.make}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {makeOptions.map((make, index) => (\n                <MenuItem value={make.value} key={index}>\n                  {make.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Inspection Status\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"inspectionStatus\"\n              value={filterInput.inspectionStatus}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\n                <MenuItem value={inspectionStatus.value} key={index}>\n                  {inspectionStatus.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"Inspection-input\">\n              Inspection Date\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateFrom\"\n              value={filterInput.inspectionDateFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateTo\"\n              value={filterInput.inspectionDateTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Grounding Region\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              displayEmpty\n              variant=\"outlined\"\n              name=\"groundingRegion\"\n              value={filterInput.groundingRegion}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {groundingRegionOptions.map((groundingRegion, index) => (\n                <MenuItem value={groundingRegion.value} key={index}>\n                  {groundingRegion.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"auction-code-input\">\n              Auction Code\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter code\"\n              id=\"auction-code-input\"\n              name=\"auctionCode\"\n              value={filterInput.auctionCode}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n      </List>\n      <List className={classes.swipeFilterBtn}>\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          autoFocus\n          className={classes.updateButton}\n          color=\"secondary\"\n          onClick={handleOnSubmit}\n        >\n          Update\n        </Button>\n      </List>\n    </div>\n  );\n\n  const handleSearchText = (value) => {\n    setSearchtext(value);\n  };\n\n  return (\n    <div className={classes.filterStyles}>\n      <Paper component=\"form\" className={classes.searchBlock}>\n        <IconButton\n          type=\"submit\"\n          className={classes.iconButton}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n        <InputBase\n          className={classes.filterInput}\n          placeholder=\"Search\"\n          inputProps={{ \"aria-label\": \"Search\" }}\n          onChange={(evt) => handleSearchText(evt.target.value)}\n        />\n      </Paper>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            className={classes.filterResultText}\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <GetImage imagename=\"filter\" className={classes.filter} />\n            {\"Filter Results\"}\n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/CustomisedInput.js",["530","531","532"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 550,\n        marginRight: '50px'\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nexport default function CustomizedInputBase(props) {\n    const classes = useStyles();\n    const [searchtext, setSearchtext] = React.useState(\"\");\n    console.log(\"searchtext : \",searchtext)\n\n    const handleSearchText = (value) => {\n        setSearchtext(value)\n        props.searchdetails(searchtext)\n    }\n\n    return (\n        <Paper component=\"form\" className={classes.root}>\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n            <InputBase\n                className={classes.input}\n                placeholder=\"Search Vehicle By VIN\"\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\n                onChange={(evt) => handleSearchText(evt.target.value)}\n            />\n        </Paper>\n    );\n}\n","/Users/z003cbv/Desktop/ASPAuction/ASP-Final/ASP/src/components/SwipableFilter.js",["533","534","535","536","537"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\n\nconst useStyles = makeStyles({\n  inline: {\n    display: \"inline-block\",\n    marginTop: \"25px\",\n  },\n  inlineDate: {\n    display: \"inline-block\",\n    marginTop: \"135px\",\n  },\n  list: {\n    width: 264,\n    height: \"100%\",\n    paddingBottom: \"64px\",\n    position: \"relative\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  filterStyles: {\n    display: \"flex\",\n    alignContent: \"center\",\n    paddingBottom: 10,\n  },\n  textField: {\n    width: \"216px\",\n    borderRadius: \"4px\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  updateButton: {\n    padding: \"4px 8px\",\n    minWidth: \"114px\",\n    borderRadius: \"4px\",\n    color: \"#ffffff!important\",\n    backgroundColor: \"#c23934!important\",\n  },\n  cancelButton: {\n    padding: \"4px 8px\",\n    minWidth: \"88px\",\n    borderRadius: \"4px\",\n    color: \"#0070d2!important\",\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n  },\n  searchBlock: {\n    border: \"solid 1px #dddbda\",\n    backgroundColor: \"#ffffff\",\n    boxShadow: \"none\",\n  },\n  customSelect: {\n    marginTop: \"24px\",\n    color: \"#706e6b\",\n    fontSize: \"13px\",\n  },\n  selectFormControl: {\n    width: \"100%\",\n  },\n  filter: {\n    width: \"24px\",\n    fill: \"#706e6b !import\",\n    height: \"21.6px\",\n    margin: \"0 8px 0 0\",\n    padding: \"2.2px 1px\",\n  },\n  iconButton: {\n    padding: \"2px 12px\",\n  },\n  filterInput: {\n    height: \"32px\",\n  },\n  swipeFilterBtn: {\n    position: \"absolute\",\n    bottom: \"0\",\n    left: \"0px\",\n    padding: \"8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    background: \"#FFF\",\n  },\n  filterResultText: {\n    color: \"#006dcc\",\n    fontSize: \"13px\",\n    lineHeigt: \"20px\",\n    fontWeight: \"500\",\n    textTransform: \"lowercase\",\n    marginLeft: \"16px\",\n  },\n});\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    width: \"auto\",\n    height: \"10px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nconst SmallInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#ffffff\",\n    border: \"1px solid #ced4da\",\n    fontSize: 16,\n    display: \"inline-block\",\n    minWidth: \"65px\",\n    height: \"10px\",\n    marginRight: \"5px\",\n    padding: \"10px 12px\",\n    \"&:focus\": {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))(InputBase);\n\nexport default function SwipableFilter(props) {\n  const {\n    fetchDataBasedOnSearchValue,\n    fetchDataBasedOnFilters,\n    resetFilterList,\n  } = props;\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [filterInput, setFilterInput] = useState({\n    vin: \"\",\n    yearFrom: \"\",\n    yearTo: \"\",\n    make: \"\",\n    inspectionStatus: \"\",\n    inspectionDateFrom: \"\",\n    inspectionDateTo: \"\",\n    groundingRegion: \"\",\n    auctionCode: \"\",\n  });\n  const [makeOptions, setMakeOptions] = useState([\n    { value: \"CX-5\", text: \"CX-5\" },\n    { value: \"MX-5\", text: \"MX-5\" },\n    { value: \"Mazda3\", text: \"Mazda3\" },\n    { value: \"Mazda6\", text: \"Mazda6\" },\n  ]);\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\n    { value: \"Pending\", text: \"Pending\" },\n    { value: \"Completed\", text: \"Completed\" },\n  ]);\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\n    { value: \"Texas\", text: \"Texas\" },\n    { value: \"Florida\", text: \"Florida\" },\n    { value: \"Indiana\", text: \"Indiana\" },\n  ]);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleOnChange = (event) => {\n    setFilterInput({\n      ...filterInput,\n      ...{ [event.target.name]: event.target.value },\n    });\n  };\n\n  const resetFilterInput = () => {\n    setFilterInput({\n      vin: \"\",\n      yearFrom: \"\",\n      yearTo: \"\",\n      make: \"\",\n      inspectionStatus: \"\",\n      inspectionDateFrom: \"\",\n      inspectionDateTo: \"\",\n      groundingRegion: \"\",\n      auctionCode: \"\",\n    });\n    resetFilterList();\n    setState({ ...state, [\"right\"]: false });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      //onClick={toggleDrawer(anchor, false)}\n      //onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {[\"Filter Options\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"vin-input\">\n              VIN\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter full or partial VIN\"\n              id=\"vin-input\"\n              name=\"vin\"\n              value={filterInput.vin}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"year-input\">\n              Year Range\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"year-from-input\"\n              name=\"yearFrom\"\n              value={filterInput.yearFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"year-to-input\"\n              name=\"yearTo\"\n              value={filterInput.yearTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Make\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"make\"\n              value={filterInput.make}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {makeOptions.map((make, index) => (\n                <MenuItem value={make.value} key={index}>\n                  {make.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Inspection Status\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              variant=\"outlined\"\n              displayEmpty\n              name=\"inspectionStatus\"\n              value={filterInput.inspectionStatus}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\n                <MenuItem value={inspectionStatus.value} key={index}>\n                  {inspectionStatus.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"Inspection-input\">\n              Inspection Date\n            </InputLabel>\n            <SmallInput\n              placeholder=\"From\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateFrom\"\n              value={filterInput.inspectionDateFrom}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n          <FormControl className={classes.inline}>\n            <SmallInput\n              placeholder=\"To\"\n              id=\"Inspection-input\"\n              name=\"inspectionDateTo\"\n              value={filterInput.inspectionDateTo}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl className={classes.selectFormControl}>\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n              Grounding Region\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              className={classes.customSelect}\n              displayEmpty\n              variant=\"outlined\"\n              name=\"groundingRegion\"\n              value={filterInput.groundingRegion}\n              onChange={handleOnChange}\n            >\n              <MenuItem value=\"\" disabled>\n                Select All that Apply\n              </MenuItem>\n              {groundingRegionOptions.map((groundingRegion, index) => (\n                <MenuItem value={groundingRegion.value} key={index}>\n                  {groundingRegion.text}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem button>\n          <FormControl>\n            <InputLabel shrink htmlFor=\"auction-code-input\">\n              Auction Code\n            </InputLabel>\n            <BootstrapInput\n              placeholder=\"Enter code\"\n              id=\"auction-code-input\"\n              name=\"auctionCode\"\n              value={filterInput.auctionCode}\n              onChange={handleOnChange}\n            />\n          </FormControl>\n        </ListItem>\n      </List>\n      <List className={classes.swipeFilterBtn}>\n        <Button\n          autoFocus\n          className={classes.cancelButton}\n          color=\"primary\"\n          onClick={() => resetFilterInput()}\n        >\n          Cancel\n        </Button>\n        <Button\n          autoFocus\n          className={classes.updateButton}\n          color=\"secondary\"\n          onClick={() => fetchDataBasedOnFilters(filterInput)}\n        >\n          Update\n        </Button>\n      </List>\n    </div>\n  );\n\n  const handleSearchText = (value) => {\n    setSearchtext(value);\n  };\n\n  return (\n    <div className={classes.filterStyles}>\n      <Paper component=\"form\" className={classes.searchBlock}>\n        <IconButton\n          type=\"submit\"\n          className={classes.iconButton}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n        <InputBase\n          className={classes.filterInput}\n          placeholder=\"Search\"\n          inputProps={{ \"aria-label\": \"Search\" }}\n          value={searchtext || \"\"}\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\n          onChange={(evt) => handleSearchText(evt.target.value)}\n        />\n      </Paper>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button\n            className={classes.filterResultText}\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <GetImage imagename=\"filter\" className={classes.filter} />\n            {\"Filter Results\"}\n          </Button>\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n",{"ruleId":"538","replacedBy":"539"},{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","severity":1,"message":"543","line":10,"column":10,"nodeType":"544","messageId":"545","endLine":10,"endColumn":18},{"ruleId":"542","severity":1,"message":"546","line":10,"column":20,"nodeType":"544","messageId":"545","endLine":10,"endColumn":29},{"ruleId":"542","severity":1,"message":"547","line":10,"column":43,"nodeType":"544","messageId":"545","endLine":10,"endColumn":52},{"ruleId":"548","severity":1,"message":"549","line":36,"column":19,"nodeType":"550","messageId":"551","endLine":36,"endColumn":24},{"ruleId":"548","severity":1,"message":"549","line":50,"column":19,"nodeType":"550","messageId":"551","endLine":50,"endColumn":24},{"ruleId":"542","severity":1,"message":"552","line":2,"column":8,"nodeType":"544","messageId":"545","endLine":2,"endColumn":14},{"ruleId":"542","severity":1,"message":"553","line":6,"column":5,"nodeType":"544","messageId":"545","endLine":6,"endColumn":11},{"ruleId":"542","severity":1,"message":"554","line":7,"column":8,"nodeType":"544","messageId":"545","endLine":7,"endColumn":18},{"ruleId":"542","severity":1,"message":"555","line":53,"column":9,"nodeType":"544","messageId":"545","endLine":53,"endColumn":16},{"ruleId":"556","severity":1,"message":"557","line":65,"column":6,"nodeType":"558","endLine":65,"endColumn":61,"suggestions":"559"},{"ruleId":"556","severity":1,"message":"560","line":65,"column":7,"nodeType":"561","endLine":65,"endColumn":60},{"ruleId":"562","severity":1,"message":"563","line":13,"column":25,"nodeType":"564","messageId":"565","endLine":13,"endColumn":26,"suggestions":"566"},{"ruleId":"556","severity":1,"message":"567","line":25,"column":6,"nodeType":"568","endLine":25,"endColumn":8},{"ruleId":"556","severity":1,"message":"569","line":25,"column":6,"nodeType":"568","endLine":25,"endColumn":8,"suggestions":"570"},{"ruleId":"556","severity":1,"message":"571","line":28,"column":6,"nodeType":"558","endLine":28,"endColumn":13,"suggestions":"572"},{"ruleId":"573","severity":1,"message":"574","line":80,"column":5,"nodeType":"568","messageId":"575","endLine":80,"endColumn":19},{"ruleId":"542","severity":1,"message":"576","line":96,"column":9,"nodeType":"544","messageId":"545","endLine":96,"endColumn":14},{"ruleId":"556","severity":1,"message":"560","line":19,"column":7,"nodeType":"577","endLine":19,"endColumn":28},{"ruleId":"578","severity":1,"message":"579","line":19,"column":24,"nodeType":"577","messageId":"575","endLine":19,"endColumn":26},{"ruleId":"542","severity":1,"message":"580","line":39,"column":9,"nodeType":"544","messageId":"545","endLine":39,"endColumn":28},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"582","line":33,"column":8,"nodeType":"544","messageId":"545","endLine":33,"endColumn":24},{"ruleId":"542","severity":1,"message":"583","line":36,"column":7,"nodeType":"544","messageId":"545","endLine":36,"endColumn":17},{"ruleId":"542","severity":1,"message":"584","line":51,"column":7,"nodeType":"544","messageId":"545","endLine":51,"endColumn":26},{"ruleId":"542","severity":1,"message":"585","line":56,"column":15,"nodeType":"544","messageId":"545","endLine":56,"endColumn":21},{"ruleId":"542","severity":1,"message":"586","line":57,"column":20,"nodeType":"544","messageId":"545","endLine":57,"endColumn":31},{"ruleId":"542","severity":1,"message":"587","line":62,"column":10,"nodeType":"544","messageId":"545","endLine":62,"endColumn":15},{"ruleId":"542","severity":1,"message":"588","line":62,"column":17,"nodeType":"544","messageId":"545","endLine":62,"endColumn":25},{"ruleId":"542","severity":1,"message":"589","line":64,"column":10,"nodeType":"544","messageId":"545","endLine":64,"endColumn":29},{"ruleId":"556","severity":1,"message":"590","line":72,"column":6,"nodeType":"558","endLine":72,"endColumn":11,"suggestions":"591"},{"ruleId":"556","severity":1,"message":"592","line":81,"column":6,"nodeType":"558","endLine":81,"endColumn":8,"suggestions":"593"},{"ruleId":"556","severity":1,"message":"594","line":31,"column":3,"nodeType":"544","endLine":31,"endColumn":12,"suggestions":"595"},{"ruleId":"578","severity":1,"message":"579","line":58,"column":21,"nodeType":"577","messageId":"575","endLine":58,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":60,"column":33,"nodeType":"577","messageId":"575","endLine":60,"endColumn":35},{"ruleId":"578","severity":1,"message":"579","line":61,"column":27,"nodeType":"577","messageId":"575","endLine":61,"endColumn":29},{"ruleId":"542","severity":1,"message":"596","line":74,"column":9,"nodeType":"544","messageId":"545","endLine":74,"endColumn":22},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"597","line":6,"column":10,"nodeType":"544","messageId":"545","endLine":6,"endColumn":15},{"ruleId":"556","severity":1,"message":"598","line":15,"column":7,"nodeType":"599","endLine":15,"endColumn":41},{"ruleId":"542","severity":1,"message":"600","line":20,"column":8,"nodeType":"544","messageId":"545","endLine":20,"endColumn":18},{"ruleId":"542","severity":1,"message":"601","line":23,"column":3,"nodeType":"544","messageId":"545","endLine":23,"endColumn":17},{"ruleId":"542","severity":1,"message":"583","line":39,"column":7,"nodeType":"544","messageId":"545","endLine":39,"endColumn":17},{"ruleId":"542","severity":1,"message":"584","line":55,"column":7,"nodeType":"544","messageId":"545","endLine":55,"endColumn":26},{"ruleId":"542","severity":1,"message":"585","line":60,"column":15,"nodeType":"544","messageId":"545","endLine":60,"endColumn":21},{"ruleId":"542","severity":1,"message":"602","line":61,"column":27,"nodeType":"544","messageId":"545","endLine":61,"endColumn":45},{"ruleId":"542","severity":1,"message":"603","line":65,"column":10,"nodeType":"544","messageId":"545","endLine":65,"endColumn":25},{"ruleId":"542","severity":1,"message":"604","line":69,"column":26,"nodeType":"544","messageId":"545","endLine":69,"endColumn":43},{"ruleId":"556","severity":1,"message":"590","line":80,"column":6,"nodeType":"558","endLine":80,"endColumn":11,"suggestions":"605"},{"ruleId":"556","severity":1,"message":"592","line":100,"column":6,"nodeType":"558","endLine":100,"endColumn":20,"suggestions":"606"},{"ruleId":"578","severity":1,"message":"579","line":590,"column":83,"nodeType":"577","messageId":"575","endLine":590,"endColumn":85},{"ruleId":"542","severity":1,"message":"607","line":693,"column":10,"nodeType":"544","messageId":"545","endLine":693,"endColumn":14},{"ruleId":"542","severity":1,"message":"608","line":694,"column":10,"nodeType":"544","messageId":"545","endLine":694,"endColumn":21},{"ruleId":"542","severity":1,"message":"609","line":694,"column":23,"nodeType":"544","messageId":"545","endLine":694,"endColumn":37},{"ruleId":"542","severity":1,"message":"610","line":695,"column":10,"nodeType":"544","messageId":"545","endLine":695,"endColumn":21},{"ruleId":"542","severity":1,"message":"611","line":696,"column":10,"nodeType":"544","messageId":"545","endLine":696,"endColumn":19},{"ruleId":"542","severity":1,"message":"612","line":721,"column":9,"nodeType":"544","messageId":"545","endLine":721,"endColumn":30},{"ruleId":"542","severity":1,"message":"613","line":724,"column":9,"nodeType":"544","messageId":"545","endLine":724,"endColumn":25},{"ruleId":"614","severity":1,"message":"615","line":826,"column":23,"nodeType":"616","endLine":826,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":838,"column":23,"nodeType":"616","endLine":838,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":850,"column":23,"nodeType":"616","endLine":850,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":862,"column":23,"nodeType":"616","endLine":862,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":874,"column":23,"nodeType":"616","endLine":874,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":886,"column":23,"nodeType":"616","endLine":886,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":898,"column":23,"nodeType":"616","endLine":898,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":910,"column":23,"nodeType":"616","endLine":910,"endColumn":71},{"ruleId":"617","severity":1,"message":"618","line":923,"column":23,"nodeType":"616","endLine":926,"endColumn":24},{"ruleId":"578","severity":1,"message":"619","line":944,"column":39,"nodeType":"577","messageId":"575","endLine":944,"endColumn":41},{"ruleId":"573","severity":1,"message":"620","line":60,"column":5,"nodeType":"568","messageId":"575","endLine":60,"endColumn":18},{"ruleId":"542","severity":1,"message":"621","line":157,"column":9,"nodeType":"544","messageId":"545","endLine":157,"endColumn":27},{"ruleId":"578","severity":1,"message":"579","line":177,"column":21,"nodeType":"577","messageId":"575","endLine":177,"endColumn":23},{"ruleId":"578","severity":1,"message":"579","line":179,"column":33,"nodeType":"577","messageId":"575","endLine":179,"endColumn":35},{"ruleId":"578","severity":1,"message":"579","line":180,"column":27,"nodeType":"577","messageId":"575","endLine":180,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":202,"column":9,"nodeType":"616","endLine":207,"endColumn":10},{"ruleId":"614","severity":1,"message":"615","line":267,"column":15,"nodeType":"616","endLine":267,"endColumn":22},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"622","line":5,"column":8,"nodeType":"544","messageId":"545","endLine":5,"endColumn":17},{"ruleId":"542","severity":1,"message":"623","line":9,"column":8,"nodeType":"544","messageId":"545","endLine":9,"endColumn":18},{"ruleId":"614","severity":1,"message":"615","line":18,"column":7,"nodeType":"616","endLine":21,"endColumn":9},{"ruleId":"542","severity":1,"message":"624","line":66,"column":7,"nodeType":"544","messageId":"545","endLine":66,"endColumn":11},{"ruleId":"542","severity":1,"message":"607","line":1007,"column":10,"nodeType":"544","messageId":"545","endLine":1007,"endColumn":14},{"ruleId":"542","severity":1,"message":"625","line":1007,"column":16,"nodeType":"544","messageId":"545","endLine":1007,"endColumn":23},{"ruleId":"542","severity":1,"message":"608","line":1008,"column":10,"nodeType":"544","messageId":"545","endLine":1008,"endColumn":21},{"ruleId":"542","severity":1,"message":"609","line":1008,"column":23,"nodeType":"544","messageId":"545","endLine":1008,"endColumn":37},{"ruleId":"614","severity":1,"message":"615","line":1067,"column":23,"nodeType":"616","endLine":1067,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1079,"column":23,"nodeType":"616","endLine":1079,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1091,"column":23,"nodeType":"616","endLine":1091,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1103,"column":23,"nodeType":"616","endLine":1103,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1115,"column":23,"nodeType":"616","endLine":1115,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1127,"column":23,"nodeType":"616","endLine":1127,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1139,"column":23,"nodeType":"616","endLine":1139,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1151,"column":23,"nodeType":"616","endLine":1151,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1163,"column":23,"nodeType":"616","endLine":1163,"endColumn":71},{"ruleId":"614","severity":1,"message":"615","line":1175,"column":23,"nodeType":"616","endLine":1175,"endColumn":71},{"ruleId":"617","severity":1,"message":"618","line":1191,"column":23,"nodeType":"616","endLine":1194,"endColumn":24},{"ruleId":"578","severity":1,"message":"619","line":1227,"column":28,"nodeType":"577","messageId":"575","endLine":1227,"endColumn":30},{"ruleId":"542","severity":1,"message":"626","line":3,"column":8,"nodeType":"544","messageId":"545","endLine":3,"endColumn":24},{"ruleId":"542","severity":1,"message":"627","line":22,"column":12,"nodeType":"544","messageId":"545","endLine":22,"endColumn":16},{"ruleId":"542","severity":1,"message":"628","line":22,"column":18,"nodeType":"544","messageId":"545","endLine":22,"endColumn":25},{"ruleId":"542","severity":1,"message":"555","line":23,"column":11,"nodeType":"544","messageId":"545","endLine":23,"endColumn":18},{"ruleId":"542","severity":1,"message":"629","line":6,"column":8,"nodeType":"544","messageId":"545","endLine":6,"endColumn":20},{"ruleId":"542","severity":1,"message":"627","line":84,"column":10,"nodeType":"544","messageId":"545","endLine":84,"endColumn":14},{"ruleId":"542","severity":1,"message":"628","line":84,"column":16,"nodeType":"544","messageId":"545","endLine":84,"endColumn":23},{"ruleId":"556","severity":1,"message":"630","line":88,"column":13,"nodeType":"631","endLine":145,"endColumn":4},{"ruleId":"632","severity":1,"message":"633","line":97,"column":29,"nodeType":"631","messageId":"634","endLine":97,"endColumn":31},{"ruleId":"632","severity":1,"message":"633","line":98,"column":31,"nodeType":"631","messageId":"634","endLine":98,"endColumn":33},{"ruleId":"578","severity":1,"message":"579","line":99,"column":25,"nodeType":"577","messageId":"575","endLine":99,"endColumn":27},{"ruleId":"578","severity":1,"message":"579","line":103,"column":24,"nodeType":"577","messageId":"575","endLine":103,"endColumn":26},{"ruleId":"578","severity":1,"message":"579","line":114,"column":24,"nodeType":"577","messageId":"575","endLine":114,"endColumn":26},{"ruleId":"578","severity":1,"message":"579","line":125,"column":24,"nodeType":"577","messageId":"575","endLine":125,"endColumn":26},{"ruleId":"578","severity":1,"message":"619","line":142,"column":55,"nodeType":"577","messageId":"575","endLine":142,"endColumn":57},{"ruleId":"556","severity":1,"message":"635","line":145,"column":6,"nodeType":"558","endLine":145,"endColumn":25,"suggestions":"636"},{"ruleId":"578","severity":1,"message":"579","line":191,"column":35,"nodeType":"577","messageId":"575","endLine":191,"endColumn":37},{"ruleId":"542","severity":1,"message":"626","line":3,"column":8,"nodeType":"544","messageId":"545","endLine":3,"endColumn":24},{"ruleId":"542","severity":1,"message":"637","line":11,"column":8,"nodeType":"544","messageId":"545","endLine":11,"endColumn":13},{"ruleId":"542","severity":1,"message":"638","line":12,"column":8,"nodeType":"544","messageId":"545","endLine":12,"endColumn":18},{"ruleId":"542","severity":1,"message":"639","line":13,"column":8,"nodeType":"544","messageId":"545","endLine":13,"endColumn":18},{"ruleId":"542","severity":1,"message":"627","line":52,"column":10,"nodeType":"544","messageId":"545","endLine":52,"endColumn":14},{"ruleId":"542","severity":1,"message":"628","line":52,"column":16,"nodeType":"544","messageId":"545","endLine":52,"endColumn":23},{"ruleId":"542","severity":1,"message":"555","line":53,"column":9,"nodeType":"544","messageId":"545","endLine":53,"endColumn":16},{"ruleId":"542","severity":1,"message":"640","line":54,"column":9,"nodeType":"544","messageId":"545","endLine":54,"endColumn":20},{"ruleId":"542","severity":1,"message":"641","line":541,"column":7,"nodeType":"544","messageId":"545","endLine":541,"endColumn":21},{"ruleId":"542","severity":1,"message":"607","line":579,"column":10,"nodeType":"544","messageId":"545","endLine":579,"endColumn":14},{"ruleId":"542","severity":1,"message":"625","line":579,"column":16,"nodeType":"544","messageId":"545","endLine":579,"endColumn":23},{"ruleId":"542","severity":1,"message":"608","line":580,"column":10,"nodeType":"544","messageId":"545","endLine":580,"endColumn":21},{"ruleId":"542","severity":1,"message":"609","line":580,"column":23,"nodeType":"544","messageId":"545","endLine":580,"endColumn":37},{"ruleId":"542","severity":1,"message":"611","line":581,"column":10,"nodeType":"544","messageId":"545","endLine":581,"endColumn":19},{"ruleId":"542","severity":1,"message":"612","line":593,"column":9,"nodeType":"544","messageId":"545","endLine":593,"endColumn":30},{"ruleId":"614","severity":1,"message":"615","line":620,"column":21,"nodeType":"616","endLine":620,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":632,"column":21,"nodeType":"616","endLine":632,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":644,"column":21,"nodeType":"616","endLine":644,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":656,"column":21,"nodeType":"616","endLine":656,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":668,"column":21,"nodeType":"616","endLine":668,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":680,"column":21,"nodeType":"616","endLine":680,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":692,"column":21,"nodeType":"616","endLine":692,"endColumn":69},{"ruleId":"614","severity":1,"message":"615","line":704,"column":21,"nodeType":"616","endLine":704,"endColumn":69},{"ruleId":"617","severity":1,"message":"618","line":717,"column":21,"nodeType":"616","endLine":720,"endColumn":22},{"ruleId":"578","severity":1,"message":"619","line":737,"column":28,"nodeType":"577","messageId":"575","endLine":737,"endColumn":30},{"ruleId":"542","severity":1,"message":"554","line":7,"column":8,"nodeType":"544","messageId":"545","endLine":7,"endColumn":18},{"ruleId":"542","severity":1,"message":"555","line":52,"column":11,"nodeType":"544","messageId":"545","endLine":52,"endColumn":18},{"ruleId":"614","severity":1,"message":"615","line":66,"column":19,"nodeType":"616","endLine":66,"endColumn":57},{"ruleId":"614","severity":1,"message":"615","line":69,"column":19,"nodeType":"616","endLine":69,"endColumn":55},{"ruleId":"614","severity":1,"message":"615","line":72,"column":19,"nodeType":"616","endLine":72,"endColumn":55},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"642","line":2,"column":10,"nodeType":"544","messageId":"545","endLine":2,"endColumn":25},{"ruleId":"542","severity":1,"message":"643","line":5,"column":10,"nodeType":"544","messageId":"545","endLine":5,"endColumn":16},{"ruleId":"542","severity":1,"message":"644","line":5,"column":18,"nodeType":"544","messageId":"545","endLine":5,"endColumn":27},{"ruleId":"542","severity":1,"message":"645","line":6,"column":25,"nodeType":"544","messageId":"545","endLine":6,"endColumn":41},{"ruleId":"542","severity":1,"message":"646","line":2,"column":10,"nodeType":"544","messageId":"545","endLine":2,"endColumn":14},{"ruleId":"542","severity":1,"message":"647","line":6,"column":8,"nodeType":"544","messageId":"545","endLine":6,"endColumn":22},{"ruleId":"542","severity":1,"message":"648","line":12,"column":3,"nodeType":"544","messageId":"545","endLine":12,"endColumn":25},{"ruleId":"542","severity":1,"message":"649","line":13,"column":3,"nodeType":"544","messageId":"545","endLine":13,"endColumn":14},{"ruleId":"542","severity":1,"message":"588","line":84,"column":17,"nodeType":"544","messageId":"545","endLine":84,"endColumn":25},{"ruleId":"542","severity":1,"message":"650","line":86,"column":10,"nodeType":"544","messageId":"545","endLine":86,"endColumn":14},{"ruleId":"542","severity":1,"message":"651","line":88,"column":10,"nodeType":"544","messageId":"545","endLine":88,"endColumn":16},{"ruleId":"556","severity":1,"message":"652","line":105,"column":6,"nodeType":"558","endLine":105,"endColumn":13,"suggestions":"653"},{"ruleId":"542","severity":1,"message":"654","line":113,"column":9,"nodeType":"544","messageId":"545","endLine":113,"endColumn":18},{"ruleId":"632","severity":1,"message":"633","line":124,"column":49,"nodeType":"631","messageId":"634","endLine":124,"endColumn":51},{"ruleId":"542","severity":1,"message":"655","line":177,"column":11,"nodeType":"544","messageId":"545","endLine":177,"endColumn":13},{"ruleId":"542","severity":1,"message":"656","line":188,"column":9,"nodeType":"544","messageId":"545","endLine":188,"endColumn":34},{"ruleId":"542","severity":1,"message":"657","line":192,"column":11,"nodeType":"544","messageId":"545","endLine":192,"endColumn":19},{"ruleId":"617","severity":1,"message":"618","line":258,"column":25,"nodeType":"616","endLine":265,"endColumn":26},{"ruleId":"614","severity":1,"message":"615","line":441,"column":15,"nodeType":"616","endLine":441,"endColumn":69},{"ruleId":"542","severity":1,"message":"658","line":15,"column":5,"nodeType":"544","messageId":"545","endLine":15,"endColumn":9},{"ruleId":"542","severity":1,"message":"588","line":72,"column":17,"nodeType":"544","messageId":"545","endLine":72,"endColumn":25},{"ruleId":"556","severity":1,"message":"659","line":80,"column":6,"nodeType":"558","endLine":80,"endColumn":13,"suggestions":"660"},{"ruleId":"632","severity":1,"message":"633","line":125,"column":49,"nodeType":"631","messageId":"634","endLine":125,"endColumn":51},{"ruleId":"617","severity":1,"message":"618","line":165,"column":21,"nodeType":"616","endLine":172,"endColumn":22},{"ruleId":"614","severity":1,"message":"615","line":230,"column":11,"nodeType":"616","endLine":230,"endColumn":65},{"ruleId":"542","severity":1,"message":"627","line":218,"column":10,"nodeType":"544","messageId":"545","endLine":218,"endColumn":14},{"ruleId":"542","severity":1,"message":"584","line":225,"column":7,"nodeType":"544","messageId":"545","endLine":225,"endColumn":26},{"ruleId":"542","severity":1,"message":"661","line":226,"column":9,"nodeType":"544","messageId":"545","endLine":226,"endColumn":24},{"ruleId":"632","severity":1,"message":"633","line":241,"column":47,"nodeType":"631","messageId":"634","endLine":241,"endColumn":49},{"ruleId":"578","severity":1,"message":"579","line":242,"column":29,"nodeType":"577","messageId":"575","endLine":242,"endColumn":31},{"ruleId":"578","severity":1,"message":"579","line":244,"column":36,"nodeType":"577","messageId":"575","endLine":244,"endColumn":38},{"ruleId":"578","severity":1,"message":"579","line":246,"column":36,"nodeType":"577","messageId":"575","endLine":246,"endColumn":38},{"ruleId":"578","severity":1,"message":"579","line":473,"column":51,"nodeType":"577","messageId":"575","endLine":473,"endColumn":53},{"ruleId":"578","severity":1,"message":"579","line":560,"column":51,"nodeType":"577","messageId":"575","endLine":560,"endColumn":53},{"ruleId":"578","severity":1,"message":"579","line":638,"column":50,"nodeType":"577","messageId":"575","endLine":638,"endColumn":52},{"ruleId":"542","severity":1,"message":"662","line":4,"column":10,"nodeType":"544","messageId":"545","endLine":4,"endColumn":19},{"ruleId":"556","severity":1,"message":"663","line":49,"column":6,"nodeType":"558","endLine":49,"endColumn":8,"suggestions":"664"},{"ruleId":"578","severity":1,"message":"619","line":104,"column":22,"nodeType":"577","messageId":"575","endLine":104,"endColumn":24},{"ruleId":"542","severity":1,"message":"643","line":7,"column":10,"nodeType":"544","messageId":"545","endLine":7,"endColumn":16},{"ruleId":"542","severity":1,"message":"644","line":7,"column":18,"nodeType":"544","messageId":"545","endLine":7,"endColumn":27},{"ruleId":"542","severity":1,"message":"645","line":8,"column":25,"nodeType":"544","messageId":"545","endLine":8,"endColumn":41},{"ruleId":"542","severity":1,"message":"665","line":10,"column":9,"nodeType":"544","messageId":"545","endLine":10,"endColumn":24},{"ruleId":"542","severity":1,"message":"666","line":11,"column":9,"nodeType":"544","messageId":"545","endLine":11,"endColumn":23},{"ruleId":"542","severity":1,"message":"667","line":12,"column":9,"nodeType":"544","messageId":"545","endLine":12,"endColumn":24},{"ruleId":"542","severity":1,"message":"668","line":13,"column":9,"nodeType":"544","messageId":"545","endLine":13,"endColumn":24},{"ruleId":"542","severity":1,"message":"669","line":3,"column":8,"nodeType":"544","messageId":"545","endLine":3,"endColumn":14},{"ruleId":"542","severity":1,"message":"647","line":5,"column":8,"nodeType":"544","messageId":"545","endLine":5,"endColumn":22},{"ruleId":"542","severity":1,"message":"648","line":10,"column":3,"nodeType":"544","messageId":"545","endLine":10,"endColumn":25},{"ruleId":"542","severity":1,"message":"670","line":12,"column":3,"nodeType":"544","messageId":"545","endLine":12,"endColumn":19},{"ruleId":"542","severity":1,"message":"658","line":18,"column":5,"nodeType":"544","messageId":"545","endLine":18,"endColumn":9},{"ruleId":"542","severity":1,"message":"588","line":87,"column":17,"nodeType":"544","messageId":"545","endLine":87,"endColumn":25},{"ruleId":"556","severity":1,"message":"659","line":94,"column":6,"nodeType":"558","endLine":94,"endColumn":13,"suggestions":"671"},{"ruleId":"632","severity":1,"message":"633","line":114,"column":49,"nodeType":"631","messageId":"634","endLine":114,"endColumn":51},{"ruleId":"614","severity":1,"message":"615","line":271,"column":11,"nodeType":"616","endLine":271,"endColumn":65},{"ruleId":"542","severity":1,"message":"672","line":101,"column":3,"nodeType":"544","messageId":"545","endLine":101,"endColumn":14},{"ruleId":"542","severity":1,"message":"673","line":219,"column":3,"nodeType":"544","messageId":"545","endLine":219,"endColumn":18},{"ruleId":"674","severity":1,"message":"675","line":287,"column":7,"nodeType":"544","messageId":"676","endLine":287,"endColumn":11},{"ruleId":"674","severity":1,"message":"675","line":315,"column":7,"nodeType":"544","messageId":"676","endLine":315,"endColumn":11},{"ruleId":"542","severity":1,"message":"677","line":371,"column":9,"nodeType":"544","messageId":"545","endLine":371,"endColumn":16},{"ruleId":"542","severity":1,"message":"678","line":544,"column":7,"nodeType":"544","messageId":"545","endLine":544,"endColumn":9},{"ruleId":"542","severity":1,"message":"679","line":5,"column":8,"nodeType":"544","messageId":"545","endLine":5,"endColumn":15},{"ruleId":"542","severity":1,"message":"680","line":7,"column":8,"nodeType":"544","messageId":"545","endLine":7,"endColumn":16},{"ruleId":"542","severity":1,"message":"681","line":9,"column":8,"nodeType":"544","messageId":"545","endLine":9,"endColumn":22},{"ruleId":"542","severity":1,"message":"682","line":36,"column":12,"nodeType":"544","messageId":"545","endLine":36,"endColumn":22},{"ruleId":"542","severity":1,"message":"683","line":38,"column":11,"nodeType":"544","messageId":"545","endLine":38,"endColumn":27},{"ruleId":"542","severity":1,"message":"626","line":3,"column":8,"nodeType":"544","messageId":"545","endLine":3,"endColumn":24},{"ruleId":"542","severity":1,"message":"684","line":9,"column":8,"nodeType":"544","messageId":"545","endLine":9,"endColumn":18},{"ruleId":"542","severity":1,"message":"641","line":43,"column":7,"nodeType":"544","messageId":"545","endLine":43,"endColumn":21},{"ruleId":"542","severity":1,"message":"627","line":64,"column":10,"nodeType":"544","messageId":"545","endLine":64,"endColumn":14},{"ruleId":"542","severity":1,"message":"628","line":64,"column":16,"nodeType":"544","messageId":"545","endLine":64,"endColumn":23},{"ruleId":"556","severity":1,"message":"630","line":72,"column":13,"nodeType":"631","endLine":83,"endColumn":4},{"ruleId":"556","severity":1,"message":"685","line":83,"column":6,"nodeType":"558","endLine":83,"endColumn":8,"suggestions":"686"},{"ruleId":"578","severity":1,"message":"579","line":88,"column":31,"nodeType":"577","messageId":"575","endLine":88,"endColumn":33},{"ruleId":"542","severity":1,"message":"640","line":95,"column":9,"nodeType":"544","messageId":"545","endLine":95,"endColumn":20},{"ruleId":"542","severity":1,"message":"687","line":98,"column":9,"nodeType":"544","messageId":"545","endLine":98,"endColumn":23},{"ruleId":"542","severity":1,"message":"688","line":2,"column":10,"nodeType":"544","messageId":"545","endLine":2,"endColumn":20},{"ruleId":"542","severity":1,"message":"684","line":3,"column":28,"nodeType":"544","messageId":"545","endLine":3,"endColumn":38},{"ruleId":"542","severity":1,"message":"554","line":3,"column":40,"nodeType":"544","messageId":"545","endLine":3,"endColumn":50},{"ruleId":"542","severity":1,"message":"689","line":47,"column":21,"nodeType":"544","messageId":"545","endLine":47,"endColumn":33},{"ruleId":"556","severity":1,"message":"690","line":54,"column":6,"nodeType":"558","endLine":54,"endColumn":17,"suggestions":"691"},{"ruleId":"542","severity":1,"message":"581","line":1,"column":28,"nodeType":"544","messageId":"545","endLine":1,"endColumn":36},{"ruleId":"542","severity":1,"message":"692","line":3,"column":8,"nodeType":"544","messageId":"545","endLine":3,"endColumn":21},{"ruleId":"542","severity":1,"message":"693","line":4,"column":8,"nodeType":"544","messageId":"545","endLine":4,"endColumn":25},{"ruleId":"542","severity":1,"message":"694","line":5,"column":8,"nodeType":"544","messageId":"545","endLine":5,"endColumn":26},{"ruleId":"542","severity":1,"message":"669","line":8,"column":17,"nodeType":"544","messageId":"545","endLine":8,"endColumn":23},{"ruleId":"542","severity":1,"message":"695","line":10,"column":10,"nodeType":"544","messageId":"545","endLine":10,"endColumn":22},{"ruleId":"542","severity":1,"message":"696","line":58,"column":10,"nodeType":"544","messageId":"545","endLine":58,"endColumn":20},{"ruleId":"542","severity":1,"message":"697","line":58,"column":22,"nodeType":"544","messageId":"545","endLine":58,"endColumn":35},{"ruleId":"542","severity":1,"message":"576","line":72,"column":9,"nodeType":"544","messageId":"545","endLine":72,"endColumn":14},{"ruleId":"542","severity":1,"message":"698","line":73,"column":9,"nodeType":"544","messageId":"545","endLine":73,"endColumn":17},{"ruleId":"556","severity":1,"message":"699","line":77,"column":6,"nodeType":"558","endLine":77,"endColumn":8,"suggestions":"700"},{"ruleId":"542","severity":1,"message":"701","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":26},{"ruleId":"542","severity":1,"message":"627","line":59,"column":10,"nodeType":"544","messageId":"545","endLine":59,"endColumn":14},{"ruleId":"542","severity":1,"message":"702","line":60,"column":10,"nodeType":"544","messageId":"545","endLine":60,"endColumn":16},{"ruleId":"542","severity":1,"message":"703","line":60,"column":18,"nodeType":"544","messageId":"545","endLine":60,"endColumn":27},{"ruleId":"542","severity":1,"message":"661","line":61,"column":9,"nodeType":"544","messageId":"545","endLine":61,"endColumn":24},{"ruleId":"542","severity":1,"message":"704","line":81,"column":9,"nodeType":"544","messageId":"545","endLine":81,"endColumn":20},{"ruleId":"573","severity":1,"message":"705","line":18,"column":5,"nodeType":"568","messageId":"575","endLine":18,"endColumn":21},{"ruleId":"542","severity":1,"message":"706","line":62,"column":10,"nodeType":"544","messageId":"545","endLine":62,"endColumn":31},{"ruleId":"542","severity":1,"message":"707","line":63,"column":15,"nodeType":"544","messageId":"545","endLine":63,"endColumn":21},{"ruleId":"556","severity":1,"message":"708","line":69,"column":6,"nodeType":"558","endLine":69,"endColumn":11,"suggestions":"709"},{"ruleId":"542","severity":1,"message":"710","line":77,"column":9,"nodeType":"544","messageId":"545","endLine":77,"endColumn":19},{"ruleId":"542","severity":1,"message":"711","line":80,"column":9,"nodeType":"544","messageId":"545","endLine":80,"endColumn":20},{"ruleId":"542","severity":1,"message":"581","line":1,"column":17,"nodeType":"544","messageId":"545","endLine":1,"endColumn":25},{"ruleId":"542","severity":1,"message":"712","line":18,"column":19,"nodeType":"544","messageId":"545","endLine":18,"endColumn":29},{"ruleId":"542","severity":1,"message":"657","line":22,"column":10,"nodeType":"544","messageId":"545","endLine":22,"endColumn":18},{"ruleId":"542","severity":1,"message":"713","line":22,"column":20,"nodeType":"544","messageId":"545","endLine":22,"endColumn":31},{"ruleId":"556","severity":1,"message":"714","line":61,"column":6,"nodeType":"558","endLine":61,"endColumn":15,"suggestions":"715"},{"ruleId":"542","severity":1,"message":"716","line":11,"column":8,"nodeType":"544","messageId":"545","endLine":11,"endColumn":19},{"ruleId":"542","severity":1,"message":"717","line":15,"column":9,"nodeType":"544","messageId":"545","endLine":15,"endColumn":33},{"ruleId":"542","severity":1,"message":"718","line":31,"column":7,"nodeType":"544","messageId":"545","endLine":31,"endColumn":21},{"ruleId":"542","severity":1,"message":"719","line":112,"column":30,"nodeType":"544","messageId":"545","endLine":112,"endColumn":49},{"ruleId":"556","severity":1,"message":"720","line":117,"column":7,"nodeType":"558","endLine":117,"endColumn":28,"suggestions":"721"},{"ruleId":"542","severity":1,"message":"722","line":118,"column":11,"nodeType":"544","messageId":"545","endLine":118,"endColumn":21},{"ruleId":"542","severity":1,"message":"723","line":122,"column":11,"nodeType":"544","messageId":"545","endLine":122,"endColumn":21},{"ruleId":"632","severity":1,"message":"633","line":131,"column":75,"nodeType":"631","messageId":"634","endLine":131,"endColumn":77},{"ruleId":"578","severity":1,"message":"579","line":132,"column":20,"nodeType":"577","messageId":"575","endLine":132,"endColumn":22},{"ruleId":"632","severity":1,"message":"633","line":133,"column":45,"nodeType":"631","messageId":"634","endLine":133,"endColumn":47},{"ruleId":"578","severity":1,"message":"579","line":134,"column":21,"nodeType":"577","messageId":"575","endLine":134,"endColumn":23},{"ruleId":"542","severity":1,"message":"701","line":1,"column":27,"nodeType":"544","messageId":"545","endLine":1,"endColumn":36},{"ruleId":"542","severity":1,"message":"724","line":173,"column":23,"nodeType":"544","messageId":"545","endLine":173,"endColumn":37},{"ruleId":"542","severity":1,"message":"725","line":178,"column":35,"nodeType":"544","messageId":"545","endLine":178,"endColumn":61},{"ruleId":"542","severity":1,"message":"726","line":182,"column":34,"nodeType":"544","messageId":"545","endLine":182,"endColumn":59},{"ruleId":"542","severity":1,"message":"682","line":187,"column":10,"nodeType":"544","messageId":"545","endLine":187,"endColumn":20},{"ruleId":"542","severity":1,"message":"701","line":1,"column":27,"nodeType":"544","messageId":"545","endLine":1,"endColumn":36},{"ruleId":"542","severity":1,"message":"724","line":173,"column":23,"nodeType":"544","messageId":"545","endLine":173,"endColumn":37},{"ruleId":"542","severity":1,"message":"725","line":178,"column":35,"nodeType":"544","messageId":"545","endLine":178,"endColumn":61},{"ruleId":"542","severity":1,"message":"726","line":182,"column":34,"nodeType":"544","messageId":"545","endLine":182,"endColumn":59},{"ruleId":"542","severity":1,"message":"682","line":187,"column":10,"nodeType":"544","messageId":"545","endLine":187,"endColumn":20},{"ruleId":"542","severity":1,"message":"679","line":5,"column":8,"nodeType":"544","messageId":"545","endLine":5,"endColumn":15},{"ruleId":"542","severity":1,"message":"680","line":7,"column":8,"nodeType":"544","messageId":"545","endLine":7,"endColumn":16},{"ruleId":"542","severity":1,"message":"681","line":9,"column":8,"nodeType":"544","messageId":"545","endLine":9,"endColumn":22},{"ruleId":"542","severity":1,"message":"701","line":1,"column":27,"nodeType":"544","messageId":"545","endLine":1,"endColumn":36},{"ruleId":"542","severity":1,"message":"724","line":178,"column":23,"nodeType":"544","messageId":"545","endLine":178,"endColumn":37},{"ruleId":"542","severity":1,"message":"725","line":184,"column":35,"nodeType":"544","messageId":"545","endLine":184,"endColumn":61},{"ruleId":"542","severity":1,"message":"726","line":188,"column":34,"nodeType":"544","messageId":"545","endLine":188,"endColumn":59},{"ruleId":"727","severity":1,"message":"728","line":226,"column":26,"nodeType":"729","messageId":"730","endLine":226,"endColumn":42,"fix":"731"},"no-native-reassign",["732"],"no-negated-in-lhs",["733"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Search' is defined but never used.","'styles' is assigned a value but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["734"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["735","736"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["737"],"React Hook useEffect has a missing dependency: 'getUserAccessInfoToken'. Either include it or remove the dependency array.",["738"],"no-dupe-keys","Duplicate key 'justifyContent'.","unexpected","'theme' is assigned a value but never used.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","'openConditionScreen' is assigned a value but never used.","'useState' is defined but never used.","'TransactionModal' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["739"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["740"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["741"],"'setSearchData' is assigned a value but never used.","'Route' is defined but never used.","React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'PrintSharp' is defined but never used.","'getPassedList1' is defined but never used.","'setPurchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.",["742"],["743"],"'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'vehicleList' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'handleChangePageCount' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","Duplicate key 'font-weight'.","'accountInformation' is assigned a value but never used.","'CardMedia' is defined but never used.","'SearchText' is defined but never used.","'rows' is assigned a value but never used.","'setPage' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'ListItemIcon' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'activeChild'. Either include it or remove the dependency array.",["744"],"'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'Link' is defined but never used.","'LinearProgress' is defined but never used.","'getAccessTokenEndpoint' is defined but never used.","'getUserInfo' is defined but never used.","'time' is assigned a value but never used.","'images' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthTokenSSO1'. Either include it or remove the dependency array.",["745"],"'getImages' is assigned a value but never used.","'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","'resp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["746"],"'handleClickOpen' is assigned a value but never used.","'getCarXml' is defined but never used.","React Hook useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["747"],"'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'Button' is defined but never used.","'getUserInfoToken' is defined but never used.",["748"],"'getTokenSSO' is assigned a value but never used.","'MileageDiscList' is assigned a value but never used.","no-redeclare","'data' is already defined.","redeclared","'options' is assigned a value but never used.","'qs' is assigned a value but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'handleSearchText' is assigned a value but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'props.vin'. Either include it or remove the dependency array.",["749"],"'handleOnChange' is assigned a value but never used.","'makeStyles' is defined but never used.","'setTotalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onChangePage', 'skipRecords', and 'totalData'. Either include them or remove the dependency array.",["750"],"'MobileStepper' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'getImageData' is defined but never used.","'activeStep' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.images'. Either include it or remove the dependency array.",["751"],"'useEffect' is defined but never used.","'noCall' is assigned a value but never used.","'setnoCall' is assigned a value but never used.","'apiResponse' is assigned a value but never used.","Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["752"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'setDuration' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.vehicle.end_date' and 'props.vehicle.start_date'. Either include them or remove the dependency array.",["753"],"'CheckCircle' is defined but never used.","'getTransportationDetails' is defined but never used.","'QontoConnector' is assigned a value but never used.","'setTransportDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTransportInformation'. Either include it or remove the dependency array.",["754"],"'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"755","text":"756"},"no-global-assign","no-unsafe-negation",{"desc":"757","fix":"758"},{"messageId":"759","fix":"760","desc":"761"},{"messageId":"762","fix":"763","desc":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"769","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},{"desc":"782","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},[5504,5513],"\"right\"","Update the dependencies array to be: [props.location.state]",{"range":"799","text":"800"},"removeEscape",{"range":"801","text":"802"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"803","text":"804"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [getToken]",{"range":"805","text":"806"},"Update the dependencies array to be: [getUserAccessInfoToken, token]",{"range":"807","text":"808"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"809","text":"810"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"811","text":"812"},"Add dependencies array: []",{"range":"813","text":"814"},{"range":"815","text":"810"},"Update the dependencies array to be: [getInspectionDamageDetails, inspectionId]",{"range":"816","text":"817"},"Update the dependencies array to be: [activeChild, props.stateUpdate]",{"range":"818","text":"819"},"Update the dependencies array to be: [getAuthTokenSSO1, value]",{"range":"820","text":"821"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"822","text":"823"},"Update the dependencies array to be: [getImages]",{"range":"824","text":"825"},{"range":"826","text":"823"},"Update the dependencies array to be: [props.vin]",{"range":"827","text":"828"},"Update the dependencies array to be: [onChangePage, pageCount, skipRecords, totalData]",{"range":"829","text":"830"},"Update the dependencies array to be: [props.images]",{"range":"831","text":"832"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"833","text":"834"},"Update the dependencies array to be: [endtime, props.vehicle.end_date, props.vehicle.start_date]",{"range":"835","text":"836"},"Update the dependencies array to be: [props.transportData, setTransportInformation]",{"range":"837","text":"838"},[1753,1808],"[props.location.state]",[287,288],"",[287,287],"\\",[689,691],"[getToken]",[749,756],"[getUserAccessInfoToken, token]",[2735,2740],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[2950,2952],"[getInspectionDamageDetails]",[1319,1319],", []",[3014,3019],[3656,3670],"[getInspectionDamageDetails, inspectionId]",[3873,3892],"[activeChild, props.stateUpdate]",[2993,3000],"[getAuthTokenSSO1, value]",[2173,2180],"[getVehicleDetails, value]",[1148,1150],"[getImages]",[2399,2406],[2757,2759],"[props.vin]",[1739,1750],"[onChangePage, pageCount, skipRecords, totalData]",[1784,1786],"[props.images]",[2570,2575],"[getConditionVehicleDetails, vin]",[1819,1828],"[endtime, props.vehicle.end_date, props.vehicle.start_date]",[3138,3159],"[props.transportData, setTransportInformation]"]