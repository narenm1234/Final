[{"C:\\Users\\adityah\\ASP\\src\\index.js":"1","C:\\Users\\adityah\\ASP\\src\\reportWebVitals.js":"2","C:\\Users\\adityah\\ASP\\src\\theme.js":"3","C:\\Users\\adityah\\ASP\\src\\App.js":"4","C:\\Users\\adityah\\ASP\\src\\components\\Sidebar.js":"5","C:\\Users\\adityah\\ASP\\src\\components\\Header\\Header.js":"6","C:\\Users\\adityah\\ASP\\src\\components\\InventoryRequestsTabs.js":"7","C:\\Users\\adityah\\ASP\\src\\pages\\Grounded.js":"8","C:\\Users\\adityah\\ASP\\src\\pages\\Home.js":"9","C:\\Users\\adityah\\ASP\\src\\pages\\AdminHome.js":"10","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending.js":"11","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending1.js":"12","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\VINSearch.js":"13","C:\\Users\\adityah\\ASP\\src\\pages\\ConditionReportRequests.js":"14","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending2.js":"15","C:\\Users\\adityah\\ASP\\src\\pages\\ConditionReport.js":"16","C:\\Users\\adityah\\ASP\\src\\components\\NewSideBar.js":"17","C:\\Users\\adityah\\ASP\\src\\components\\Separator.js":"18","C:\\Users\\adityah\\ASP\\src\\components\\RRMApproval.js":"19","C:\\Users\\adityah\\ASP\\src\\components\\ManualPricing.js":"20","C:\\Users\\adityah\\ASP\\src\\components\\AdminSearchHeader.js":"21","C:\\Users\\adityah\\ASP\\src\\components\\MileageDisc.js":"22","C:\\Users\\adityah\\ASP\\src\\components\\VehicleInformation.js":"23","C:\\Users\\adityah\\ASP\\src\\components\\Tabs.js":"24","C:\\Users\\adityah\\ASP\\src\\components\\AdminVehicleSearch.js":"25","C:\\Users\\adityah\\ASP\\src\\components\\NotesSection.js":"26","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js":"27","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\passedPage.js":"28","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js":"29","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\purchasedPage.js":"30","C:\\Users\\adityah\\ASP\\src\\components\\ManualPricingSideBar.js":"31","C:\\Users\\adityah\\ASP\\src\\pages\\ViewDetailedReport.js":"32","C:\\Users\\adityah\\ASP\\src\\pages\\ImageGallery.js":"33","C:\\Users\\adityah\\ASP\\src\\components\\PurchasedPricingSideBar.js":"34","C:\\Users\\adityah\\ASP\\src\\components\\Search\\Search.js":"35","C:\\Users\\adityah\\ASP\\src\\service\\api.js":"36","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\groundedListPage.js":"37","C:\\Users\\adityah\\ASP\\src\\components\\SearchText\\Search.js":"38","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilterRRM.js":"39","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilter.js":"40","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilterMileage.js":"41","C:\\Users\\adityah\\ASP\\src\\components\\StatusHistory.js":"42","C:\\Users\\adityah\\ASP\\src\\components\\Stepper\\VerticalStepper.js":"43","C:\\Users\\adityah\\ASP\\src\\pages\\PassOnVehicle.js":"44","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\Carousel.js":"45","C:\\Users\\adityah\\ASP\\src\\components\\CustomisedInput.js":"46","C:\\Users\\adityah\\ASP\\src\\pages\\AdminDetailedReport.js":"47"},{"size":661,"mtime":1626450502025,"results":"48","hashOfConfig":"49"},{"size":375,"mtime":1622740323246,"results":"50","hashOfConfig":"49"},{"size":325,"mtime":1622740323269,"results":"51","hashOfConfig":"49"},{"size":2445,"mtime":1629131870956,"results":"52","hashOfConfig":"49"},{"size":2236,"mtime":1622740323184,"results":"53","hashOfConfig":"49"},{"size":1001,"mtime":1626450527863,"results":"54","hashOfConfig":"49"},{"size":3182,"mtime":1628874078393,"results":"55","hashOfConfig":"49"},{"size":699,"mtime":1622740323241,"results":"56","hashOfConfig":"49"},{"size":499,"mtime":1622740323243,"results":"57","hashOfConfig":"49"},{"size":1406,"mtime":1628022901462,"results":"58","hashOfConfig":"49"},{"size":241,"mtime":1625770291863,"results":"59","hashOfConfig":"49"},{"size":225,"mtime":1622740323222,"results":"60","hashOfConfig":"49"},{"size":7965,"mtime":1622740323231,"results":"61","hashOfConfig":"49"},{"size":33672,"mtime":1629773325741,"results":"62","hashOfConfig":"49"},{"size":228,"mtime":1622740323223,"results":"63","hashOfConfig":"49"},{"size":36294,"mtime":1629838764857,"results":"64","hashOfConfig":"49"},{"size":3963,"mtime":1629072018020,"results":"65","hashOfConfig":"49"},{"size":265,"mtime":1622740323179,"results":"66","hashOfConfig":"49"},{"size":6829,"mtime":1628820764229,"results":"67","hashOfConfig":"49"},{"size":7263,"mtime":1629123449615,"results":"68","hashOfConfig":"49"},{"size":1708,"mtime":1626450527860,"results":"69","hashOfConfig":"49"},{"size":6122,"mtime":1628820764227,"results":"70","hashOfConfig":"49"},{"size":7674,"mtime":1622740323199,"results":"71","hashOfConfig":"49"},{"size":2623,"mtime":1628022901458,"results":"72","hashOfConfig":"49"},{"size":1256,"mtime":1628022901445,"results":"73","hashOfConfig":"49"},{"size":2270,"mtime":1625608189456,"results":"74","hashOfConfig":"49"},{"size":315,"mtime":1622740323227,"results":"75","hashOfConfig":"49"},{"size":5178,"mtime":1629838764866,"results":"76","hashOfConfig":"49"},{"size":299,"mtime":1622740323230,"results":"77","hashOfConfig":"49"},{"size":7382,"mtime":1629838764868,"results":"78","hashOfConfig":"49"},{"size":5678,"mtime":1627909440635,"results":"79","hashOfConfig":"49"},{"size":15179,"mtime":1629838764870,"results":"80","hashOfConfig":"49"},{"size":985,"mtime":1624288274442,"results":"81","hashOfConfig":"49"},{"size":4286,"mtime":1628855017477,"results":"82","hashOfConfig":"49"},{"size":1148,"mtime":1622740323170,"results":"83","hashOfConfig":"49"},{"size":11706,"mtime":1629854180359,"results":"84","hashOfConfig":"49"},{"size":12701,"mtime":1629838764864,"results":"85","hashOfConfig":"49"},{"size":1297,"mtime":1622740323176,"results":"86","hashOfConfig":"49"},{"size":15124,"mtime":1627909440641,"results":"87","hashOfConfig":"49"},{"size":12911,"mtime":1629123560416,"results":"88","hashOfConfig":"49"},{"size":15128,"mtime":1627909440640,"results":"89","hashOfConfig":"49"},{"size":3134,"mtime":1626450502019,"results":"90","hashOfConfig":"49"},{"size":2094,"mtime":1622740323195,"results":"91","hashOfConfig":"49"},{"size":3526,"mtime":1628855017489,"results":"92","hashOfConfig":"49"},{"size":2540,"mtime":1629067694307,"results":"93","hashOfConfig":"49"},{"size":1708,"mtime":1627667103345,"results":"94","hashOfConfig":"49"},{"size":8020,"mtime":1628022901460,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"13hptw6",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"98"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"98"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"98"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"98"},"C:\\Users\\adityah\\ASP\\src\\index.js",[],["223","224"],"C:\\Users\\adityah\\ASP\\src\\reportWebVitals.js",[],"C:\\Users\\adityah\\ASP\\src\\theme.js",[],"C:\\Users\\adityah\\ASP\\src\\App.js",["225","226","227","228"],"import './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport Header from './components/Header/Header';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport GroundPending from './pages/GroundPending/GroundPending';\r\nimport GroundPending1 from './pages/GroundPending/GroundPending1';\r\nimport GroundPending2 from './pages/GroundPending/GroundPending2';\r\nimport { Grounded, Grounded1, LastChance, Purchased } from './pages/Grounded';\r\nimport '../src/assets/WebFont/ToyotaType-Book.ttf'\r\nimport '../src/sass/main.scss'\r\nimport VINSearch from './pages/GroundPending/VINSearch';\r\nimport ConditionReport from './pages/ConditionReport';\r\nimport AdminHome from './pages/AdminHome'\r\nimport ConditionReportRequests from './pages/ConditionReportRequests';\r\nimport InventoryRequestsTabs from './components/InventoryRequestsTabs';\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Header></Header>\r\n        <Router>\r\n          <div>\r\n            <Sidebar />\r\n\r\n            <Switch>\r\n              <Route path='/home' exact component={Home} />\r\n              <Route path='/adminSearch' exact component={AdminHome} />\r\n              <Route path='/checkinvehicle' exact component={VINSearch} />\r\n              <Route path='/grounded' exact exact render={\r\n                (props) => (<GroundPending {...props} />\r\n                )\r\n              } />\r\n              <Route path='/passed' exact component={GroundPending1} />\r\n              <Route path='/purchased' exact component={GroundPending2} />\r\n              <Route path='/grounded/lastchance' exact component={LastChance} />\r\n\r\n              <Route path='/adminInventoryRequests' exact component={InventoryRequestsTabs} />\r\n              <Route path='/conditionreportRequests' exact render={\r\n                (props) => (<ConditionReportRequests {...props} />\r\n                )\r\n              } />\r\n              <Route path='/conditionreport:vin' exact render={\r\n                (props) => (<ConditionReport {...props} />\r\n                )\r\n              } />\r\n              <Route path='/conditionreport' exact render={\r\n                (props) => (<ConditionReport {...props} />\r\n                )\r\n              } />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n      {/* <Router>\r\n        <AppWithRouterAccess />\r\n      </Router> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adityah\\ASP\\src\\components\\Sidebar.js",["229","230"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport \"./SideBar.scss\"\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport NewSidebar from './NewSideBar';\r\n\r\nconst Nav = styled.div`\r\n  background: #f1f1f1;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #ffffff;\r\n  width: 232px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 51px;\r\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n  box-shadow: 1px 0 3px 0 rgba(0, 0, 0, 0.25);\r\n  background-color: #ffffff;\r\n`;\r\nconst SidebarNavHide = styled.nav`\r\n  background: #ffffff;\r\n  width: 48px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 51px;\r\n  left: ${({ sidebar }) => (!sidebar ? '20' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n  box-shadow: 1px 0 3px 0 rgba(0, 0, 0, 0.25);\r\n  background-color: #ffffff;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(true);\r\n\r\n  const showSidebar = () => setSidebar(true);\r\n  const hideSidebar = () => setSidebar(false);\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#000000' }}>\r\n        <SidebarNav sidebar={sidebar}>\r\n\r\n          <SidebarWrap>\r\n            <div className='mainMenu'>Main Menu\r\n              <div className=\"closeIcon\" onClick={hideSidebar} style={{ marginLeft: \"35%\" }}><MdClose />\r\n              </div>\r\n            </div>\r\n            <NewSidebar />\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n        <SidebarNavHide sidebar={sidebar}>\r\n          <div className=\"-Background-Color\" onClick={showSidebar}> <BsChevronRight /></div>\r\n        </SidebarNavHide>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","C:\\Users\\adityah\\ASP\\src\\components\\Header\\Header.js",[],"C:\\Users\\adityah\\ASP\\src\\components\\InventoryRequestsTabs.js",["231","232","233"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ManualPricing from './ManualPricing';\r\nimport RRMApproval from './RRMApproval';\r\nimport MileageDisc from './MileageDisc'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function InventoryRequestsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.location.state && props.location.state.pageName === 'RRMApproval') {\r\n            setValue(1)\r\n        } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\r\n            setValue(0)\r\n        }\r\n        else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\r\n            setValue(2)\r\n        }\r\n    }, [props.location.state && props.location.state.pageName]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className='topBarAdmin'>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\r\n                    <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\r\n                    <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\r\n                    {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <ManualPricing props={props} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <div className='adminTabsSection'><RRMApproval props={props} /></div>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <div className='adminTabsSection'><MileageDisc props={props} /></div>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                <div className='adminTabsSection'><h2>No Inspections</h2></div>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\Grounded.js",[],"C:\\Users\\adityah\\ASP\\src\\pages\\Home.js",["234","235"],"import React from 'react';\r\nimport Search from '../components/Search/Search';\r\nimport VehicleInformation from '../components/VehicleInformation';\r\n\r\n\r\nlet styles = {\r\n  homesearch: {\r\n    'width': '371px',\r\n    'height': '32px',\r\n    'margin': '3px 0 0',\r\n    'padding': '7px 9px 8px 12px',\r\n    'border-radius': '4px',\r\n    'border': 'solid 1px #dddbda',\r\n    'background-color': '#ffffff'\r\n\r\n  },\r\n}\r\nconst Home = () => {\r\n  return (\r\n    <VehicleInformation />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\AdminHome.js",["236","237","238","239"],"import React,{useState,useEffect} from 'react';\r\nimport AdminVehicleSearch from '../components/AdminVehicleSearch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VehicleSearchTabs from '../components/Tabs';\r\nimport NotesSection from '../components/NotesSection';\r\nimport {getInspectionVehicleDetails} from '../service/api';\r\n\r\n\r\nconst AdminHome = () => {\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const [isSubmit,setisSubmit] = useState(false);\r\n  const [inspectiondata,setinspectiondata]=useState([])\r\n\r\n  console.log(\"inspectiondata\",inspectiondata)\r\n\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails()\r\n  }, [searchText.length==15])\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(\"JM3KFBDM0K1698372\");\r\n    console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\r\n    setinspectiondata(apiResponse.data)\r\n}\r\n\r\n  const handleSubmitbtn = () =>{\r\n    setisSubmit(true);\r\n  }\r\n  const handleSearch = (text) => {\r\n    console.log(\"home\",text)\r\n    setSearchText(text)\r\n  }\r\n\r\n  return (\r\n    (searchText.length==15) ? (<Grid container><Grid xs={10}><VehicleSearchTabs inspectiondata={inspectiondata} /></Grid><Grid xs={2}><NotesSection /></Grid></Grid>) : (<AdminVehicleSearch fromchildhandleSubmitbtn={handleSubmitbtn} searchdetails={(text) => handleSearch(text)} />)\r\n  );\r\n};\r\n\r\nexport default AdminHome;\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending.js",["240"],"import React, { useState } from 'react';\r\nimport ListingPage from './groundedListPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage {...props}></ListingPage>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending1.js",["241"],"import React, { useState } from 'react';\r\nimport ListingPage1 from './passedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage1></ListingPage1>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\VINSearch.js",["242","243","244","245","246"],"import React, { useState, useEffect } from 'react';\r\nimport Search from '../../components/SearchText/Search'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport GroundVehicleMFS from './GroundVehicleMFS';\r\nimport GroundVehiclePLV from './GroundVehiclePLV';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getAuthToken, getVehicleDetails } from '../../service/api';\r\nexport default function VINSearch(props) {\r\n  const placeholder = 'Enter last 6 digits of VIN';\r\n  const [token, setToken] = useState('')\r\n  const [vehicleResponse, setVehicleResponse] = useState({})\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [reasonForReturn, setreasonForReturn] = useState('Ground_Vehicle_for_MFS');\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  let searchSuggestions = ['12345678901234567', '12345678901234566', '12345678901234568', '12345678901234569', '12345678901234560'];\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getAuthToken()\r\n    setToken(tokenResponse.data?.access_token)\r\n  })\r\n  async function getVehDetails(value) {\r\n    let apiResponse = await getVehicleDetails(token, value)\r\n    setVehicleResponse(apiResponse.data);\r\n    if(apiResponse.data.vehicleInfo?.length > 0){\r\n\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n    else {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    }\r\n\r\n  }\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n   \r\n    let value = e?.target?.value;\r\n    console.log(value)\r\n    getVehDetails(value)\r\n\r\n      \r\n      \r\n    searchSuggestions = searchSuggestions.filter(val => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (value?.length == 0 || !searchSuggestions || searchSuggestions?.length == 0 || searchValue?.length == 0) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    }\r\n    else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n     \r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  }\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  }\r\n  const handleReasonChange = (e) => {\r\n    console.log(e.target.value)\r\n    setreasonForReturn(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className='form'>\r\n      <div class=\"grounding\">\r\n        <div class=\"searchLabelHeader\">Vehicle Grounding</div>\r\n        <div class=\"searchLabel\">Begin Vehicle Lease return process</div>\r\n        <Search showSearchRight={true} searchCompleted={validSearch} placeholder={placeholder} editSearchTerm={showResults} searchValue={searchValue}></Search>\r\n        {!validSearch && suggestions && <div class=\"noMatchesFrame\" >\r\n          <div class=\"noMatches\">VIN not found/Inactive</div>\r\n        </div>}\r\n\r\n        {validSearch && <div><div class=\"carRecordFound\">\r\n          <div class=\"vehicleMakeModel\">\r\n            <span>{vehicleResponse?.vehicleInfo[0]?.brand}{\" & \"}</span>\r\n            <span>{\"  \"}{vehicleResponse?.vehicleInfo[0]?.model}{\" | \"} </span>\r\n            <span>{\"  \"}{vehicleResponse?.vehicleInfo[0]?.ext_color} </span>\r\n             </div>\r\n\r\n        </div>\r\n          <div class=\"customerReturnStyle\">\r\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Customer Return date</InputLabel>\r\n            <TextField\r\n              id=\"date\"\r\n              type=\"date\"\r\n              defaultValue=\"00/00/0000\"\r\n              className=\"customerReturnDate\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"customerReturnStyle\">\r\n            <InputLabel htmlFor=\"input-with-icon-adornment\">Reason for Return</InputLabel>\r\n            <Select\r\n              name=\"Reason for Return\"\r\n              value={reasonForReturn}\r\n              variant=\"outlined\"\r\n              inputProps={{ 'aria-label': 'age' }}\r\n              className=\"customerReturnDate\"\r\n              onChange={(event) => handleReasonChange(event)}\r\n            >\r\n              <MenuItem value={\"Purchase_Leased_Vehicle\"}>Purchase Leased Vehicle</MenuItem>\r\n              <MenuItem value={\"Ground_Vehicle_for_MFS\"}>Ground Vehicle for MFS</MenuItem>\r\n              <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\r\n            </Select>\r\n          </div>\r\n          {\r\n            reasonForReturn === 'Ground_Vehicle_for_MFS' && (<> <GroundVehicleMFS />\r\n              <div className=\"odometerBox\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Odometer Reading</InputLabel>\r\n                <TextField id=\"standard-basic\" placeholder=\"Enter odometer reading\" variant=\"outlined\" className=\"odometer\" />\r\n                <TextField id=\"standard-basic\" placeholder=\"Renter odometer reading\" variant=\"outlined\" className=\"odometer\" />\r\n              </div> <div class=\"customerReturnStyle\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Do you have a signed odometer statement?</InputLabel>\r\n                <Select\r\n                  name=\"age\"\r\n                  value={1}\r\n                  variant=\"outlined\"\r\n                  inputProps={{ 'aria-label': 'age' }}\r\n                  className=\"customerReturnDate\"\r\n                >\r\n                  <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                  <MenuItem value={10}>Yes</MenuItem>\r\n                  <MenuItem value={20}>No</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <div className=\"keysReturnedBox\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Number of Keys Returned</InputLabel>\r\n                <TextField id=\"standard-basic\" placeholder=\"Master Keys Returned\" variant=\"outlined\" className=\"keysReturned\" />\r\n                <TextField id=\"standard-basic\" placeholder=\"Valet Keys Returned\" variant=\"outlined\" className=\"keysReturned\" />\r\n              </div>\r\n              <div className=\"vehicleCondition\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Vehicle Condition</InputLabel>\r\n                <div\r\n                  className=\"Rectangle-3\">\r\n                  <FormControlLabel control={<Radio />} label=\"Drivable\" /></div>\r\n                <div className=\"Rectangle-3\"> <FormControlLabel control={<Radio />} label=\"Not Drivable\" /></div>\r\n              </div>\r\n              <div className=\"pickUpLocation\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Pick Up Location</InputLabel>\r\n                <div\r\n                  className=\"pickUpLocationBox\">\r\n                  <FormControlLabel control={<Radio />} label=\"Location Name 1\" /></div>\r\n\r\n                <div\r\n                  className=\"pickUpLocationBox\">\r\n                  <FormControlLabel control={<Radio />} label=\"Location Name 2\" /></div>\r\n\r\n              </div> </>)\r\n          }\r\n\r\n          {\r\n            (reasonForReturn === 'Purchase_Leased_Vehicle' || reasonForReturn === 'Trade_In') && (<><GroundVehiclePLV />\r\n              <div class=\"customerReturnStyle\">\r\n                <InputLabel htmlFor=\"input-with-icon-adornment\">Do you have a signed odometer statement?</InputLabel>\r\n                <Select\r\n                  name=\"age\"\r\n                  value={1}\r\n                  variant=\"outlined\"\r\n                  inputProps={{ 'aria-label': 'age' }}\r\n                  className=\"customerReturnDate\"\r\n                >\r\n                  <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                  <MenuItem value={10}>Yes</MenuItem>\r\n                  <MenuItem value={20}>No</MenuItem>\r\n                </Select>\r\n              </div></>)\r\n          }\r\n\r\n\r\n        </div>}\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\ConditionReportRequests.js",["247","248","249","250","251","252","253","254","255"],"C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundPending2.js",["256"],"import React, { useState } from 'react';\r\nimport ListingPage2 from './purchasedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage2></ListingPage2>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\ASP\\src\\pages\\ConditionReport.js",["257","258","259","260","261","262","263","264","265","266"],"C:\\Users\\adityah\\ASP\\src\\components\\NewSideBar.js",["267"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\nexport default function NewSidebar() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    return (\r\n        <div className={classes.sideBarCSS}>\r\n            {/* <ListItem component={Link} to=\"/home\">\r\n                <ListItemText\r\n                    primary=\"Home\"\r\n                />\r\n                <Chip className={classes.root} label=\"0\"></Chip>\r\n            </ListItem>\r\n            <ListItem component={Link} to=\"/checkinvehicle\">\r\n                <ListItemText\r\n                    primary=\"Check In vehicle\"\r\n                />\r\n                <Chip className={classes.root} label=\"0\"></Chip>\r\n            </ListItem> */}\r\n            <List\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n            >\r\n                <ListItem button onClick={handleClick}>\r\n\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                    <ListItemText primary=\"Grounded\" />\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding className={classes.sideBarCSS}>\r\n                        <ListItem component={Link} to=\"/grounded\" >\r\n                            <ListItemText primary=\"Grounded\" />\r\n                            <Chip className={classes.root} label=\"4\"></Chip>\r\n                        </ListItem>\r\n                        <ListItem component={Link} to=\"/passed\" >\r\n                            <ListItemText primary=\"Passed\" />\r\n                            <Chip className={classes.root} label=\"8\"></Chip>\r\n                        </ListItem>\r\n                        <ListItem component={Link} to=\"/purchased\" >\r\n                            <ListItemText primary=\"Purchased\" />\r\n                            <Chip className={classes.root} label=\"9\"></Chip>\r\n                        </ListItem>\r\n                    </List>\r\n                </Collapse>\r\n            </List>\r\n            <List\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n            >\r\n                <ListItem button onClick={handleClick}>\r\n\r\n                    {open ? <ExpandLess /> : <ExpandMore />}\r\n                    <ListItemText primary=\"Admin\" />\r\n                </ListItem>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding className={classes.sideBarCSS}>\r\n                        <ListItem component={Link} to=\"/adminSearch\" >\r\n                            <ListItemText primary=\"Vehicle Search\" />\r\n                            \r\n                        </ListItem>\r\n                        <ListItem component={Link} to=\"/adminInventoryRequests\" >\r\n                            <ListItemText primary=\"Inventory Requests\" />\r\n                            \r\n                        </ListItem>\r\n                    </List>\r\n                </Collapse>\r\n            </List>\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\ASP\\src\\components\\Separator.js",[],"C:\\Users\\adityah\\ASP\\src\\components\\RRMApproval.js",["268"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport SwipableFilterRRM from './SwipableFilterRRM';\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: 950,\r\n    },\r\n    manualStyles: {\r\n        position: 'absolute',\r\n        top: \"150px\",\r\n        left: \"320px\",\r\n        margin: '20px',\r\n        width: 950,\r\n    },\r\n    filterStyles: {\r\n        position: 'absolute',\r\n        top: \"90\",\r\n        left: \"320px\",\r\n        margin: '20px',\r\n        width: 950,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nfunction createVehicleData(VIN, Year, Make, Model_Trim, auction, mmr, mmb, percent, priced_rate, priced_by, approve) {\r\n    return { VIN, Year, Make, Model_Trim, auction, mmr, mmb, percent, priced_rate, priced_by, approve };\r\n}\r\n\r\nconst rows = [\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"auction\", \"00,0000\", \"00,0000\", \"+00\", \"00/00/000\", \"Employee Name\", true),\r\n\r\n];\r\n\r\nexport default function RRMApproval(props) {\r\n    const classes = useStyles();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const openConditionReport = (VINumber) => {\r\n        props.props.history.push('/conditionreportRequests', {\r\n            vin: VINumber,\r\n            pageName: \"RRMApproval\",\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <SwipableFilterRRM />\r\n            <TableContainer component={Paper} className={classes.manualStyles}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">VIN</TableCell>\r\n                            <TableCell align=\"center\">Year</TableCell>\r\n                            <TableCell align=\"center\">Make</TableCell>\r\n                            <TableCell align=\"center\">Model/Trim</TableCell>\r\n                            <TableCell align=\"center\">Auction</TableCell>\r\n                            <TableCell align=\"center\">MMR</TableCell>\r\n                            <TableCell align=\"center\">MBP</TableCell>\r\n                            <TableCell align=\"center\">%</TableCell>\r\n                            <TableCell align=\"center\">Priced rate</TableCell>\r\n                            <TableCell align=\"center\">Priced By</TableCell>\r\n                            <TableCell align=\"center\">Approve</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell align=\"right\">\r\n                                    <span className=\"textStyle\">\r\n                                        <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\r\n                                    </span>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.Year}</TableCell>\r\n                                <TableCell align=\"right\">{row.Make}</TableCell>\r\n                                <TableCell align=\"right\">{row.Model_Trim}</TableCell>\r\n                                <TableCell align=\"right\">{row.auction}</TableCell>\r\n                                <TableCell align=\"right\">{row.mmr}</TableCell>\r\n                                <TableCell align=\"right\">{row.mmb}</TableCell>\r\n                                <TableCell align=\"right\">{row.percent}</TableCell>\r\n                                <TableCell align=\"right\">{row.priced_rate}</TableCell>\r\n                                <TableCell align=\"right\">{row.priced_by}</TableCell>\r\n                                <TableCell align=\"right\">{row.approve}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\ManualPricing.js",["269","270","271","272","273"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport SwipableFilter from './SwipableFilter';\r\nimport ManualPricingSideBar from './ManualPricingSideBar';\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 950,\r\n  },\r\n  manualStyles: {\r\n    position: 'absolute',\r\n    top: \"175px\",\r\n    left: \"320px\",\r\n    margin: '20px 0',\r\n    width: 950,\r\n  },\r\n  filterStyles: {\r\n    position: 'absolute',\r\n    top: \"90\",\r\n    left: \"320px\",\r\n    margin: '20px',\r\n    width: 950,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nfunction createVehicleData(VIN, Year, Make, Model_Trim, Grounding_Region, Inspection_Date, Inspection_Status, Action_Code) {\r\n  return { VIN, Year, Make, Model_Trim, Grounding_Region, Inspection_Date, Inspection_Status, Action_Code };\r\n}\r\n\r\nconst rows = [\r\n  createVehicleData(\"0704303398645911\", \"2015\", \"CX-5\", \"A1\", \"Florida\", \"01/23/2015\", \"Pending\", \"XYZ\"),\r\n  createVehicleData(\"6672920469419405\", \"2016\", \"Mazda3\", \"B1\", \"Indiana\", \"04/26/2016\", \"Pending\", \"XYZ\"),\r\n  createVehicleData(\"7660443910307535\", \"2017\", \"Mazda6\", \"C1\", \"Texas\", \"08/13/2017\", \"Pending\", \"XYZ\"),\r\n  createVehicleData(\"2769586046735830\", \"2018\", \"MX-5\", \"A2\", \"Texas\", \"12/17/2018\", \"Completed\", \"XYZ\"),\r\n  createVehicleData(\"2563959933582287\", \"2019\", \"Mazda3\", \"B2\", \"Florida\", \"07/30/2019\", \"Completed\", \"XYZ\"),\r\n  createVehicleData(\"8309130666254027\", \"2020\", \"Mazda3\", \"C2\", \"Indiana\", \"03/14/2020\", \"Completed\", \"XYZ\"),\r\n  createVehicleData(\"3180783430963337\", \"2021\", \"Mazda6\", \"A3\", \"Indiana\", \"11/15/2021\", \"Pending\", \"XYZ\"),\r\n  createVehicleData(\"0087479668724131\", \"2022\", \"CX-5\", \"B3\", \"Texas\", \"10/24/2022\", \"Completed\", \"XYZ\"),\r\n];\r\n\r\nexport default function ManualPricing(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [vehicleList, setVehicleList] = useState(rows);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push('/conditionreportRequests', {\r\n      vin: VINumber,\r\n      pageName: \"Manual Pricing\",\r\n    })\r\n  }\r\n\r\n  const fetchDataBasedOnSearchValue = (searchText) => {\r\n    const vehicleListCopy = [...rows];\r\n    if (searchText) {\r\n      const filteredList = vehicleListCopy.filter(row => {\r\n        return row.VIN.indexOf(searchText) !== -1;\r\n      });\r\n      setVehicleList(filteredList);\r\n    } else {\r\n      setVehicleList(rows);\r\n    }\r\n  }\r\n\r\n  const fetchDataBasedOnFilters = (filterInput) => {\r\n    let vehicleListCopy = [...rows];\r\n    if (filterInput.vin) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.VIN.indexOf(filterInput.vin) !== -1 || row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo;\r\n      });\r\n    }\r\n    if (filterInput.yearFrom && filterInput.yearTo) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo;\r\n      });\r\n    }\r\n    if (filterInput.make) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.Make.indexOf(filterInput.make) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionStatus) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.groundingRegion) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.auctionCode) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\r\n      vehicleListCopy = vehicleListCopy.filter(row => {\r\n        const dateTs = Date.parse(row.Inspection_Date);\r\n        return dateTs >= Date.parse(filterInput.inspectionDateFrom) && dateTs <= Date.parse(filterInput.inspectionDateTo);\r\n      });\r\n    }\r\n    setVehicleList(vehicleListCopy);\r\n  }\r\n\r\n  const resetFilterList = () => {\r\n    setVehicleList(rows);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilter\r\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\r\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\r\n          resetFilterList={resetFilterList}\r\n        />\r\n        <TableContainer component={Paper} className={classes.manualStyles}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">VIN</TableCell>\r\n                <TableCell align=\"center\">Year</TableCell>\r\n                <TableCell align=\"center\">Make</TableCell>\r\n                <TableCell align=\"center\">Model/Trim</TableCell>\r\n                <TableCell align=\"center\">Grounding Region</TableCell>\r\n                <TableCell align=\"center\">Inspection Date</TableCell>\r\n                <TableCell align=\"center\">Inspection Status</TableCell>\r\n                <TableCell align=\"center\">Action Code</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {vehicleList.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell align=\"right\">\r\n                    <span className=\"textStyle\">\r\n                      <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.Year}</TableCell>\r\n                  <TableCell align=\"right\">{row.Make}</TableCell>\r\n                  <TableCell align=\"right\">{row.Model_Trim}</TableCell>\r\n                  <TableCell align=\"right\">{row.Grounding_Region}</TableCell>\r\n                  <TableCell align=\"right\">{row.Inspection_Date}</TableCell>\r\n                  <TableCell align=\"right\">{row.Inspection_Status}</TableCell>\r\n                  <TableCell align=\"right\">{row.Action_Code}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={vehicleList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\AdminSearchHeader.js",["274","275","276","277"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 300,\r\n        height: 35,\r\n        margin: '7px 8px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: '14px',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function AdminSearchHeader(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n        //props.searchdetails(searchtext)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Global Search by VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => handleSearchText(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\MileageDisc.js",["278"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport SwipableFilterMileage from './SwipableFilterMileage';\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        width: 950,\r\n    },\r\n    manualStyles: {\r\n        position: 'absolute',\r\n        top: \"150px\",\r\n        left: \"320px\",\r\n        margin: '20px',\r\n        width: 950,\r\n    },\r\n    filterStyles: {\r\n        position: 'absolute',\r\n        top: \"90\",\r\n        left: \"320px\",\r\n        margin: '20px',\r\n        width: 950,\r\n    },\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nfunction createVehicleData(VIN, Year, Make, Model_Trim, region, ground_mileage, inspection_mileage, difference) {\r\n    return { VIN, Year, Make, Model_Trim, region, ground_mileage, inspection_mileage, difference };\r\n}\r\n\r\nconst rows = [\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n    createVehicleData(\"0000000000000000\", \"2021\", \"Make Name\", \"Model/Trim\", \"Region Label\", \"00,0000\", \"00,0000\", \"00/00/000\"),\r\n];\r\n\r\nexport default function MileageDisc(props) {\r\n    const classes = useStyles();\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    const openConditionReport = (VINumber) => {\r\n        props.props.history.push('/conditionreportRequests', {\r\n            vin: VINumber,\r\n            pageName: \"Mileage Discrepencies\",\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <SwipableFilterMileage />\r\n            <TableContainer component={Paper} className={classes.manualStyles}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">VIN</TableCell>\r\n                            <TableCell align=\"center\">Year</TableCell>\r\n                            <TableCell align=\"center\">Make</TableCell>\r\n                            <TableCell align=\"center\">Model/Trim</TableCell>\r\n                            <TableCell align=\"center\">Region</TableCell>\r\n                            <TableCell align=\"center\">Grounding Mileage</TableCell>\r\n                            <TableCell align=\"center\">Inspection Mileage</TableCell>\r\n                            <TableCell align=\"center\">Differnence</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell align=\"right\">\r\n                                    <span className=\"textStyle\">\r\n                                        <a className=\"vin\" onClick={() => openConditionReport(row.VIN)}> {row.VIN}</a>\r\n                                    </span>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.Year}</TableCell>\r\n                                <TableCell align=\"right\">{row.Make}</TableCell>\r\n                                <TableCell align=\"right\">{row.Model_Trim}</TableCell>\r\n                                <TableCell align=\"right\">{row.region}</TableCell>\r\n                                <TableCell align=\"right\">{row.inspection_mileage}</TableCell>\r\n                                <TableCell align=\"right\">{row.ground_mileage}</TableCell>\r\n                                <TableCell align=\"right\">{row.difference}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\VehicleInformation.js",["279","280","281","282","283","284","285"],"import React, { useState } from 'react';\r\nimport Search from './Search/Search';\r\n\r\n\r\nlet styles = {\r\n  container: {\r\n    \"width\": \"371px\",\r\n    \"height\": \"270px\",\r\n    \"margin\": \"8px 540px 16px\",\r\n    \"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"border\": \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n\r\n  VehicleMakeModel: {\r\n    \"width\": \"271px\",\r\n    \"height\": \"24px\",\r\n    \"margin\": \"0 69px 0 0\",\r\n    \"font-family\": \"SalesforceSans\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"bold\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    \"color\": \"#080707\",\r\n  },\r\n  line: {\r\n    \"width\": \"350px\",\r\n    \"height\": \"2px\",\r\n    \"margin\": \"4px 2px 11px 2px\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n\r\n  label: {\r\n    \"width\": \"85px\",\r\n    \"height\": \"18px\",\r\n    \"margin\": \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    \"color\": \"#3e3e3c\",\r\n  },\r\n  value: {\r\n    \"width\": \"85px\",\r\n    \"height\": \"18px\",\r\n    \"margin\": \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    \"color\": \"#3e3e3c\",\r\n    \"font-weight\": \"normal\",\r\n  },\r\n\r\n  imagebox: {\r\n    \"width\": \"180px\",\r\n    \"height\": \"160px\",\r\n    \"margin\": \"0px 1px 2px 2px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n  search: {\r\n    \"width\": \"371px\",\r\n    \"height\": \"32px\",\r\n    \"margin-top\": \"10px\",\r\n    \"padding\": \" 0 0 0px\",\r\n    \"border-radius\": \"4px\",\r\n    \"border\": \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    \"display\": \"flex\",\r\n    \"flex-direction\": \"row\",\r\n  },\r\n  noMatchesFrame: {\r\n    \"width\": \"371px\",\r\n    \"height\": \"76px\",\r\n    \"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"border\": \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    \"display\": \"block\",\r\n    \"margin\": \"1% 0 0 40%\",\r\n\r\n  },\r\n  noMatches: {\r\n    \"height\": \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    \"color\": \"#3e3e3c\"\r\n  },\r\n  searchSuggestionFrame: {\r\n    \"width\": \"371px\",\r\n    \"height\": \"200px\",\r\n    \"margin\": \"8px 540px 16px\",\r\n    \"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"border\": \"solid 1px #dddbda\",\r\n  },\r\n  searchSuggestion: {\r\n    \"width\": \"350px\",\r\n    \"height\": \"35px\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n  searchLabel: {\r\n    \"height\": \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    \"color\": \"#3e3e3c\",\r\n  },\r\n  imageContainer: {\r\n    \"width\": \"371px\",\r\n    \"height\": \"160px\",\r\n    \"margin\": \"48px 54px 16px\",\r\n    //\"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"border\": \"solid 1px #dddbda\",\r\n  },\r\n  imageContainer1: {\r\n    \"display\": \"block\",\r\n    \"margin-left\": \"40%\",\r\n  },\r\n  alighnCenterItems: {\r\n    background: '#f3f2f2',\r\n    height: '100vh',\r\n    width: \"100%\",\r\n    right: \"0px\",\r\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  centerSection: {\r\n    marginTop: \"12%\",\r\n  }\r\n\r\n};\r\nconst VehicleInformation = (props) => {\r\n\r\n  const searchBox = styles.search;\r\n  const placeholder = 'Enter VIN';\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const accountInformation = props.accountInformation;\r\n  let searchSuggestions = ['12345678901234567', '12345678901234566', '12345678901234568', '12345678901234569', '12345678901234560'];\r\n\r\n  // useEffect(() => {\r\n  //      //need to filter search data based on the backend data\r\n  //   });\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n    let value = e?.target?.value;\r\n    searchSuggestions = searchSuggestions.filter(val => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (value?.length == 0 || !searchSuggestions || searchSuggestions?.length == 0 || searchValue?.length == 0) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    }\r\n    else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  }\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  }\r\n\r\n  return (\r\n    <div style={styles.alighnCenterItems}>\r\n      <div style={styles.centerSection}>\r\n        <img src='car.png' width=\"371px\" height=\"160px\" style={styles.imageContainer1}></img>\r\n      </div>\r\n      <div style={{ marginLeft: \"40%\" }}>\r\n        <div style={styles.searchLabel}>Search Vehicles</div>\r\n        <Search searchBox={searchBox} showSearchRight={true} searchCompleted={validSearch} placeholder={placeholder} editSearchTerm={showResults} searchValue={searchValue}></Search>\r\n\r\n      </div>\r\n      {validSearch && <div style={styles.container}>\r\n        <div style={styles.VehicleMakeModel}> Vehicle Make & Model Name | Year  </div>\r\n        <div style={styles.line}></div>\r\n        <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }}>\r\n          <div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Maturity Date </div> <div style={styles.value}> 00/00/0000 </div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Lease Type </div> <div style={styles.value}> Type Name</div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Lease Name </div> <div style={styles.value}> Lease Name </div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Acct Type </div> <div style={styles.value}> Type Name </div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Acct Number </div> <div style={styles.value}> 00000000 </div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Ream Payments </div> <div style={styles.value}> $000.00 </div> </div>\r\n            <div style={{ \"display\": \"flex\", \"flex-direction\": \"row\" }} >  <div style={styles.label}>Color </div> <div style={styles.value}>  Color Name </div> </div>\r\n          </div>\r\n\r\n          <div style={styles.imagebox}>\r\n            <img />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>}\r\n      {!validSearch && !suggestions && <div style={styles.noMatchesFrame}>\r\n        <div style={styles.noMatches}>No Matches Available</div>\r\n      </div>}\r\n      {suggestions && <div style={styles.searchSuggestionFrame}>\r\n        {searchSuggestions.map(function (name, index) {\r\n          return <div style={styles.searchSuggestion} onClick={() => setSearchData(index)}>{name}</div>\r\n        })}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\nexport default VehicleInformation;","C:\\Users\\adityah\\ASP\\src\\components\\Tabs.js",["286"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\r\nimport StatusHistory from './StatusHistory';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function VehicleSearchTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    console.log(\"aaaa\",props)\r\n\r\n    const{inspectiondata}=props;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className='topBarAdmin'>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\r\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\r\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <div className='adminTabsSection'><StatusHistory /></div>\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <div className='adminTabsSection'>Update Mileage/price</div>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\AdminVehicleSearch.js",["287","288"],"import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CustomizedInputBase from './CustomisedInput';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\nimport SearchText from './SearchText/Search';\r\nconst AdminVehicleSearch = (props) => {\r\n\r\n  console.log(\"searchdetails\",props);\r\n\r\n  return (\r\n    <Card className=\"adminSearchCard\">\r\n      <CardContent className=\"adminSearcheader\">\r\n        <Typography variant=\"h4\" component=\"h4\">\r\n          Welcome to Auction Sales Platform\r\n        </Typography>\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Search for a vehicle, or start with any of the menu items on the left.\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent className=\"adminSearchCardBody\">\r\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\r\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  )\r\n}\r\nexport default AdminVehicleSearch;","C:\\Users\\adityah\\ASP\\src\\components\\NotesSection.js",["289","290","291","292"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\nexport default function NotesSection() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    return (\r\n        <div className=\"notesSection\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                NotesSection\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"notesText\">\r\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                </div>\r\n\r\n            </ListItem>\r\n            <ListItem >\r\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\r\n                    Save\r\n                </Button>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js",["293"],"import React, { useState } from 'react';\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n\r\n    return (\r\n        <div class=\"groundVehicleMFS\">\r\n            <p>By grounding this vehicle, dealer will have multiple purchase options and customer will be invoiced asa lease return.</p>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\passedPage.js",["294","295"],"C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js",["296"],"import React, { useState } from 'react';\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n\r\n    return (\r\n        <div class=\"groundVehiclePLV\">\r\n            <p>Dealer is responsible for paying off the vehicle and customer will not recieve any lease-end charges.</p>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\purchasedPage.js",["297","298","299","300","301"],"C:\\Users\\adityah\\ASP\\src\\components\\ManualPricingSideBar.js",["302","303","304","305","306","307","308","309"],"import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        height: '10px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\nexport default function ManualPricingSideBar() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    const handleOnChange = (event) => {\r\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\r\n    };\r\n    const [filterInput, setFilterInput] = useState({\r\n        vin: '',\r\n        yearFrom: '',\r\n        yearTo: '',\r\n        make: '',\r\n        inspectionStatus: '',\r\n        inspectionDateFrom: '',\r\n        inspectionDateTo: '',\r\n        groundingRegion: '',\r\n        auctionCode: ''\r\n    });\r\n    return (\r\n        <div className=\"manualPricingSidebar\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                Manual Pricing\r\n            </ListItem>\r\n            <ListItem button>\r\n                <FormControl>\r\n                    <InputLabel shrink htmlFor=\"vin-input\">\r\n                        Market Price\r\n                    </InputLabel>\r\n                    <BootstrapInput\r\n                        placeholder=\"Enter price\"\r\n                        id=\"EntermarketPrice-input\"\r\n                        name=\"EntermarketPrice\"\r\n                        value={filterInput.vin}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </FormControl>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <FormControl>\r\n                    <InputLabel shrink htmlFor=\"vin-input\">\r\n                        Re-Enter Market Price\r\n                    </InputLabel>\r\n                    <BootstrapInput\r\n                        placeholder=\"Enter Price\"\r\n                        id=\"reEntermarketPrice-input\"\r\n                        name=\"reEntermarketPrice\"\r\n                        value={filterInput.vin}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </FormControl>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <FormControl>\r\n                    <InputLabel shrink htmlFor=\"vin-input\">\r\n                        MMR\r\n                    </InputLabel>\r\n                    <BootstrapInput\r\n                        placeholder=\"MMR\"\r\n                        id=\"vin-input\"\r\n                        name=\"vin\"\r\n                        value={filterInput.vin}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </FormControl>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem >\r\n                <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n            </ListItem>\r\n\r\n            <ListItem >\r\n                <p className=\"manualPricing\">Autograde: 3.0</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem>\r\n                <div>\r\n                    <h3>Price History</h3>\r\n                </div>\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"manualPricingText\">\r\n                    <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n                    <p className=\"manualPricing\">Price: $00,000.00</p>\r\n                    <p className=\"manualPricing\">User Name: First, Last</p>\r\n                </div>\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"manualPricingText\">\r\n                    <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n                    <p className=\"manualPricing\">Price: $00,000.00</p>\r\n                    <p className=\"manualPricing\">User Name: First, Last</p>\r\n                </div>\r\n\r\n            </ListItem>\r\n            <List className=\"swipeFilterBtn\">\r\n                <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button autoFocus className=\"updateButton\" color=\"secondary\" >\r\n                    Update\r\n                </Button>\r\n            </List>\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\ASP\\src\\pages\\ViewDetailedReport.js",["310","311"],"C:\\Users\\adityah\\ASP\\src\\pages\\ImageGallery.js",[],"C:\\Users\\adityah\\ASP\\src\\components\\PurchasedPricingSideBar.js",["312","313","314","315","316","317","318","319"],"import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        height: '10px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\nexport default function PurchasedPricingSideBar() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    const handleOnChange = (event) => {\r\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\r\n    };\r\n    const [filterInput, setFilterInput] = useState({\r\n        vin: '',\r\n        yearFrom: '',\r\n        yearTo: '',\r\n        make: '',\r\n        inspectionStatus: '',\r\n        inspectionDateFrom: '',\r\n        inspectionDateTo: '',\r\n        groundingRegion: '',\r\n        auctionCode: ''\r\n    });\r\n    const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    return (\r\n        <div className=\"manualPricingSidebar\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                Purchase Page\r\n            </ListItem>\r\n            <ListItem button>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Vehicle pricing options</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"Payoff\" />\r\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"Residual + Remaining Payments\" />\r\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"Market\" />\r\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"Market + Remaining Payments \" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem >\r\n                <ListItemText className=\"manualPricing\">Admin. Fee:</ListItemText>\r\n                <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem >\r\n                <ListItemText className=\"manualPricing\">Total Fee:</ListItemText>\r\n                <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n            </ListItem>\r\n            <List className=\"purchasePassBtn\">\r\n                <Button className=\"passButton\" color=\"primary\">\r\n                    Pass on Vehicle\r\n                </Button>\r\n                <Button disabled className=\"purchaseButton\" color=\"secondary\" >\r\n                    Purchase Vehicle\r\n                </Button>\r\n            </List>\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\ASP\\src\\components\\Search\\Search.js",["320","321","322","323"],"import React, { useState } from 'react';\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n\r\n    <div style={serachBoxEntire}>\r\n      {showSearchLeft && <div class=\"searchDiv\" > <img src={searchCompleted ? 'close.png' : 'searchIcon1.png'} alt=\"Logo\" width=\"20px\" height=\"20px\" /> </div>}\r\n      <input value={props?.searchValue} class=\"searchInput\" onChange={(evt) => props?.editSearchTerm(evt)} placeholder={placeholder} />\r\n      {showSearchRight && <div class=\"searchDiv\"> <img src={searchCompleted ? 'close.png' : 'searchIcon1.png'} alt=\"Logo\" width=\"20px\" height=\"20px\" /> </div>}\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map(name => <div>\r\n          {name}\r\n        </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n}\r\nexport default Search;","C:\\Users\\adityah\\ASP\\src\\service\\api.js",["324","325","326"],"C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\groundedListPage.js",["327","328","329","330","331","332","333","334","335"],"C:\\Users\\adityah\\ASP\\src\\components\\SearchText\\Search.js",["336","337","338","339","340","341","342"],"import React, { useState } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nconst SearchText = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n\r\n    <div class=\"search\">\r\n\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        value={props?.searchValue}\r\n        maxlength=\"18\"\r\n        class=\"searchInput\"\r\n        fullWidth\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <CloseIcon />\r\n      </IconButton>\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map(name => <div>\r\n          {name}\r\n        </div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n}\r\nexport default SearchText;","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilterRRM.js",["343","344","345","346","347"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles({\r\n    inline: {\r\n        display: \"inline-block\",\r\n        marginTop: '25px',\r\n    },\r\n    inlineDate: {\r\n        display: \"inline-block\",\r\n        marginTop: '135px',\r\n    },\r\n    list: {\r\n        width: 264,\r\n        height: \"100%\",\r\n        paddingBottom: \"64px\",\r\n        position: \"relative\",\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    filterStyles: {\r\n        position: 'absolute',\r\n        top: \"132px\",\r\n        left: \"320px\",\r\n        display: \"flex\",\r\n        alignContent: \"center\"\r\n    },\r\n    textField: {\r\n        width: \"216px\",\r\n        borderRadius: \"4px\",\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    updateButton: {\r\n        padding: \"4px 8px\",\r\n        minWidth: \"114px\",\r\n        borderRadius: \"4px\",\r\n        color: \"#ffffff!important\",\r\n        backgroundColor: \"#c23934!important\",\r\n    },\r\n    cancelButton: {\r\n        padding: \"4px 8px\",\r\n        minWidth: \"88px\",\r\n        borderRadius: \"4px\",\r\n        color: \"#0070d2!important\",\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    searchBlock: {\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n        boxShadow: \"none\",\r\n    },\r\n    customSelect: {\r\n        marginTop: \"24px\",\r\n        color: \"#706e6b\",\r\n        fontSize: \"13px\",\r\n    },\r\n    selectFormControl: {\r\n        width: \"100%\"\r\n    },\r\n    iconButton: {\r\n        padding: \"2px 12px\"\r\n    },\r\n    filterInput: {\r\n        height: \"32px\",\r\n    },\r\n    swipeFilterBtn: {\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        left: \"0px\",\r\n        padding: \"8px 16px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        background: \"#FFF\",\r\n    },\r\n    filterResultText: {\r\n        color: \"#006dcc\",\r\n        fontSize: \"13px\",\r\n        lineHeigt: \"20px\",\r\n        fontWeight: \"500\",\r\n        textTransform: \"lowercase\",\r\n        marginLeft: \"16px\",\r\n    }\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        height: '10px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        display: 'inline-block',\r\n        minWidth: '65px',\r\n        height: '10px',\r\n        marginRight: '5px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterRRM() {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n    const [filterInput, setFilterInput] = useState({\r\n        vin: '',\r\n        yearFrom: '',\r\n        yearTo: '',\r\n        make: '',\r\n        inspectionStatus: '',\r\n        inspectionDateFrom: '',\r\n        inspectionDateTo: '',\r\n        groundingRegion: '',\r\n        auctionCode: ''\r\n    });\r\n    const [makeOptions, setMakeOptions] = useState([\r\n        { value: 'audi', text: 'Audi' },\r\n        { value: 'bmw', text: 'BMW' },\r\n        { value: 'benz', text: 'Benz' }\r\n    ]);\r\n    const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n        { value: 'pending', text: 'Pending' },\r\n        { value: 'completed', text: 'Completed' }\r\n    ]);\r\n    const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n        { value: 'texas', text: 'Texas' },\r\n        { value: 'florida', text: 'Florida' },\r\n        { value: 'indiana', text: 'Indiana' }\r\n    ]);\r\n    const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const handleOnChange = (event) => {\r\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n        console.log(filterInput);\r\n    }\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, { [classes.fullList]: anchor === 'top' || anchor === 'bottom' })}\r\n            role=\"presentation\"\r\n        //onClick={toggleDrawer(anchor, false)}\r\n        //onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {['Filter Options'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"vin-input\">\r\n                            VIN\r\n                        </InputLabel>\r\n                        <BootstrapInput\r\n                            placeholder=\"Enter full or partial VIN\"\r\n                            id=\"vin-input\"\r\n                            name=\"vin\"\r\n                            value={filterInput.vin}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"year-input\">\r\n                            Year Range\r\n                        </InputLabel>\r\n                        <SmallInput\r\n                            placeholder=\"From\"\r\n                            id=\"year-from-input\"\r\n                            name=\"yearFrom\"\r\n                            value={filterInput.yearFrom}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.inline}>\r\n                        <SmallInput\r\n                            placeholder=\"To\"\r\n                            id=\"year-to-input\"\r\n                            name=\"yearTo\"\r\n                            value={filterInput.yearTo}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Make\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            variant=\"outlined\"\r\n                            displayEmpty\r\n                            name=\"make\"\r\n                            value={filterInput.make}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {makeOptions.map(make => (\r\n                                <MenuItem value={make.value}>{make.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Inspection Status\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            variant=\"outlined\"\r\n                            displayEmpty\r\n                            name=\"inspectionStatus\"\r\n                            value={filterInput.inspectionStatus}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {inspectionStatusOptions.map(inspectionStatus => (\r\n                                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"Inspection-input\">\r\n                            Inspection Date\r\n                        </InputLabel>\r\n                        <SmallInput\r\n                            placeholder=\"From\"\r\n                            id=\"Inspection-input\"\r\n                            name=\"inspectionDateFrom\"\r\n                            value={filterInput.inspectionDateFrom}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.inline}>\r\n                        <SmallInput\r\n                            placeholder=\"To\"\r\n                            id=\"Inspection-input\"\r\n                            name=\"inspectionDateTo\"\r\n                            value={filterInput.inspectionDateTo}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Grounding Region\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            displayEmpty\r\n                            variant=\"outlined\"\r\n                            name=\"groundingRegion\"\r\n                            value={filterInput.groundingRegion}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {groundingRegionOptions.map(groundingRegion => (\r\n                                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"auction-code-input\">\r\n                            Auction Code\r\n                        </InputLabel>\r\n                        <BootstrapInput\r\n                            placeholder=\"Enter code\"\r\n                            id=\"auction-code-input\"\r\n                            name=\"auctionCode\"\r\n                            value={filterInput.auctionCode}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.swipeFilterBtn}>\r\n                <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={handleOnSubmit}>\r\n                    Update\r\n                </Button>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.filterStyles}>\r\n            <Paper component=\"form\" className={classes.searchBlock}>\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <InputBase\r\n                    className={classes.filterInput}\r\n                    placeholder=\"Search\"\r\n                    inputProps={{ 'aria-label': 'Search' }}\r\n                    onChange={(evt) => handleSearchText(evt.target.value)}\r\n                />\r\n            </Paper>\r\n            {['right'].map((anchor) => (\r\n                <React.Fragment key={anchor} >\r\n                    <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\r\n                    <SwipeableDrawer\r\n                        anchor={anchor}\r\n                        open={state[anchor]}\r\n                        onClose={toggleDrawer(anchor, false)}\r\n                        onOpen={toggleDrawer(anchor, true)}\r\n                    >\r\n                        {list(anchor)}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilter.js",["348","349","350","351","352"],"import React, {useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: '25px',\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: '135px',\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  filterStyles: {\r\n    position: 'absolute',\r\n    top: \"132px\",\r\n    left: \"320px\",\r\n    display: \"flex\",\r\n    alignContent: \"center\"\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\" \r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\"\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  }\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: \"#ffffff\",\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    height: '10px',\r\n    padding: '10px 12px',\r\n    '&:focus': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: \"#ffffff\",\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    display: 'inline-block',\r\n    minWidth: '65px',\r\n    height: '10px',\r\n    marginRight: '5px',\r\n    padding: '10px 12px',\r\n    '&:focus': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilter(props) {\r\n  const { fetchDataBasedOnSearchValue, fetchDataBasedOnFilters, resetFilterList } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: '',\r\n    yearFrom: '',\r\n    yearTo: '',\r\n    make: '',\r\n    inspectionStatus: '',\r\n    inspectionDateFrom: '',\r\n    inspectionDateTo: '',\r\n    groundingRegion: '',\r\n    auctionCode: ''\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    {value: 'CX-5', text: 'CX-5'},\r\n    {value: 'MX-5', text: 'MX-5'},\r\n    {value: 'Mazda3', text: 'Mazda3'},\r\n    {value: 'Mazda6', text: 'Mazda6'}\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    {value: 'Pending', text: 'Pending'},\r\n    {value: 'Completed', text: 'Completed'}\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    {value: 'Texas', text: 'Texas'},\r\n    {value: 'Florida', text: 'Florida'},\r\n    {value: 'Indiana', text: 'Indiana'}\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value }});\r\n  };\r\n\r\n  const resetFilterInput = () => {\r\n    setFilterInput({\r\n      vin: '',\r\n      yearFrom: '',\r\n      yearTo: '',\r\n      make: '',\r\n      inspectionStatus: '',\r\n      inspectionDateFrom: '',\r\n      inspectionDateTo: '',\r\n      groundingRegion: '',\r\n      auctionCode: ''\r\n    });\r\n    resetFilterList();\r\n    setState({ ...state, ['right']: false });\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {[classes.fullList]: anchor === 'top' || anchor === 'bottom'})}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {['Filter Options'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map(make => (\r\n                <MenuItem value={make.value}>{make.text}</MenuItem>  \r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map(inspectionStatus => (\r\n                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>  \r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map(groundingRegion => (\r\n                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>  \r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\" onClick={() => resetFilterInput()}>\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={() => fetchDataBasedOnFilters(filterInput)}>\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search VIN\"\r\n          inputProps={{ 'aria-label': 'Search' }}\r\n          value={searchtext || ''}\r\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {['right'].map((anchor) => (\r\n        <React.Fragment key={anchor} >\r\n          <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\SwipableFilterMileage.js",["353","354","355","356","357"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles({\r\n    inline: {\r\n        display: \"inline-block\",\r\n        marginTop: '25px',\r\n    },\r\n    inlineDate: {\r\n        display: \"inline-block\",\r\n        marginTop: '135px',\r\n    },\r\n    list: {\r\n        width: 264,\r\n        height: \"100%\",\r\n        paddingBottom: \"64px\",\r\n        position: \"relative\",\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    filterStyles: {\r\n        position: 'absolute',\r\n        top: \"132px\",\r\n        left: \"320px\",\r\n        display: \"flex\",\r\n        alignContent: \"center\"\r\n    },\r\n    textField: {\r\n        width: \"216px\",\r\n        borderRadius: \"4px\",\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    updateButton: {\r\n        padding: \"4px 8px\",\r\n        minWidth: \"114px\",\r\n        borderRadius: \"4px\",\r\n        color: \"#ffffff!important\",\r\n        backgroundColor: \"#c23934!important\",\r\n    },\r\n    cancelButton: {\r\n        padding: \"4px 8px\",\r\n        minWidth: \"88px\",\r\n        borderRadius: \"4px\",\r\n        color: \"#0070d2!important\",\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    searchBlock: {\r\n        border: \"solid 1px #dddbda\",\r\n        backgroundColor: \"#ffffff\",\r\n        boxShadow: \"none\",\r\n    },\r\n    customSelect: {\r\n        marginTop: \"24px\",\r\n        color: \"#706e6b\",\r\n        fontSize: \"13px\",\r\n    },\r\n    selectFormControl: {\r\n        width: \"100%\"\r\n    },\r\n    iconButton: {\r\n        padding: \"2px 12px\"\r\n    },\r\n    filterInput: {\r\n        height: \"32px\",\r\n    },\r\n    swipeFilterBtn: {\r\n        position: \"absolute\",\r\n        bottom: \"0\",\r\n        left: \"0px\",\r\n        padding: \"8px 16px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n        background: \"#FFF\",\r\n    },\r\n    filterResultText: {\r\n        color: \"#006dcc\",\r\n        fontSize: \"13px\",\r\n        lineHeigt: \"20px\",\r\n        fontWeight: \"500\",\r\n        textTransform: \"lowercase\",\r\n        marginLeft: \"16px\",\r\n    }\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        height: '10px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        display: 'inline-block',\r\n        minWidth: '65px',\r\n        height: '10px',\r\n        marginRight: '5px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterMileage() {\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n    const [filterInput, setFilterInput] = useState({\r\n        vin: '',\r\n        yearFrom: '',\r\n        yearTo: '',\r\n        make: '',\r\n        inspectionStatus: '',\r\n        inspectionDateFrom: '',\r\n        inspectionDateTo: '',\r\n        groundingRegion: '',\r\n        auctionCode: ''\r\n    });\r\n    const [makeOptions, setMakeOptions] = useState([\r\n        { value: 'audi', text: 'Audi' },\r\n        { value: 'bmw', text: 'BMW' },\r\n        { value: 'benz', text: 'Benz' }\r\n    ]);\r\n    const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n        { value: 'pending', text: 'Pending' },\r\n        { value: 'completed', text: 'Completed' }\r\n    ]);\r\n    const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n        { value: 'texas', text: 'Texas' },\r\n        { value: 'florida', text: 'Florida' },\r\n        { value: 'indiana', text: 'Indiana' }\r\n    ]);\r\n    const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const handleOnChange = (event) => {\r\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n        console.log(filterInput);\r\n    }\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, { [classes.fullList]: anchor === 'top' || anchor === 'bottom' })}\r\n            role=\"presentation\"\r\n        //onClick={toggleDrawer(anchor, false)}\r\n        //onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                {['Filter Options'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"vin-input\">\r\n                            VIN\r\n                        </InputLabel>\r\n                        <BootstrapInput\r\n                            placeholder=\"Enter full or partial VIN\"\r\n                            id=\"vin-input\"\r\n                            name=\"vin\"\r\n                            value={filterInput.vin}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"year-input\">\r\n                            Year Range\r\n                        </InputLabel>\r\n                        <SmallInput\r\n                            placeholder=\"From\"\r\n                            id=\"year-from-input\"\r\n                            name=\"yearFrom\"\r\n                            value={filterInput.yearFrom}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.inline}>\r\n                        <SmallInput\r\n                            placeholder=\"To\"\r\n                            id=\"year-to-input\"\r\n                            name=\"yearTo\"\r\n                            value={filterInput.yearTo}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Make\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            variant=\"outlined\"\r\n                            displayEmpty\r\n                            name=\"make\"\r\n                            value={filterInput.make}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {makeOptions.map(make => (\r\n                                <MenuItem value={make.value}>{make.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Inspection Status\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            variant=\"outlined\"\r\n                            displayEmpty\r\n                            name=\"inspectionStatus\"\r\n                            value={filterInput.inspectionStatus}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {inspectionStatusOptions.map(inspectionStatus => (\r\n                                <MenuItem value={inspectionStatus.value}>{inspectionStatus.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"Inspection-input\">\r\n                            Inspection Date\r\n                        </InputLabel>\r\n                        <SmallInput\r\n                            placeholder=\"From\"\r\n                            id=\"Inspection-input\"\r\n                            name=\"inspectionDateFrom\"\r\n                            value={filterInput.inspectionDateFrom}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.inline}>\r\n                        <SmallInput\r\n                            placeholder=\"To\"\r\n                            id=\"Inspection-input\"\r\n                            name=\"inspectionDateTo\"\r\n                            value={filterInput.inspectionDateTo}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl className={classes.selectFormControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                            Grounding Region\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-placeholder-label-label\"\r\n                            id=\"demo-simple-select-placeholder-label\"\r\n                            className={classes.customSelect}\r\n                            displayEmpty\r\n                            variant=\"outlined\"\r\n                            name=\"groundingRegion\"\r\n                            value={filterInput.groundingRegion}\r\n                            onChange={handleOnChange}\r\n                        >\r\n                            <MenuItem value=\"\" disabled>\r\n                                Select All that Apply\r\n                            </MenuItem>\r\n                            {groundingRegionOptions.map(groundingRegion => (\r\n                                <MenuItem value={groundingRegion.value}>{groundingRegion.text}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n                <ListItem button>\r\n                    <FormControl>\r\n                        <InputLabel shrink htmlFor=\"auction-code-input\">\r\n                            Auction Code\r\n                        </InputLabel>\r\n                        <BootstrapInput\r\n                            placeholder=\"Enter code\"\r\n                            id=\"auction-code-input\"\r\n                            name=\"auctionCode\"\r\n                            value={filterInput.auctionCode}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </FormControl>\r\n                </ListItem>\r\n            </List>\r\n            <List className={classes.swipeFilterBtn}>\r\n                <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button autoFocus className={classes.updateButton} color=\"secondary\" onClick={handleOnSubmit}>\r\n                    Update\r\n                </Button>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.filterStyles}>\r\n            <Paper component=\"form\" className={classes.searchBlock}>\r\n                <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <InputBase\r\n                    className={classes.filterInput}\r\n                    placeholder=\"Search\"\r\n                    inputProps={{ 'aria-label': 'Search' }}\r\n                    onChange={(evt) => handleSearchText(evt.target.value)}\r\n                />\r\n            </Paper>\r\n            {['right'].map((anchor) => (\r\n                <React.Fragment key={anchor} >\r\n                    <Button className={classes.filterResultText} onClick={toggleDrawer(anchor, true)}>{\"Filter Results\"}</Button>\r\n                    <SwipeableDrawer\r\n                        anchor={anchor}\r\n                        open={state[anchor]}\r\n                        onClose={toggleDrawer(anchor, false)}\r\n                        onOpen={toggleDrawer(anchor, true)}\r\n                    >\r\n                        {list(anchor)}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\components\\StatusHistory.js",[],"C:\\Users\\adityah\\ASP\\src\\components\\Stepper\\VerticalStepper.js",["358","359"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\r\n}\r\n\r\nexport default function VerticalVehicleStepper() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(2);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {steps.map((label, index) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {activeStep === steps.length && (\r\n                <Paper square elevation={0} className={classes.resetContainer}>\r\n                    <Typography>All steps completed - you&apos;re finished</Typography>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                        Reset\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\PassOnVehicle.js",["360","361","362","363"],"import React, { useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { postDealerActionPassOnVehicle } from '../service/api'\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function PassOnVehicle(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [noCall, setnoCall] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.close()\r\n    };\r\n\r\n    const handleProceed = () => {\r\n        setOpen(false);\r\n        setnoCall(true);\r\n        props.close()\r\n    };\r\n    useEffect(() => {\r\n        getPassOnDetails();\r\n    }, [noCall]);\r\n\r\n    async function getPassOnDetails() {\r\n        let apiResponse = await postDealerActionPassOnVehicle(props.vin);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"max-width-dialog-title\" open={props.open}>\r\n                <DialogTitle className=\"viewReportHeader\" id=\"customized-dialog-title\" onClose={handleClose} >\r\n                    Pass On vehicle\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent>\r\n\r\n                    <Grid container >\r\n                        <Grid xs={12}>\r\n                            <div className=\"viewReportCenter\">You have passed on Vehicle</div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions className=\"reportFooter\">\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus onClick={handleProceed} className=\"closePassBtn\" color=\"secondary\">\r\n                        Proceed\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\GroundPending\\Carousel.js",["364"],"import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst tutorialSteps = [\r\n    {\r\n        imgPath:\r\n            'car.jpg',\r\n    },\r\n    {\r\n        imgPath:\r\n            'car.jpg',\r\n    },\r\n    {\r\n        imgPath:\r\n            'car.jpg',\r\n    },\r\n    {\r\n        imgPath:\r\n            'car.jpg',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 400,\r\n        flexGrow: 1,\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        paddingLeft: theme.spacing(4),\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    img: {\r\n        height: 255,\r\n        display: 'block',\r\n        maxWidth: 400,\r\n        overflow: 'hidden',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const maxSteps = tutorialSteps.length;\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <img className=\"img\" src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n\r\n                    </Button>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","C:\\Users\\adityah\\ASP\\src\\components\\CustomisedInput.js",["365","366","367"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 550,\r\n        marginRight: '50px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n    console.log(\"searchtext : \",searchtext)\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n        props.searchdetails(searchtext)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search Vehicle By VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => handleSearchText(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\ASP\\src\\pages\\AdminDetailedReport.js",["368","369","370","371","372","373"],"import React, { useState,useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyGallery from './ImageGallery';\r\nimport {getInspectionVehicleDetails} from '../service/api';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function AdminDetailedReport(props) {\r\n    let groundingDetails = {\r\n        \"Account Number\": \"00000000000\",\r\n        \"Current Status\": \"Detail\",\r\n        \"Customer Return Date\": \"00/00/2021\",\r\n        \"Current Status\": \"Detail\",\r\n        \"Grounding Dealer Number\": \"00000000000\",\r\n        \"Grounding Dealer Name\": \"Dealer Name\",\r\n        \"Grounding Date\": \"00/00/2021\",\r\n        \"Grounding Mileage\": \"000,000 mi\",\r\n        \"Transportation Order Date\": \"00/00/2021\",\r\n        \"Transportation Company\": \"Company Name\",\r\n        \"Bankruptcy Code\": \"Detail\",\r\n        \"Term Code\": \"Detail\",\r\n        \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\r\n        \"Type\": \"Detail\",\r\n        \"Residual\": \"$00,000.00\",\r\n        \"Current Payoff Amount\": \"$00,000.00\",\r\n        \"Grounding Dealer Auction\": \"Detail\",\r\n        \"Total Outstanding Remaining Payments\": \"00\",\r\n        \"Guaranteed Payments\": \"$00,000.00\",\r\n        \"Payment Guarantee\": \"Yes/No\",\r\n        \"10-Day Rule No Charge Amount\": \"$00,000.00\",\r\n        \"Payoff at Grounding\": \"?????\",\r\n        \"Market Based Price\": \"$00,000.00\",\r\n        \"Remaining Payments at Grounding\": \"$00,000.00\"\r\n    };\r\n    let inspectionDetails = {\r\n        \"Inspection Scheduled Date\": `${moment(props?.inspectiondata?.inspection_date).format('MM/DD/YYYY')}`,\r\n        \"Inspection Date\": \"00/00/2021\",\r\n        \"Inspection Status\": \"Detail\",\r\n        \"Inspection Mileage\": \"000,000 mi\",\r\n        \"Master Keys Returned\": \"00\",\r\n        \"Value Keys Returned\": \"00\",\r\n        \"Inspection Type\": \"Detail\",\r\n        \"Excess Wear & Tear Amount\": \"$00,000.00\"\r\n    };\r\n\r\n    let purchaseDetails = {\r\n        \"Sold Date\": \"00/00/2021\",\r\n        \"Purchasing Dealer\": \"Dealer Name\",\r\n        \"Purchase Dealer Number\": \"00000000000\",\r\n        \"Purchase Type\": \"Detail\",\r\n        \"Gross Purchase Amount\": \"$00,000.00\",\r\n        \"Purchasing Dealer Legal Name\": \"Detail\"\r\n    };\r\n    const [open, setOpen] = React.useState(false)\r\n    const [condionVehicleDetails, setCondionVehicleDetails] = useState({})\r\n    const [vin,setvin] = useState( 'JM3KFBDM0K1698372');\r\n\r\n\r\n    console.log(\"admndetailedreport props:\",props)\r\n\r\n\r\n    useEffect(() => {\r\n        getConditionVehicleDetails()\r\n    }, [vin])\r\n\r\n    async function getConditionVehicleDetails() {\r\n        let apiResponse = await getInspectionVehicleDetails(vin);\r\n        console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\r\n        setCondionVehicleDetails(apiResponse.data);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(!open)\r\n    }\r\n    return (\r\n        <div className='conditionPageCard'>\r\n            <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                    <MyGallery />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                    <div className='ConditionReportSection'>\r\n                        <div className='reportTitle'>\r\n                            <span>Year Make Model Color</span>\r\n                        </div>\r\n                        <span className='ConditionReportInspection'>\r\n                            <span className='BadgeValue'>Inspection Complete</span>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <Grid container spacing={3}>\r\n                        <Card className=\"vehicleSectionCR\">\r\n                            <Typography variant=\"h6\">Grounding Details</Typography>\r\n                            <hr />\r\n                            <CardContent>\r\n\r\n                                {Object.entries(groundingDetails).map(([key, value]) => {\r\n                                    return (\r\n                                        <List className=\"paddingCSS\">\r\n                                            <ListItemText>\r\n                                                <span className=\"textStyle\">\r\n                                                    <span className=\"textBold\">  {key}  </span>\r\n\r\n                                                </span>\r\n                                            </ListItemText>\r\n                                            <ListItemSecondaryAction>\r\n                                                <span className=\"textSize\">{value}</span>\r\n                                            </ListItemSecondaryAction>\r\n                                        </List>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </CardContent>\r\n\r\n                            <Typography variant=\"h6\">Inspection Details</Typography>\r\n                            <hr />\r\n                            <CardContent>\r\n\r\n                                {Object.entries(inspectionDetails).map(([key, value]) => {\r\n                                    return (\r\n                                        <List className=\"paddingCSS\">\r\n                                            <ListItemText>\r\n                                                <span className=\"textStyle\">\r\n                                                    <span className=\"textBold\">  {key}  </span>\r\n\r\n                                                </span>\r\n                                            </ListItemText>\r\n                                            <ListItemSecondaryAction>\r\n                                                <span className=\"textSize\">{value}</span>\r\n                                            </ListItemSecondaryAction>\r\n                                        </List>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </CardContent>\r\n                            <Typography variant=\"h6\">Purchase Details</Typography>\r\n                            <hr />\r\n                            <CardContent>\r\n\r\n                                {Object.entries(purchaseDetails).map(([key, value]) => {\r\n                                    return (\r\n                                        <List className=\"paddingCSS\">\r\n                                            <ListItemText>\r\n                                                <span className=\"textStyle\">\r\n                                                    <span className=\"textBold\">  {key}  </span>\r\n\r\n                                                </span>\r\n                                            </ListItemText>\r\n                                            <ListItemSecondaryAction>\r\n                                                <span className=\"textSize\">{value}</span>\r\n                                            </ListItemSecondaryAction>\r\n                                        </List>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </CardContent>\r\n                            <div className=\"disclaimerVRS\">\r\n                                Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\r\n                            </div>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};",{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","severity":1,"message":"379","line":9,"column":10,"nodeType":"380","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"378","severity":1,"message":"382","line":9,"column":20,"nodeType":"380","messageId":"381","endLine":9,"endColumn":29},{"ruleId":"378","severity":1,"message":"383","line":9,"column":43,"nodeType":"380","messageId":"381","endLine":9,"endColumn":52},{"ruleId":"384","severity":1,"message":"385","line":31,"column":45,"nodeType":"386","messageId":"387","endLine":31,"endColumn":50},{"ruleId":"378","severity":1,"message":"388","line":10,"column":7,"nodeType":"380","messageId":"381","endLine":10,"endColumn":10},{"ruleId":"378","severity":1,"message":"389","line":18,"column":7,"nodeType":"380","messageId":"381","endLine":18,"endColumn":14},{"ruleId":"378","severity":1,"message":"390","line":52,"column":9,"nodeType":"380","messageId":"381","endLine":52,"endColumn":16},{"ruleId":"391","severity":1,"message":"392","line":64,"column":8,"nodeType":"393","endLine":64,"endColumn":63,"suggestions":"394"},{"ruleId":"391","severity":1,"message":"395","line":64,"column":9,"nodeType":"396","endLine":64,"endColumn":62},{"ruleId":"378","severity":1,"message":"397","line":2,"column":8,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"398","line":6,"column":5,"nodeType":"380","messageId":"381","endLine":6,"endColumn":11},{"ruleId":"378","severity":1,"message":"399","line":11,"column":10,"nodeType":"380","messageId":"381","endLine":11,"endColumn":18},{"ruleId":"391","severity":1,"message":"395","line":19,"column":7,"nodeType":"400","endLine":19,"endColumn":28},{"ruleId":"401","severity":1,"message":"402","line":19,"column":24,"nodeType":"400","messageId":"403","endLine":19,"endColumn":26},{"ruleId":"401","severity":1,"message":"402","line":36,"column":23,"nodeType":"400","messageId":"403","endLine":36,"endColumn":25},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"405","line":22,"column":3,"nodeType":"380","endLine":22,"endColumn":12,"suggestions":"406"},{"ruleId":"401","severity":1,"message":"402","line":53,"column":23,"nodeType":"400","messageId":"403","endLine":53,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":53,"column":79,"nodeType":"400","messageId":"403","endLine":53,"endColumn":81},{"ruleId":"401","severity":1,"message":"402","line":53,"column":107,"nodeType":"400","messageId":"403","endLine":53,"endColumn":109},{"ruleId":"378","severity":1,"message":"407","line":67,"column":9,"nodeType":"380","messageId":"381","endLine":67,"endColumn":22},{"ruleId":"378","severity":1,"message":"408","line":25,"column":9,"nodeType":"380","messageId":"381","endLine":25,"endColumn":19},{"ruleId":"378","severity":1,"message":"409","line":26,"column":9,"nodeType":"380","messageId":"381","endLine":26,"endColumn":28},{"ruleId":"378","severity":1,"message":"410","line":31,"column":17,"nodeType":"380","messageId":"381","endLine":31,"endColumn":23},{"ruleId":"378","severity":1,"message":"411","line":32,"column":22,"nodeType":"380","messageId":"381","endLine":32,"endColumn":33},{"ruleId":"378","severity":1,"message":"412","line":35,"column":12,"nodeType":"380","messageId":"381","endLine":35,"endColumn":17},{"ruleId":"378","severity":1,"message":"413","line":35,"column":19,"nodeType":"380","messageId":"381","endLine":35,"endColumn":27},{"ruleId":"378","severity":1,"message":"414","line":37,"column":12,"nodeType":"380","messageId":"381","endLine":37,"endColumn":31},{"ruleId":"391","severity":1,"message":"415","line":45,"column":8,"nodeType":"393","endLine":45,"endColumn":13,"suggestions":"416"},{"ruleId":"391","severity":1,"message":"417","line":55,"column":8,"nodeType":"393","endLine":55,"endColumn":10,"suggestions":"418"},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"378","severity":1,"message":"419","line":22,"column":10,"nodeType":"380","messageId":"381","endLine":22,"endColumn":24},{"ruleId":"378","severity":1,"message":"408","line":28,"column":9,"nodeType":"380","messageId":"381","endLine":28,"endColumn":19},{"ruleId":"378","severity":1,"message":"409","line":29,"column":9,"nodeType":"380","messageId":"381","endLine":29,"endColumn":28},{"ruleId":"378","severity":1,"message":"410","line":34,"column":17,"nodeType":"380","messageId":"381","endLine":34,"endColumn":23},{"ruleId":"378","severity":1,"message":"420","line":35,"column":29,"nodeType":"380","messageId":"381","endLine":35,"endColumn":47},{"ruleId":"378","severity":1,"message":"421","line":37,"column":12,"nodeType":"380","messageId":"381","endLine":37,"endColumn":27},{"ruleId":"378","severity":1,"message":"414","line":40,"column":12,"nodeType":"380","messageId":"381","endLine":40,"endColumn":31},{"ruleId":"378","severity":1,"message":"422","line":41,"column":28,"nodeType":"380","messageId":"381","endLine":41,"endColumn":45},{"ruleId":"391","severity":1,"message":"415","line":49,"column":8,"nodeType":"393","endLine":49,"endColumn":13,"suggestions":"423"},{"ruleId":"391","severity":1,"message":"417","line":57,"column":8,"nodeType":"393","endLine":57,"endColumn":10,"suggestions":"424"},{"ruleId":"378","severity":1,"message":"425","line":6,"column":8,"nodeType":"380","messageId":"381","endLine":6,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":102,"column":41,"nodeType":"428","endLine":102,"endColumn":105},{"ruleId":"378","severity":1,"message":"429","line":1,"column":27,"nodeType":"380","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"378","severity":1,"message":"430","line":12,"column":8,"nodeType":"380","messageId":"381","endLine":12,"endColumn":28},{"ruleId":"431","severity":1,"message":"432","line":92,"column":56,"nodeType":"396","messageId":"433","endLine":92,"endColumn":58},{"ruleId":"431","severity":1,"message":"432","line":92,"column":92,"nodeType":"396","messageId":"433","endLine":92,"endColumn":94},{"ruleId":"426","severity":1,"message":"427","line":160,"column":23,"nodeType":"428","endLine":160,"endColumn":87},{"ruleId":"378","severity":1,"message":"434","line":5,"column":8,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"435","line":7,"column":8,"nodeType":"380","messageId":"381","endLine":7,"endColumn":16},{"ruleId":"378","severity":1,"message":"436","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":22},{"ruleId":"378","severity":1,"message":"437","line":36,"column":12,"nodeType":"380","messageId":"381","endLine":36,"endColumn":22},{"ruleId":"426","severity":1,"message":"427","line":101,"column":41,"nodeType":"428","endLine":101,"endColumn":105},{"ruleId":"438","severity":1,"message":"439","line":61,"column":5,"nodeType":"440","messageId":"403","endLine":61,"endColumn":18},{"ruleId":"378","severity":1,"message":"441","line":161,"column":9,"nodeType":"380","messageId":"381","endLine":161,"endColumn":27},{"ruleId":"401","severity":1,"message":"402","line":174,"column":23,"nodeType":"400","messageId":"403","endLine":174,"endColumn":25},{"ruleId":"401","severity":1,"message":"402","line":174,"column":79,"nodeType":"400","messageId":"403","endLine":174,"endColumn":81},{"ruleId":"401","severity":1,"message":"402","line":174,"column":107,"nodeType":"400","messageId":"403","endLine":174,"endColumn":109},{"ruleId":"442","severity":1,"message":"443","line":196,"column":9,"nodeType":"428","endLine":196,"endColumn":88},{"ruleId":"442","severity":1,"message":"443","line":218,"column":13,"nodeType":"428","endLine":218,"endColumn":20},{"ruleId":"378","severity":1,"message":"390","line":52,"column":11,"nodeType":"380","messageId":"381","endLine":52,"endColumn":18},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"378","severity":1,"message":"444","line":8,"column":8,"nodeType":"380","messageId":"381","endLine":8,"endColumn":18},{"ruleId":"378","severity":1,"message":"445","line":3,"column":8,"nodeType":"380","messageId":"381","endLine":3,"endColumn":24},{"ruleId":"378","severity":1,"message":"446","line":22,"column":12,"nodeType":"380","messageId":"381","endLine":22,"endColumn":16},{"ruleId":"378","severity":1,"message":"447","line":22,"column":18,"nodeType":"380","messageId":"381","endLine":22,"endColumn":25},{"ruleId":"378","severity":1,"message":"390","line":23,"column":11,"nodeType":"380","messageId":"381","endLine":23,"endColumn":18},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"378","severity":1,"message":"448","line":9,"column":5,"nodeType":"380","messageId":"381","endLine":9,"endColumn":9},{"ruleId":"378","severity":1,"message":"413","line":13,"column":19,"nodeType":"380","messageId":"381","endLine":13,"endColumn":27},{"ruleId":"378","severity":1,"message":"404","line":1,"column":17,"nodeType":"380","messageId":"381","endLine":1,"endColumn":25},{"ruleId":"378","severity":1,"message":"449","line":3,"column":8,"nodeType":"380","messageId":"381","endLine":3,"endColumn":14},{"ruleId":"378","severity":1,"message":"450","line":5,"column":8,"nodeType":"380","messageId":"381","endLine":5,"endColumn":22},{"ruleId":"378","severity":1,"message":"448","line":10,"column":5,"nodeType":"380","messageId":"381","endLine":10,"endColumn":9},{"ruleId":"378","severity":1,"message":"413","line":33,"column":19,"nodeType":"380","messageId":"381","endLine":33,"endColumn":27},{"ruleId":"391","severity":1,"message":"451","line":37,"column":8,"nodeType":"393","endLine":37,"endColumn":15,"suggestions":"452"},{"ruleId":"378","severity":1,"message":"445","line":3,"column":8,"nodeType":"380","messageId":"381","endLine":3,"endColumn":24},{"ruleId":"378","severity":1,"message":"453","line":11,"column":8,"nodeType":"380","messageId":"381","endLine":11,"endColumn":13},{"ruleId":"378","severity":1,"message":"454","line":12,"column":8,"nodeType":"380","messageId":"381","endLine":12,"endColumn":18},{"ruleId":"378","severity":1,"message":"455","line":13,"column":8,"nodeType":"380","messageId":"381","endLine":13,"endColumn":18},{"ruleId":"378","severity":1,"message":"446","line":50,"column":12,"nodeType":"380","messageId":"381","endLine":50,"endColumn":16},{"ruleId":"378","severity":1,"message":"447","line":50,"column":18,"nodeType":"380","messageId":"381","endLine":50,"endColumn":25},{"ruleId":"378","severity":1,"message":"390","line":51,"column":11,"nodeType":"380","messageId":"381","endLine":51,"endColumn":18},{"ruleId":"378","severity":1,"message":"456","line":52,"column":11,"nodeType":"380","messageId":"381","endLine":52,"endColumn":22},{"ruleId":"378","severity":1,"message":"446","line":66,"column":12,"nodeType":"380","messageId":"381","endLine":66,"endColumn":16},{"ruleId":"378","severity":1,"message":"457","line":68,"column":11,"nodeType":"380","messageId":"381","endLine":68,"endColumn":26},{"ruleId":"378","severity":1,"message":"445","line":3,"column":8,"nodeType":"380","messageId":"381","endLine":3,"endColumn":24},{"ruleId":"378","severity":1,"message":"458","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":18},{"ruleId":"378","severity":1,"message":"459","line":31,"column":7,"nodeType":"380","messageId":"381","endLine":31,"endColumn":21},{"ruleId":"378","severity":1,"message":"446","line":52,"column":12,"nodeType":"380","messageId":"381","endLine":52,"endColumn":16},{"ruleId":"378","severity":1,"message":"447","line":52,"column":18,"nodeType":"380","messageId":"381","endLine":52,"endColumn":25},{"ruleId":"378","severity":1,"message":"390","line":53,"column":11,"nodeType":"380","messageId":"381","endLine":53,"endColumn":18},{"ruleId":"378","severity":1,"message":"456","line":54,"column":11,"nodeType":"380","messageId":"381","endLine":54,"endColumn":22},{"ruleId":"378","severity":1,"message":"460","line":57,"column":11,"nodeType":"380","messageId":"381","endLine":57,"endColumn":25},{"ruleId":"378","severity":1,"message":"461","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":25},{"ruleId":"378","severity":1,"message":"462","line":8,"column":10,"nodeType":"380","messageId":"381","endLine":8,"endColumn":16},{"ruleId":"378","severity":1,"message":"463","line":8,"column":18,"nodeType":"380","messageId":"381","endLine":8,"endColumn":27},{"ruleId":"378","severity":1,"message":"464","line":9,"column":25,"nodeType":"380","messageId":"381","endLine":9,"endColumn":41},{"ruleId":"378","severity":1,"message":"465","line":49,"column":5,"nodeType":"380","messageId":"381","endLine":49,"endColumn":16},{"ruleId":"378","severity":1,"message":"466","line":223,"column":11,"nodeType":"380","messageId":"381","endLine":223,"endColumn":18},{"ruleId":"378","severity":1,"message":"466","line":237,"column":11,"nodeType":"380","messageId":"381","endLine":237,"endColumn":18},{"ruleId":"378","severity":1,"message":"467","line":2,"column":10,"nodeType":"380","messageId":"381","endLine":2,"endColumn":14},{"ruleId":"378","severity":1,"message":"448","line":15,"column":5,"nodeType":"380","messageId":"381","endLine":15,"endColumn":9},{"ruleId":"378","severity":1,"message":"413","line":19,"column":19,"nodeType":"380","messageId":"381","endLine":19,"endColumn":27},{"ruleId":"378","severity":1,"message":"468","line":21,"column":22,"nodeType":"380","messageId":"381","endLine":21,"endColumn":33},{"ruleId":"391","severity":1,"message":"469","line":34,"column":8,"nodeType":"393","endLine":34,"endColumn":15,"suggestions":"470"},{"ruleId":"378","severity":1,"message":"471","line":73,"column":17,"nodeType":"380","messageId":"381","endLine":73,"endColumn":19},{"ruleId":"378","severity":1,"message":"472","line":84,"column":11,"nodeType":"380","messageId":"381","endLine":84,"endColumn":36},{"ruleId":"378","severity":1,"message":"473","line":89,"column":17,"nodeType":"380","messageId":"381","endLine":89,"endColumn":25},{"ruleId":"426","severity":1,"message":"427","line":124,"column":88,"nodeType":"428","endLine":124,"endColumn":169},{"ruleId":"378","severity":1,"message":"462","line":7,"column":10,"nodeType":"380","messageId":"381","endLine":7,"endColumn":16},{"ruleId":"378","severity":1,"message":"463","line":7,"column":18,"nodeType":"380","messageId":"381","endLine":7,"endColumn":27},{"ruleId":"378","severity":1,"message":"464","line":8,"column":25,"nodeType":"380","messageId":"381","endLine":8,"endColumn":41},{"ruleId":"378","severity":1,"message":"474","line":10,"column":9,"nodeType":"380","messageId":"381","endLine":10,"endColumn":24},{"ruleId":"378","severity":1,"message":"475","line":11,"column":9,"nodeType":"380","messageId":"381","endLine":11,"endColumn":23},{"ruleId":"378","severity":1,"message":"476","line":12,"column":9,"nodeType":"380","messageId":"381","endLine":12,"endColumn":24},{"ruleId":"378","severity":1,"message":"477","line":13,"column":9,"nodeType":"380","messageId":"381","endLine":13,"endColumn":24},{"ruleId":"378","severity":1,"message":"429","line":1,"column":27,"nodeType":"380","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"378","severity":1,"message":"478","line":167,"column":25,"nodeType":"380","messageId":"381","endLine":167,"endColumn":39},{"ruleId":"378","severity":1,"message":"479","line":172,"column":37,"nodeType":"380","messageId":"381","endLine":172,"endColumn":63},{"ruleId":"378","severity":1,"message":"480","line":176,"column":36,"nodeType":"380","messageId":"381","endLine":176,"endColumn":61},{"ruleId":"378","severity":1,"message":"437","line":181,"column":12,"nodeType":"380","messageId":"381","endLine":181,"endColumn":22},{"ruleId":"378","severity":1,"message":"429","line":1,"column":26,"nodeType":"380","messageId":"381","endLine":1,"endColumn":35},{"ruleId":"378","severity":1,"message":"478","line":168,"column":23,"nodeType":"380","messageId":"381","endLine":168,"endColumn":37},{"ruleId":"378","severity":1,"message":"479","line":174,"column":35,"nodeType":"380","messageId":"381","endLine":174,"endColumn":61},{"ruleId":"378","severity":1,"message":"480","line":178,"column":34,"nodeType":"380","messageId":"381","endLine":178,"endColumn":59},{"ruleId":"481","severity":1,"message":"482","line":209,"column":26,"nodeType":"483","messageId":"484","endLine":209,"endColumn":42,"fix":"485"},{"ruleId":"378","severity":1,"message":"429","line":1,"column":27,"nodeType":"380","messageId":"381","endLine":1,"endColumn":36},{"ruleId":"378","severity":1,"message":"478","line":167,"column":25,"nodeType":"380","messageId":"381","endLine":167,"endColumn":39},{"ruleId":"378","severity":1,"message":"479","line":172,"column":37,"nodeType":"380","messageId":"381","endLine":172,"endColumn":63},{"ruleId":"378","severity":1,"message":"480","line":176,"column":36,"nodeType":"380","messageId":"381","endLine":176,"endColumn":61},{"ruleId":"378","severity":1,"message":"437","line":181,"column":12,"nodeType":"380","messageId":"381","endLine":181,"endColumn":22},{"ruleId":"378","severity":1,"message":"486","line":35,"column":11,"nodeType":"380","messageId":"381","endLine":35,"endColumn":21},{"ruleId":"378","severity":1,"message":"487","line":39,"column":11,"nodeType":"380","messageId":"381","endLine":39,"endColumn":21},{"ruleId":"378","severity":1,"message":"446","line":55,"column":12,"nodeType":"380","messageId":"381","endLine":55,"endColumn":16},{"ruleId":"378","severity":1,"message":"457","line":57,"column":11,"nodeType":"380","messageId":"381","endLine":57,"endColumn":26},{"ruleId":"391","severity":1,"message":"488","line":72,"column":8,"nodeType":"393","endLine":72,"endColumn":16,"suggestions":"489"},{"ruleId":"378","severity":1,"message":"490","line":75,"column":13,"nodeType":"380","messageId":"381","endLine":75,"endColumn":24},{"ruleId":"378","severity":1,"message":"491","line":62,"column":11,"nodeType":"380","messageId":"381","endLine":62,"endColumn":27},{"ruleId":"378","severity":1,"message":"434","line":5,"column":8,"nodeType":"380","messageId":"381","endLine":5,"endColumn":15},{"ruleId":"378","severity":1,"message":"435","line":7,"column":8,"nodeType":"380","messageId":"381","endLine":7,"endColumn":16},{"ruleId":"378","severity":1,"message":"436","line":9,"column":8,"nodeType":"380","messageId":"381","endLine":9,"endColumn":22},{"ruleId":"438","severity":1,"message":"492","line":19,"column":9,"nodeType":"440","messageId":"403","endLine":19,"endColumn":25},{"ruleId":"378","severity":1,"message":"493","line":61,"column":12,"nodeType":"380","messageId":"381","endLine":61,"endColumn":33},{"ruleId":"378","severity":1,"message":"494","line":62,"column":16,"nodeType":"380","messageId":"381","endLine":62,"endColumn":22},{"ruleId":"391","severity":1,"message":"495","line":70,"column":8,"nodeType":"393","endLine":70,"endColumn":13,"suggestions":"496"},{"ruleId":"378","severity":1,"message":"497","line":78,"column":11,"nodeType":"380","messageId":"381","endLine":78,"endColumn":21},{"ruleId":"378","severity":1,"message":"498","line":81,"column":11,"nodeType":"380","messageId":"381","endLine":81,"endColumn":22},"no-native-reassign",["499"],"no-negated-in-lhs",["500"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Nav' is assigned a value but never used.","'NavIcon' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["501"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'Search' is defined but never used.","'styles' is assigned a value but never used.","'isSubmit' is assigned a value but never used.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'useState' is defined but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["502"],"'setSearchData' is assigned a value but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["503"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["504"],"'getPassedList1' is defined but never used.","'setPurchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.",["505"],["506"],"'ListItemIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'ManualPricingSideBar' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","unexpectedMixedOperator","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","no-dupe-keys","Duplicate key 'font-weight'.","ObjectExpression","'accountInformation' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SearchText' is defined but never used.","'TextareaAutosize' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'resp' is assigned a value but never used.","'Button' is defined but never used.","'LinearProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["507"],"'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'InputLabel' is defined but never used.","'BootstrapInput' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'getTokenSSO' is assigned a value but never used.","'options' is assigned a value but never used.","'Link' is defined but never used.","'setProgress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthTokenSSO1'. Either include it or remove the dependency array.",["508"],"'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['right'] found.","Property","unnecessarilyComputedProperty",{"range":"509","text":"510"},"'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPassOnDetails'. Either include it or remove the dependency array.",["511"],"'apiResponse' is assigned a value but never used.","'handleStepChange' is assigned a value but never used.","Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["512"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"517","fix":"521"},{"desc":"519","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},[5454,5463],"'right'",{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},"Update the dependencies array to be: [props.location.state]",{"range":"531","text":"532"},"Add dependencies array: []",{"range":"533","text":"534"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"535","text":"536"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"537","text":"538"},{"range":"539","text":"536"},{"range":"540","text":"538"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"541","text":"542"},"Update the dependencies array to be: [getAuthTokenSSO1, value]",{"range":"543","text":"544"},"Update the dependencies array to be: [getPassOnDetails, noCall]",{"range":"545","text":"546"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"547","text":"548"},[1874,1929],"[props.location.state]",[1304,1304],", []",[2557,2562],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[2800,2802],"[getInspectionDamageDetails]",[2832,2837],[3070,3072],[2097,2104],"[getVehicleDetails, value]",[2593,2600],"[getAuthTokenSSO1, value]",[2287,2295],"[getPassOnDetails, noCall]",[2803,2808],"[getConditionVehicleDetails, vin]"]