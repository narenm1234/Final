[{"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js":"1","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js":"2","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js":"3","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js":"4","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js":"5","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js":"6","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js":"7","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js":"8","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js":"9","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js":"10","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login2.js":"11","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js":"12","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js":"13","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js":"14","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js":"15","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js":"16","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js":"17","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js":"18","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js":"19","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js":"20","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js":"21","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js":"22","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js":"23","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js":"24","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js":"25","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js":"26","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js":"27","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js":"28","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\TransactionModal.js":"29","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js":"30","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js":"31","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js":"32","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js":"33","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js":"34","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js":"35","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js":"36","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js":"37","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js":"38","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js":"39","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js":"40","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js":"41","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js":"42","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\LoaderPage.js":"43","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js":"44","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js":"45","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\ExclusivityPeriod.js":"46","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js":"47","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js":"48","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js":"49","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js":"50","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js":"51","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js":"52"},{"size":661,"mtime":1631558768443,"results":"53","hashOfConfig":"54"},{"size":319,"mtime":1631558768500,"results":"55","hashOfConfig":"54"},{"size":375,"mtime":1631558768486,"results":"56","hashOfConfig":"54"},{"size":3533,"mtime":1634253657948,"results":"57","hashOfConfig":"54"},{"size":2856,"mtime":1631558768385,"results":"58","hashOfConfig":"54"},{"size":3705,"mtime":1633544391385,"results":"59","hashOfConfig":"54"},{"size":499,"mtime":1631558768479,"results":"60","hashOfConfig":"54"},{"size":699,"mtime":1631558768478,"results":"61","hashOfConfig":"54"},{"size":1682,"mtime":1632855298569,"results":"62","hashOfConfig":"54"},{"size":1899,"mtime":1634695516387,"results":"63","hashOfConfig":"54"},{"size":1433,"mtime":1634695087611,"results":"64","hashOfConfig":"54"},{"size":241,"mtime":1631558768462,"results":"65","hashOfConfig":"54"},{"size":228,"mtime":1631558768465,"results":"66","hashOfConfig":"54"},{"size":236,"mtime":1633316299083,"results":"67","hashOfConfig":"54"},{"size":9776,"mtime":1631558768470,"results":"68","hashOfConfig":"54"},{"size":55182,"mtime":1632249269950,"results":"69","hashOfConfig":"54"},{"size":40413,"mtime":1634852165011,"results":"70","hashOfConfig":"54"},{"size":25453,"mtime":1633030706109,"results":"71","hashOfConfig":"54"},{"size":20586,"mtime":1633030706105,"results":"72","hashOfConfig":"54"},{"size":18260,"mtime":1633544391363,"results":"73","hashOfConfig":"54"},{"size":1443,"mtime":1631671130956,"results":"74","hashOfConfig":"54"},{"size":2270,"mtime":1631558768400,"results":"75","hashOfConfig":"54"},{"size":8545,"mtime":1631558768440,"results":"76","hashOfConfig":"54"},{"size":2591,"mtime":1632855232005,"results":"77","hashOfConfig":"54"},{"size":265,"mtime":1631558768420,"results":"78","hashOfConfig":"54"},{"size":1874,"mtime":1634684298624,"results":"79","hashOfConfig":"54"},{"size":311,"mtime":1631558768469,"results":"80","hashOfConfig":"54"},{"size":327,"mtime":1631558768468,"results":"81","hashOfConfig":"54"},{"size":6846,"mtime":1632249269952,"results":"82","hashOfConfig":"54"},{"size":4773,"mtime":1631558768392,"results":"83","hashOfConfig":"54"},{"size":30350,"mtime":1634853206521,"results":"84","hashOfConfig":"54"},{"size":6007,"mtime":1634667820639,"results":"85","hashOfConfig":"54"},{"size":1464,"mtime":1631558768415,"results":"86","hashOfConfig":"54"},{"size":16310,"mtime":1634684461517,"results":"87","hashOfConfig":"54"},{"size":7672,"mtime":1634684461520,"results":"88","hashOfConfig":"54"},{"size":9668,"mtime":1634684461523,"results":"89","hashOfConfig":"54"},{"size":1321,"mtime":1631558768418,"results":"90","hashOfConfig":"54"},{"size":3296,"mtime":1634684461526,"results":"91","hashOfConfig":"54"},{"size":22507,"mtime":1634780101795,"results":"92","hashOfConfig":"54"},{"size":8491,"mtime":1634322976310,"results":"93","hashOfConfig":"54"},{"size":3134,"mtime":1631558768427,"results":"94","hashOfConfig":"54"},{"size":6487,"mtime":1631558768446,"results":"95","hashOfConfig":"54"},{"size":312,"mtime":1634667908802,"results":"96","hashOfConfig":"54"},{"size":4019,"mtime":1634321086184,"results":"97","hashOfConfig":"54"},{"size":3394,"mtime":1633030706111,"results":"98","hashOfConfig":"54"},{"size":1146,"mtime":1634651038968,"results":"99","hashOfConfig":"54"},{"size":4817,"mtime":1634651038962,"results":"100","hashOfConfig":"54"},{"size":1708,"mtime":1631558768380,"results":"101","hashOfConfig":"54"},{"size":12988,"mtime":1631558768432,"results":"102","hashOfConfig":"54"},{"size":3241,"mtime":1631558768404,"results":"103","hashOfConfig":"54"},{"size":13661,"mtime":1631558768431,"results":"104","hashOfConfig":"54"},{"size":12984,"mtime":1631558768435,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"r2rgdv",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"108"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"108"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"108"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"108"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"108"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"108"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"108"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"249","usedDeprecatedRules":"108"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"108"},"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js",[],["253","254"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js",["255","256","257","258","259"],"import \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport GroundPending from \"./pages/GroundPending/GroundPending\";\r\nimport GroundPending1 from \"./pages/GroundPending/GroundPending1\";\r\nimport GroundPending2 from \"./pages/GroundPending/GroundPending2\";\r\nimport { Grounded, Grounded1, LastChance, Purchased } from \"./pages/Grounded\";\r\nimport \"../src/assets/WebFont/ToyotaType-Book.ttf\";\r\nimport \"../src/sass/main.scss\";\r\nimport VINSearch from \"./pages/GroundPending/VINSearch\";\r\nimport ConditionReport from \"./pages/ConditionReport\";\r\nimport AdminHome from \"./pages/AdminHome\";\r\nimport ConditionReportRequests from \"./pages/ConditionReportRequests\";\r\nimport InventoryRequestsTabs from \"./components/InventoryRequestsTabs\";\r\nimport Login2 from \"./pages/Login2\";\r\nfunction App() {\r\n  const [stateUpdate, setStateUpdate] = useState(1);\r\n  const fireEvents = () => {\r\n    setStateUpdate(stateUpdate + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Router>\r\n          <Header></Header>\r\n          <div>\r\n            <Sidebar stateUpdate={stateUpdate}>\r\n              <Switch>\r\n              <Route\r\n                  path=\"/\"\r\n                  exact\r\n                  exact\r\n                  render={(props) => <GroundPending {...props} fireEvents={fireEvents}\r\n                  />}\r\n                />\r\n                <Route\r\n                  path=\"/home\"\r\n                  exact\r\n                  render={(props) => <Home {...props} />}\r\n                />\r\n                <Route path=\"/adminSearch\" exact component={AdminHome} />\r\n                <Route path=\"/checkinvehicle\" exact component={VINSearch} />\r\n                <Route\r\n                  path=\"/grounded\"\r\n                  exact\r\n                  exact\r\n                  render={(props) => <GroundPending {...props} fireEvents={fireEvents}\r\n                  />}\r\n                />\r\n                <Route path=\"/passed\" exact render={(props) => <GroundPending1 {...props} />} />\r\n                <Route path=\"/purchased\" exact component={GroundPending2} />\r\n                <Route\r\n                  path=\"/grounded/lastchance\"\r\n                  exact\r\n                  component={LastChance}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/adminInventoryRequests\"\r\n                  exact\r\n                  component={InventoryRequestsTabs}\r\n                />\r\n                <Route\r\n                  path=\"/conditionreportRequests\"\r\n                  exact\r\n                  render={(props) => <ConditionReportRequests {...props} />}\r\n                />\r\n                <Route\r\n                  path=\"/conditionreport:vin\"\r\n                  exact\r\n                  render={(props) => <ConditionReport {...props} />}\r\n                />\r\n                <Route\r\n                  path=\"/conditionreport\"\r\n                  exact\r\n                  render={(props) => <ConditionReport {...props} />}\r\n                />\r\n                <Route\r\n                  path=\"/login2\"\r\n                  exact\r\n                  render={(props) => <Login2 {...props} />}\r\n                />\r\n              </Switch>\r\n            </Sidebar>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n      {/* <Router>\r\n        <AppWithRouterAccess />\r\n      </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js",["260","261","262","263"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ManualPricing from './ManualPricing';\r\nimport RRMApproval from './RRMApproval';\r\nimport MileageDisc from './MileageDisc'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3} pt={16}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n}));\r\n\r\nexport default function InventoryRequestsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state && props.location.state.pageName === 'RRMApproval') {\r\n      setValue(1)\r\n    } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\r\n      setValue(0)\r\n    }\r\n    else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\r\n      setValue(2)\r\n    }\r\n  }, [props.location.state && props.location.state.pageName]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className='topBarAdmin'>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className='tabset'>\r\n          <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\r\n          <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\r\n          <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ManualPricing props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RRMApproval props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <MileageDisc props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <h2>No Inspections</h2>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js",["264","265"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n\r\nimport NewSidebar from './NewSideBar'\r\nimport \"./SideBar.scss\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginTop: 52,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    boxShadow: '0px 0px 3px grey',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'space-between',\r\n    fontSize: 18,\r\n    fontWeight: 600\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  closeIcon: {\r\n    border: '1px solid'\r\n  }\r\n\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const { children } = props\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} >\r\n          {open ? <div> Main Menu</div> : ''}\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {open ? <ChevronLeftIcon className={classes.closeIcon} /> : <ChevronRightIcon className={classes.closeIcon} />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {open ? <NewSidebar stateUpdate={props.stateUpdate}></NewSidebar> : \"\"}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Sidebar;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js",["266","267"],"import React from 'react';\r\nimport Search from '../components/Search/Search';\r\nimport VehicleInformation from '../components/VehicleInformation';\r\n\r\n\r\nlet styles = {\r\n  homesearch: {\r\n    'width': '371px',\r\n    'height': '32px',\r\n    'margin': '3px 0 0',\r\n    'padding': '7px 9px 8px 12px',\r\n    'border-radius': '4px',\r\n    'border': 'solid 1px #dddbda',\r\n    'background-color': '#ffffff'\r\n\r\n  },\r\n}\r\nconst Home = () => {\r\n  return (\r\n    <VehicleInformation />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js",["268","269","270"],"import React,{useState,useEffect} from 'react';\r\nimport AdminVehicleSearch from '../components/AdminVehicleSearch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VehicleSearchTabs from '../components/Tabs';\r\nimport NotesSection from '../components/NotesSection';\r\nimport {getInspectionVehicleDetails} from '../service/api';\r\n\r\n\r\nconst AdminHome = (props) => {\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const [isSubmit,setisSubmit] = useState(false);\r\n  const [inspectiondata,setinspectiondata]=useState([])\r\n\r\n  console.log(\"inspectiondata\",inspectiondata)\r\n\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails()\r\n  }, [searchText.length==15])\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(\"JM3KFBDM0K1698372\");\r\n    console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\r\n    setinspectiondata(apiResponse.data)\r\n}\r\n\r\n  const handleSubmitbtn = () =>{\r\n    //setisSubmit(true);\r\n  }\r\n  const handleSearch = (text) => {\r\n    console.log(\"home\",text)\r\n    setSearchText(text);\r\n    if(text.length > 15){\r\n      setisSubmit(true);\r\n    }\r\n    \r\n    //openConditionScreen(text,\"\")\r\n  }\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    // props.history.push(\"/conditionreport\", {\r\n    //   vin: VINumber,\r\n    //   vehicleDetails: vehicle,\r\n    // });\r\n  };\r\n  return (\r\n    (isSubmit) ? (<Grid container><Grid xs={10}><VehicleSearchTabs inspectiondata={inspectiondata} /></Grid><Grid xs={2}><NotesSection /></Grid></Grid>) : (<AdminVehicleSearch fromchildhandleSubmitbtn={handleSubmitbtn} searchdetails={(text) => handleSearch(text)} />)\r\n  );\r\n};\r\n\r\nexport default AdminHome;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js",["271","272"],"import React, { useState } from \"react\";\r\nimport Separator from \"../Separator\";\r\nimport AdminSearchHeader from \"../AdminSearchHeader\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Route , withRouter} from 'react-router-dom';\r\nconst Header = (props) => {\r\n  const [showDealer, setShowDealer] = useState(null);\r\n  const [dealerName, setDealerName] = useState((localStorage.getItem(\"dealerName\")));\r\n  const toggleShowDealer = (event) => {\r\n    setShowDealer(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setShowDealer(null);\r\n  };\r\n  const handleSearch = (SearchText) => {\r\n    console.log(props)\r\n    //props.searchdetails(SearchText);\r\n    openConditionScreen(SearchText,\"\")\r\n  }\r\n  \r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    console.log(props)\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      vehicleDetails: vehicle,\r\n      results:true,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"imageHolder\">\r\n        <img src=\"MFS.png\" alt=\"logo\" width=\"174px\" height=\"33px\" />\r\n        <Separator />\r\n        <div className=\"auctionSales\">Auction Sales Platform </div>\r\n      </div>\r\n      <AdminSearchHeader\r\n        searchdetails={(SearchText) =>{ handleSearch(SearchText)}}\r\n      />\r\n      <div onClick={toggleShowDealer} className=\"dealerName\">\r\n      \r\n        {dealerName?dealerName:'Dealer Name'}\r\n      </div>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={showDealer}\r\n        keepMounted\r\n        open={Boolean(showDealer)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>User Settings</MenuItem>\r\n        <MenuItem onClick={handleClose}>Help</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login2.js",["273","274","275","276"],"import React,{ useState, useEffect } from 'react'\r\nimport { getAccessTokenEndpoint, getUserInfoToken } from '../service/api';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Login2(props) {\r\n\r\n  let data1 = getParameterByName(\"code\");\r\nfunction getParameterByName(name, url = window.location.href) {\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n  const [token, setToken] = useState();\r\n  const [dealerCode, setDealerCode] = useState('');\r\n  useEffect(() => {\r\n    getToken();\r\n    // getUserAccessInfoToken();\r\n  }, {});\r\n  useEffect(() => {\r\n    getUserAccessInfoToken();\r\n  }, [token]);\r\n  async function getToken() {\r\n    let apiResponse = await getAccessTokenEndpoint(data1);\r\n    console.log(\"--->\",apiResponse)\r\n    setToken(apiResponse?.data.access_token);\r\n  }\r\n  async function getUserAccessInfoToken(){\r\n  let resp = await getUserInfoToken(token);\r\n  setDealerCode(resp.data.custom_attributes.dealerCode);\r\n  localStorage.setItem(\"dealerCode\",resp.data.custom_attributes.dealerCode);\r\n  localStorage.setItem(\"dealerName\",resp.data.custom_attributes.dealerName);\r\n  props.history.push('/grounded')\r\n\r\n  console.log(dealerCode);\r\n  }\r\n    return (\r\n        <div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login2\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js",["277"],"import React, { useState } from 'react';\r\nimport ListingPage from './groundedListPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage {...props}></ListingPage>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js",["278"],"import React, { useState } from 'react';\r\nimport ListingPage2 from './purchasedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage2></ListingPage2>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js",["279"],"import React, { useState } from 'react';\r\nimport ListingPage1 from './passedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage1 {...props}></ListingPage1>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js",["280","281","282","283","284"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../../components/SearchText/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport GroundVehicleMFS from \"./GroundVehicleMFS\";\r\nimport GroundVehiclePLV from \"./GroundVehiclePLV\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { getAuthToken, getVehicleDetails } from \"../../service/api\";\r\n\r\nexport default function VINSearch(props) {\r\n  const placeholder = \"Enter last 6 digits of VIN\";\r\n  const [token, setToken] = useState(\"\");\r\n  const [vehicleResponse, setVehicleResponse] = useState({});\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [reasonForReturn, setreasonForReturn] = useState(\r\n    \"Ground_Vehicle_for_MFS\"\r\n  );\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getAuthToken();\r\n    setToken(tokenResponse.data?.access_token);\r\n  });\r\n  async function getVehDetails(value) {\r\n    let apiResponse = await getVehicleDetails(token, value);\r\n    setVehicleResponse(apiResponse.data);\r\n    if (apiResponse.data.vehicleInfo?.length > 0) {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    } else {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    }\r\n  }\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n\r\n    let value = e?.target?.value;\r\n    console.log(value);\r\n    getVehDetails(value);\r\n\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n  const handleReasonChange = (e) => {\r\n    console.log(e.target.value);\r\n    setreasonForReturn(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"grounding\">\r\n        <div className=\"searchLabelHeader\">Vehicle Grounding</div>\r\n        <div className=\"searchLabel\">Begin Vehicle Lease return process</div>\r\n        <Search\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n        {!validSearch && suggestions && (\r\n          <div className=\"noMatchesFrame\">\r\n            <div className=\"noMatches\">VIN not found/Inactive</div>\r\n          </div>\r\n        )}\r\n\r\n        {validSearch && (\r\n          <div>\r\n            <div className=\"carRecordFound\">\r\n              <div className=\"vehicleMakeModel\">\r\n                <span>\r\n                  {vehicleResponse?.vehicleInfo[0]?.brand}\r\n                  {\" & \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.model}\r\n                  {\" | \"}{\" \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.ext_color}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Customer Return date\r\n              </InputLabel>\r\n              <TextField\r\n                id=\"date\"\r\n                type=\"date\"\r\n                defaultValue=\"00/00/0000\"\r\n                className=\"customerReturnDate\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Reason for Return\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Reason for Return\"\r\n                value={reasonForReturn}\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"age\" }}\r\n                className=\"customerReturnDate\"\r\n                onChange={(event) => handleReasonChange(event)}\r\n              >\r\n                <MenuItem value={\"Purchase_Leased_Vehicle\"}>\r\n                  Purchase Leased Vehicle\r\n                </MenuItem>\r\n                <MenuItem value={\"Ground_Vehicle_for_MFS\"}>\r\n                  Ground Vehicle for MFS\r\n                </MenuItem>\r\n                <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\r\n              </Select>\r\n            </div>\r\n            {reasonForReturn === \"Ground_Vehicle_for_MFS\" && (\r\n              <>\r\n                {\" \"}\r\n                <GroundVehicleMFS />\r\n                <div className=\"odometerBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Odometer Reading\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Enter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Renter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"keysReturnedBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Number of Keys Returned\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Master Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Valet Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                </div>\r\n                <div className=\"vehicleCondition\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Vehicle Condition\r\n                  </InputLabel>\r\n                  <div className=\"Rectangle-3\">\r\n                    <FormControlLabel control={<Radio />} label=\"Drivable\" />\r\n                  </div>\r\n                  <div className=\"Rectangle-3\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Not Drivable\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"pickUpLocation\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Pick Up Location\r\n                  </InputLabel>\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 2\"\r\n                    />\r\n                  </div>\r\n                </div>{\" \"}\r\n              </>\r\n            )}\r\n\r\n            {(reasonForReturn === \"Purchase_Leased_Vehicle\" ||\r\n              reasonForReturn === \"Trade_In\") && (\r\n              <>\r\n                <GroundVehiclePLV />\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js",["285","286","287","288","289","290","291","292","293","294"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewDetailedReport from \"./ViewDetailedReport\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  getPassedList1,\r\n  getInspectionDamageDetailsApi,\r\n  getOEMBuildDetailsApi,\r\n} from \"../service/api\";\r\nimport {\r\n  getInspectionVehicleDetails,\r\n  getInspectionAccessoryDetails,\r\n  getInspectionWheelTiresDetails,\r\n} from \"../service/api\";\r\nimport ManualPricingSideBar from \"../components/ManualPricingSideBar\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport TransactionModal from \"./TransactionModal\";\r\n\r\nexport default function ConditionReportRequests(props) {\r\n  let listOfItem = [\r\n    \"VIN\",\r\n    \"Engine\",\r\n    \"Door\",\r\n    \"Body Style\",\r\n    \"Transmission\",\r\n    \"Drive Train\",\r\n    \"Interior type\",\r\n    \"Interior Color\",\r\n    \"Keys\",\r\n    \"Interior Type\",\r\n    \"Odor\",\r\n    \"Grounding Mileage\",\r\n    \"Account Type\",\r\n  ];\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});\r\n  const [accessoryDetails, setAccessoryDetails] = React.useState({});\r\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\r\n  const [vin, setVin] = React.useState(props?.match?.params?.vin);\r\n  const [pageName, setPageName] = React.useState(\r\n    props?.location?.state?.pageName\r\n  );\r\n  const [inspectionId, setInspectionId] = React.useState([]);\r\n  const [VehicleResponse, setVehicleResponse] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const [DamageDetails, setDamageDetails] = useState([]);\r\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n\r\n  // const [openTransactionPopup, setOpenTransactionPopup] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getOEMBuildDetails();\r\n    getConditionVehicleDetails();\r\n    getVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getOEMBuildDetails() {\r\n    let apiResponse = await getOEMBuildDetailsApi(vin);\r\n    setOEMBuildDetailsData(apiResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionDamageDetails();\r\n  }, []);\r\n\r\n  async function getInspectionDamageDetails() {\r\n    let getInspectionDamageDetailsaApiResponse =\r\n      await getInspectionDamageDetailsApi(inspectionId, vin);\r\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\r\n  }\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPassedList1();\r\n    setVehicleResponse(apiResponse.data.data);\r\n    console.log(VehicleResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionAccessory(inspectionId);\r\n    getInspectionWheelTires(inspectionId);\r\n  }, [inspectionId]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n    setInspectionId(apiResponse.data.inspection_id);\r\n  }\r\n\r\n  async function getInspectionAccessory(inspectionId) {\r\n    let apiResponse = await getInspectionAccessoryDetails(inspectionId);\r\n    setAccessoryDetails(apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionWheelTires(inspectionId) {\r\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\r\n    setWheelTiresDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"conditionTopBar\">\r\n        <Box p={1} textAlign=\"right\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/adminInventoryRequests\",\r\n              state: { pageName: pageName },\r\n            }}\r\n          >\r\n            {pageName}\r\n          </Link>\r\n        </Box>\r\n      </div>\r\n      <Box p={2} pt={14}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4}>\r\n            <MyGallery />\r\n            <Grid container className=\"ConditionCardBody\">\r\n              <div className=\"damageTitle\">\r\n                <span>Damage Report</span>\r\n              </div>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Exterior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.exteriorCost\r\n                        ? DamageDetails.exteriorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Interior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.interiorCost\r\n                        ? DamageDetails.interiorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Mechanical total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.maintainenceCost\r\n                        ? DamageDetails.maintainenceCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className=\"detailedReport\"\r\n                  onClick={handleOpen}\r\n                >\r\n                  View Full Detailed Report\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className=\"disclaimer\">\r\n                  Disclaimer: Damage estimates are included for reference and\r\n                  may not be reflective of the actual repair costs\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"LabelTextTextArea\">Announcements</div>\r\n            <TextareaAutosize\r\n              className=\"inputFieldTextArea\"\r\n              aria-label=\"maximum height\"\r\n              placeholder=\"Maximum 4 rows\"\r\n              defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" py={2}>\r\n              <div className=\"reportTitle\">\r\n                <span>MAZDA SD 2019 </span>\r\n              </div>\r\n              <span className=\"ConditionReportInspection\">\r\n                <span className=\"BadgeValue\">Inspection Complete</span>\r\n              </span>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Payoff</div>\r\n                    <div className=\"smallCardBody\">$12,000.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle1\">Residual + Remaining</div>\r\n                    <div className=\"smallCardBody\">$11,250.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Market Based</div>\r\n                    <div className=\"smallCardBody\">$10,500.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.condition_grade}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Odometer</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.inspection_mileage}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={12}>\r\n                <Box mt={2}>\r\n                  <Card>\r\n                    <Box p={2}>\r\n                      <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.inspection_date}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address2}\r\n                              {condionVehicleDetails.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_code}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">9,000 miles</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableBody>\r\n                              <TableRow key=\"10074\">\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {accessoryDetails.item_id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  {accessoryDetails.description}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell align=\"right\">Brand</TableCell>\r\n                                <TableCell align=\"right\">Size</TableCell>\r\n                                <TableCell align=\"right\">Wheel</TableCell>\r\n                                <TableCell align=\"right\">Tread Depth</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {wheelTiresDetails?.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"right\">Description</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  Package Details\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {[\"1\"].map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"> </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Box>\r\n                  </Card>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ManualPricingSideBar />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <ViewDetailedReport\r\n          DamageDetails={DamageDetails}\r\n          open={open}\r\n          close={handleClose}\r\n        />\r\n      </Box>\r\n\r\n      {/* <Box>\r\n        <TransactionModal\r\n        type={'confirm'}\r\n          open={openTransactionPopup}\r\n          onClose={() => {\r\n            setOpenTransactionPopup(false);\r\n          }}\r\n        ></TransactionModal>\r\n      </Box> */}\r\n\r\n\r\n\r\n      {/* <div className='conditionPageCardReports'>\r\n                <Grid item xs={12}>\r\n                    <div className='conditionTopBar'>\r\n                        <Grid xs={12} className='conditionTopBarLayout'>\r\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                    <Grid item xs={5}>\r\n                        <MyGallery />\r\n                        <Grid container className=\"ConditionCardBody\">\r\n                            <div className='damageTitle'>\r\n                                <span>Damage Report</span>\r\n                            </div>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Exterior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.exteriorCost ? DamageDetails.exteriorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Interior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.interiorCost ? DamageDetails.interiorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Mechanical total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.maintainenceCost ? DamageDetails.maintainenceCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\r\n                                    View Full Detailed Report\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <div className=\"disclaimer\">\r\n                                    Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"LabelTextTextArea\">Announcements</div>\r\n                        <TextareaAutosize\r\n                            className=\"inputFieldTextArea\"\r\n                            aria-label=\"maximum height\"\r\n                            placeholder=\"Maximum 4 rows\"\r\n                            defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                        <div className='ConditionReportSection'>\r\n                            <div className='reportTitle'>\r\n                                <span>MAZDA SD 2019 </span>\r\n                            </div>\r\n                            <span className='ConditionReportInspection'>\r\n                                <span className='BadgeValue'>Inspection Complete</span>\r\n                            </span>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Payoff\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $12,000.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\" >\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle1\">\r\n                                            Residual + Remaining\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $11,250.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Market Based\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $10,500.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Inspection Grade\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.condition_grade}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Odometer\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.inspection_mileage}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>\r\n                            <Card className=\"vehicleSectionCR\">\r\n                                <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                                <hr />\r\n                                <CardContent>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  VIN  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{vin}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Date  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.inspection_date}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Location  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span >\r\n                                                    .\r\n                                                </span>\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span > .   </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Consignor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Engine  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Door  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Body Style  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Transmission  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Drive Train  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Exterior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Keys  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Grounding Mileage  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">9,000 miles</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Account Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Odor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n\r\n                                </CardContent>\r\n\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Accessories</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableBody>\r\n                                                <TableRow key=\"10074\">\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {accessoryDetails.item_id}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\r\n                                             \r\n                                                </TableRow>\r\n                                               \r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Location</TableCell>\r\n                                                    <TableCell align=\"right\">Brand</TableCell>\r\n                                                    <TableCell align=\"right\">Size</TableCell>\r\n                                                    <TableCell align=\"right\">Wheel</TableCell>\r\n                                                    <TableCell align=\"right\">Tread Depth</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {wheelTiresDetails?.map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{list.tire_location}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.manufracturer}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.size}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Build Data</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Code</TableCell>\r\n                                                    <TableCell align=\"right\">Description</TableCell>\r\n                                                    <TableCell align=\"right\">Package Details</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {['1'].map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {list}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\"></TableCell>\r\n                                                            <TableCell align=\"right\"> </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n\r\n                                </CardContent>\r\n                                <div className=\"disclaimerVRS\">\r\n                                    Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\r\n                                </div>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\r\n            </div>\r\n            <ManualPricingSideBar /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js",["295","296","297","298","299","300","301","302","303","304","305"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useState ,useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport SwipableFilterRRM from \"./SwipableFilterRRM\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport {RRMList} from \"../service/api\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  auction,\r\n  mmr,\r\n  mmb,\r\n  percent,\r\n  priced_rate,\r\n  priced_by,\r\n  approve\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    auction,\r\n    mmr,\r\n    mmb,\r\n    percent,\r\n    priced_rate,\r\n    priced_by,\r\n    approve,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0000000000000001\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000002\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000003\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000004\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000005\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000006\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000007\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000008\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000009\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000010\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000011\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000012\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000013\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000014\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000015\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000016\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000017\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000018\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000019\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000020\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000021\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000022\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000023\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000024\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000025\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000026\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000027\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000028\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000029\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000030\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000031\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000032\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000033\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000034\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000035\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000036\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000037\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000038\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000039\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000040\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000041\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000042\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000043\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000044\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000045\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000046\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000047\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000048\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000049\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000050\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000051\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000052\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000053\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000054\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000055\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000056\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000057\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000058\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000059\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000060\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000061\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000062\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000063\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000064\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000065\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000066\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000067\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000068\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000069\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000070\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000071\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000072\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n];\r\n\r\nexport default function RRMApproval(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [rrmList, setRrmList] = useState([]);\r\n  const [rrmListRows, setRrmListRows] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n\r\n  useEffect(() => {\r\n    getRRMApprovalDetails();\r\n  }, []);\r\n  async function getRRMApprovalDetails() {\r\n    let apiResponse = await RRMList();\r\n    console.log('RRMList------->', apiResponse)\r\n    setRrmListRows(apiResponse.data);\r\n  }\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"RRMApproval\",\r\n    });\r\n  };\r\n  const onChangePage = (data) => {\r\n    setRrmList(data);\r\n  };\r\n\r\n  const onChangeApprove = (row) => {\r\n    // let updatedRowsPerPage = rrmList.map((item) => {\r\n    //   if (item.vin === row.vin) {\r\n    //     item.approve = !item.approve;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // setRrmList(updatedRowsPerPage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilterRRM />\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Auction\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MMR\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MBP\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    %\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced rate\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced By\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  Approve\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rrmList?.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.vin}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\r\n                  <TableCell align=\"center\">{row.make}</TableCell>\r\n                  <TableCell align=\"center\">{row.model}</TableCell>\r\n                  <TableCell align=\"center\">{row.auction}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmr}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmb}</TableCell>\r\n                  <TableCell align=\"center\">{row.percent}</TableCell>\r\n                  <TableCell align=\"center\">{row.pricedDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.pricedBy}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {/* {row.approve} */}\r\n                   <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={false}\r\n                          onChange={() => onChangeApprove(row)}\r\n                          checkedIcon={<Check className={classes.checkedIcon} />}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n       {rrmListRows.length != 0? <Paginator\r\n          label=\"Result per page\"\r\n          showItemsPerPage={10}\r\n          pages={[10, 20, 30, 40]}\r\n          data={rrmListRows}\r\n          onChangePage={onChangePage}\r\n        /> : null }\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SwipableFilter from \"./SwipableFilter\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { awaitManualPricing } from \"../service/api\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeadFont: {\r\n    fontWeight: 600,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  Grounding_Region,\r\n  Inspection_Date,\r\n  Inspection_Status,\r\n  Action_Code\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    Grounding_Region,\r\n    Inspection_Date,\r\n    Inspection_Status,\r\n    Action_Code,\r\n  };\r\n}\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n];\r\n\r\nexport default function ManualPricing(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [vehicleList, setVehicleList] = useState(rows);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n  const [manualPricingList, setManualPricingList] = useState([]);\r\n  const [manualPricingListRows, setManualPricingListRows] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n\r\n  useEffect(() => {\r\n    getManualPricingDetails();\r\n  }, []);\r\n  async function getManualPricingDetails() {\r\n    let apiResponse = await awaitManualPricing();\r\n    console.log(\"ManualPricing------->\", apiResponse.data);\r\n    setManualPricingListRows(apiResponse.data);\r\n  }\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Manual Pricing\",\r\n    });\r\n  };\r\n\r\n  const fetchDataBasedOnSearchValue = (searchText) => {\r\n    const vehicleListCopy = [...rows];\r\n    if (searchText) {\r\n      const filteredList = vehicleListCopy.filter((row) => {\r\n        return row.VIN.indexOf(searchText) !== -1;\r\n      });\r\n      setVehicleList(filteredList);\r\n    } else {\r\n      setVehicleList(rows);\r\n    }\r\n  };\r\n\r\n  const fetchDataBasedOnFilters = (filterInput) => {\r\n    let vehicleListCopy = [...rows];\r\n    if (filterInput.vin) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.VIN.indexOf(filterInput.vin) !== -1 ||\r\n          (row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo)\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.yearFrom && filterInput.yearTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.make) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Make.indexOf(filterInput.make) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionStatus) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.groundingRegion) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.auctionCode) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        const dateTs = Date.parse(row.Inspection_Date);\r\n        return (\r\n          dateTs >= Date.parse(filterInput.inspectionDateFrom) &&\r\n          dateTs <= Date.parse(filterInput.inspectionDateTo)\r\n        );\r\n      });\r\n    }\r\n    setVehicleList(vehicleListCopy);\r\n  };\r\n\r\n  const resetFilterList = () => {\r\n    setVehicleList(rows);\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    console.log(\"data\", data);\r\n    setManualPricingList(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilter\r\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\r\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\r\n          resetFilterList={resetFilterList}\r\n        />\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Grounding Region\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Date\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Status\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Action Code\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {manualPricingList?.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.vin}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\r\n                  <TableCell align=\"center\">{row.make}</TableCell>\r\n                  <TableCell align=\"center\">{row.model}</TableCell>\r\n                  <TableCell align=\"center\">{row.groundingRegion}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionStatus}</TableCell>\r\n                  <TableCell align=\"center\">{row.actionCode}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {manualPricingListRows.length != 0 ? (\r\n          <Paginator\r\n            label=\"Result per page\"\r\n            showItemsPerPage={10}\r\n            pages={[10, 20, 30, 40]}\r\n            data={manualPricingListRows}\r\n            onChangePage={onChangePage}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SwipableFilterMileage from \"./SwipableFilterMileage\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { getMileageDiscList } from \"../service/api\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\n// function createVehicleData(\r\n//   VIN,\r\n//   Year,\r\n//   Make,\r\n//   Model_Trim,\r\n//   region,\r\n//   ground_mileage,\r\n//   inspection_mileage,\r\n//   difference\r\n// ) {\r\n//   return {\r\n//     VIN,\r\n//     Year,\r\n//     Make,\r\n//     Model_Trim,\r\n//     region,\r\n//     ground_mileage,\r\n//     inspection_mileage,\r\n//     difference,\r\n//   };\r\n// }\r\n\r\n// const rows = [\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n// ];\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function MileageDisc(props) {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n  const [mdList, setMdList] = useState([]);\r\n  const [mdListRows, setMdListRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMdList();\r\n  }, []);\r\n  async function getMdList() {\r\n    let apiResponse = await getMileageDiscList();\r\n    console.log(\"RRMList------->\", apiResponse);\r\n    setMdListRows(apiResponse.data);\r\n  }\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Mileage Discrepencies\",\r\n    });\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    setMdList(data);\r\n  };\r\n  return (\r\n    <>\r\n      <SwipableFilterMileage />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className={classes.tableHeaderRow}>\r\n            <TableRow className={classes.tableHeadFont}>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  VIN\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Year\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Make\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Model/Trim\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Region\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Grounding Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Inspection Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Differnence\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {mdList.map((row) => (\r\n              <TableRow key={row.model} className={classes.tableRow}>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"textStyle\">\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={() => openConditionReport(row.vin)}\r\n                    >\r\n                      {\" \"}\r\n                      {row.vin}\r\n                    </a>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.modelyear}</TableCell>\r\n                <TableCell align=\"center\">{row.make}</TableCell>\r\n                <TableCell align=\"center\">{row.model}</TableCell>\r\n                <TableCell align=\"center\">{row.region}</TableCell>\r\n                <TableCell align=\"center\">{row.inspectionmileage}</TableCell>\r\n                <TableCell align=\"center\">{row.groundingmileage}</TableCell>\r\n                <TableCell align=\"center\">{row.mileagediff}</TableCell>\r\n              </TableRow>\r\n           ))}\r\n          </TableBody>\r\n        </Table>\r\n        {mdListRows.length != 0 ? (\r\n          <Paginator\r\n            label=\"Result per page\"\r\n            showItemsPerPage={10}\r\n            pages={[10, 20, 30, 40]}\r\n            data={mdListRows}\r\n            onChangePage={onChangePage}\r\n          />\r\n        ) : null}\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js",["357","358","359","360"],"import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CustomizedInputBase from './CustomisedInput';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\nimport SearchText from './SearchText/Search';\r\nconst AdminVehicleSearch = (props) => {\r\n\r\n  console.log(\"searchdetails\",props);\r\n\r\n  return (\r\n    <Card className=\"adminSearchCard\">\r\n     \r\n      <CardContent className=\"adminSearcheader\">\r\n      <img\r\n        className=\"cover\"\r\n        src=\"searchCar.jpeg\"\r\n      />\r\n       <div className=\"adminSearcheaderColor\">\r\n     <Typography variant=\"h4\" component=\"h4\">\r\n          Vehicle Search\r\n        </Typography>\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Search for a vehicle, or start with any of the menu items on the left.\r\n        </Typography>\r\n     </div>\r\n      \r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent className=\"adminSearchCardBody\">\r\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\r\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  )\r\n}\r\nexport default AdminVehicleSearch;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js",["361","362","363","364"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\nexport default function NotesSection() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    return (\r\n        <div className=\"notesSection\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                NotesSection\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"notesText\">\r\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                </div>\r\n\r\n            </ListItem>\r\n            <ListItem >\r\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\r\n                    Save\r\n                </Button>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js",["365","366","367","368","369","370","371"],"import React, { useState } from \"react\";\r\nimport Search from \"./Search/Search\";\r\n\r\nlet styles = {\r\n  container: {\r\n    width: \"371px\",\r\n    height: \"270px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n\r\n  VehicleMakeModel: {\r\n    width: \"271px\",\r\n    height: \"24px\",\r\n    margin: \"0 69px 0 0\",\r\n    \"font-family\": \"SalesforceSans\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"bold\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#080707\",\r\n  },\r\n  line: {\r\n    width: \"350px\",\r\n    height: \"2px\",\r\n    margin: \"4px 2px 11px 2px\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n\r\n  label: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  value: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n    \"font-weight\": \"normal\",\r\n  },\r\n\r\n  imagebox: {\r\n    width: \"180px\",\r\n    height: \"160px\",\r\n    margin: \"0px 1px 2px 2px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n  search: {\r\n    width: \"371px\",\r\n    height: \"32px\",\r\n    \"margin-top\": \"10px\",\r\n    padding: \" 0 0 0px\",\r\n    \"border-radius\": \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"flex\",\r\n    \"flex-direction\": \"row\",\r\n  },\r\n  noMatchesFrame: {\r\n    width: \"371px\",\r\n    height: \"76px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"block\",\r\n    margin: \"1% 0 0 40%\",\r\n  },\r\n  noMatches: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  searchSuggestionFrame: {\r\n    width: \"371px\",\r\n    height: \"200px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  searchSuggestion: {\r\n    width: \"350px\",\r\n    height: \"35px\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n  searchLabel: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  imageContainer: {\r\n    width: \"371px\",\r\n    height: \"160px\",\r\n    margin: \"48px 54px 16px\",\r\n    //\"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  imageContainer1: {\r\n    display: \"block\",\r\n    \"margin-left\": \"40%\",\r\n  },\r\n  alighnCenterItems: {\r\n    background: \"#f3f2f2\",\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    right: \"0px\",\r\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  centerSection: {\r\n    marginTop: \"12%\",\r\n  },\r\n};\r\nconst VehicleInformation = (props) => {\r\n  const searchBox = styles.search;\r\n  const placeholder = \"Enter VIN\";\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const accountInformation = props.accountInformation;\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //      //need to filter search data based on the backend data\r\n  //   });\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n    let value = e?.target?.value;\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.alighnCenterItems}>\r\n      <div style={styles.centerSection}>\r\n        <img\r\n          src=\"car.png\"\r\n          width=\"371px\"\r\n          height=\"160px\"\r\n          style={styles.imageContainer1}\r\n        ></img>\r\n      </div>\r\n      <div style={{ marginLeft: \"40%\" }}>\r\n        <div style={styles.searchLabel}>Search Vehicles</div>\r\n        <Search\r\n          searchBox={searchBox}\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n      </div>\r\n      {validSearch && (\r\n        <div style={styles.container}>\r\n          <div style={styles.VehicleMakeModel}>\r\n            {\" \"}\r\n            Vehicle Make & Model Name | Year{\" \"}\r\n          </div>\r\n          <div style={styles.line}></div>\r\n          <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n            <div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Maturity Date </div>{\" \"}\r\n                <div style={styles.value}> 00/00/0000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name</div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Name </div>{\" \"}\r\n                <div style={styles.value}> Lease Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Number </div>{\" \"}\r\n                <div style={styles.value}> 00000000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Ream Payments </div>{\" \"}\r\n                <div style={styles.value}> $000.00 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Color </div>{\" \"}\r\n                <div style={styles.value}> Color Name </div>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.imagebox}>\r\n              <img />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!validSearch && !suggestions && (\r\n        <div style={styles.noMatchesFrame}>\r\n          <div style={styles.noMatches}>No Matches Available</div>\r\n        </div>\r\n      )}\r\n      {suggestions && (\r\n        <div style={styles.searchSuggestionFrame}>\r\n          {searchSuggestions.map((name, index) => (\r\n            <div\r\n              key={index}\r\n              style={styles.searchSuggestion}\r\n              onClick={() => setSearchData(index)}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default VehicleInformation;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js",["372","373"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\r\nimport StatusHistory from './StatusHistory';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                   {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function VehicleSearchTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const{inspectiondata}=props;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className='topBarAdmin'>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" style={{marginLeft:\"35%\"}}>\r\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\r\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\r\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <div className='adminTabsSection'><StatusHistory /></div>\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <div className='adminTabsSection'>Update Mileage/price</div>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js",["374","375","376","377","378"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 300,\r\n        height: 35,\r\n        margin: '7px 8px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: '14px',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function AdminSearchHeader(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n    const handleSearchText = (value) => {\r\n        console.log(props)\r\n        props.searchdetails(value);\r\n        setSearchtext(value)\r\n        \r\n    }\r\n    if(!localStorage.getItem('dealerCode')){\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Global Search by VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => props.searchdetails(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n    }\r\n    else \r\n    return (  \r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js",["379"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehiclePLV\">\r\n      <p>\r\n        Dealer is responsible for paying off the vehicle and customer will not\r\n        recieve any lease-end charges.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js",["380"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehicleMFS\">\r\n      <p>\r\n        By grounding this vehicle, dealer will have multiple purchase options\r\n        and customer will be invoiced asa lease return.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\TransactionModal.js",["381","382","383"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport confirmmark from \"../assets/images/confirm.svg\";\r\nimport Checkmark from \"../assets/images/success.svg\";\r\nimport Crossmark from \"../assets/images/failure.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    width: 400,\r\n    //   padding: theme.spacing(2, 4, 3),\r\n    borderRadius: 5,\r\n  },\r\n  btntext: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n  redText: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nfunction TransactionModal(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.open}>\r\n          <div className={classes.paper}>\r\n            <Box\r\n              display=\"flex\"\r\n              borderBottom={1}\r\n              borderColor={\"grey.500\"}\r\n              id=\"transition-modal-title\"\r\n              alignItems={\"center\"}\r\n            >\r\n              <Box\r\n                borderRight={1}\r\n                borderColor={\"grey.500\"}\r\n                width={70}\r\n                textAlign={\"center\"}\r\n              >\r\n                {props.type === \"confirm\" ? (\r\n                  <img src={confirmmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <img src={Checkmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <img src={Crossmark} width=\"50px\" />\r\n                ) : null}\r\n              </Box>\r\n              <Box width={330} py={1} px={2}>\r\n                {props.type === \"confirm\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Confirm Purchase </Box>\r\n                    <small> Verify your purchase details </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Success! </Box>\r\n                    <small> Vehical purchased </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Transaction Failed </Box>\r\n                    <small className={classes.redText}>\r\n                      {\" \"}\r\n                      Unable to complete payment, Please try again{\" \"}\r\n                    </small>\r\n                  </Box>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n            <Box p={2} id=\"transition-modal-description\">\r\n              <Box component={\"h4\"}>\r\n                2019 Mazda Mazda6 Grand Touring, Machine Gray Metallic\r\n              </Box>\r\n              <small> VIN 000000000000</small>\r\n              <Box p={2} my={2} borderRadius={5} bgcolor={\"#e6e6e6\"}>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    Payoff\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\r\n                </Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    Admin Fee\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor={\"error.main\"} my={1}></Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box fontWeight={\"fontWeightBold\"}>Total</Box>\r\n                  <Box fontWeight={\"fontWeightBold\"}>$00.000.00</Box>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display={\"flex\"} justifyContent={\"space-between\"} px={1}>\r\n                <Box fontWeight={500}>Bank Account</Box>\r\n                <Box fontWeight={500}>City(...00000)</Box>\r\n              </Box>\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  px={1}\r\n                  mt={1}\r\n                >\r\n                  <Box fontWeight={500}>Transaction Number</Box>\r\n                  {props.type === \"success\" ? (\r\n                    <Box fontWeight={500}>00000000000</Box>\r\n                  ) : null}\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box p={1} my={2} borderRadius={5} bgcolor={\"#faffbd\"}>\r\n                  <Box fontSize={12}>\r\n                    Purchanse transaction may be completed, but the funds will\r\n                    be pulled from your bank account in 2-3 days.\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type === \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box mr={2}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      className={classes.btntext}\r\n                      onClick={props.onClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                    >\r\n                      Continue\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n            </Box>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionModal;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js",["384","385","386","387","388","389","390","391"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function ManualPricingSideBar() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"EntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"reEntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js",["392","393","394","395","396","397","398","399","400","401"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js",["402","403","404","405","406","407","408","409","410","411","412","413","414"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  getGroundingList,\r\n  getPassedList,\r\n  getPurchasedList,\r\n} from \"../service/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"0px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n  activeNavLink: {\r\n    background: \"#e7f3fd\",\r\n    borderLeft: \"3px solid #407ed2\",\r\n  },\r\n}));\r\n\r\nlet sidebarItems = [\r\n  {\r\n    label: \"Grounded\",\r\n    open: true,\r\n    childs: [\r\n      {\r\n        label: \"Grounded\",\r\n        link: \"/grounded\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Passed\",\r\n        link: \"/passed\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Purchased\",\r\n        link: \"/purchased\",\r\n        badge: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Admin\",\r\n    open: true,\r\n    childs: [\r\n      {\r\n        label: \"Vehicle Search\",\r\n        link: \"/adminSearch\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Inventory Requests\",\r\n        link: \"/adminInventoryRequests\",\r\n        badge: null,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function NewSidebar(props) {\r\n  const location = useLocation();\r\n  const [list, setList] = React.useState([]);\r\n  const [open, setOpen] = React.useState([]);\r\n  const [activeChild, setActiveChild] = React.useState(location.pathname);\r\n  const classes = useStyles();\r\n\r\n  useEffect(async () => {\r\n    let getGroundingListRes = await getGroundingList();\r\n    let getPassedListRes = await getPassedList();\r\n    let getPurchasedListRes = await getPurchasedList(\"ALL\");\r\n    // setVehicleResponse(apiResponse.data.data);\r\n    // console.log(\"setVehicleResponse::\", getGroundingListRes.data.data);\r\n    // console.log(\"setVehicleResponse::\", getPassedListRes.data.data);\r\n    // console.log(\"setVehicleResponse::\", getPurchasedListRes.data.data);\r\n\r\n    sidebarItems.map((item) => {\r\n      item.childs.map((child) => {\r\n        if (activeChild == child.link) {\r\n          item.open = true;\r\n        }\r\n\r\n        if (child.link == \"/grounded\") {\r\n          if (\r\n            getGroundingListRes &&\r\n            getGroundingListRes.data &&\r\n            getGroundingListRes.data.data.length !== 0\r\n          ) {\r\n            child.badge = getGroundingListRes?.data.data.length;\r\n          } else {\r\n            child.badge = 0;\r\n          }\r\n        }\r\n        if (child.link == \"/passed\") {\r\n          if (\r\n            getPassedListRes &&\r\n            getPassedListRes.data &&\r\n            getPassedListRes.data.data.length !== 0\r\n          ) {\r\n            child.badge = getPassedListRes?.data.data.length;\r\n          } else {\r\n            child.badge = 0;\r\n          }\r\n        }\r\n        if (child.link == \"/purchased\") {\r\n          if (\r\n            getPurchasedListRes &&\r\n            getPurchasedListRes.data &&\r\n            getPurchasedListRes.data.data.length !== 0\r\n          ) {\r\n            child.badge = getPurchasedListRes?.data.data.length;\r\n          } else {\r\n            child.badge = 0;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    if(localStorage.getItem('dealerCode'))\r\n    {\r\n    console.log('dealerCode')\r\n    \r\n    sidebarItems = sidebarItems.filter(row=>row.label != 'Admin')\r\n    }\r\n    setList([...sidebarItems]);\r\n  }, [props.stateUpdate]);\r\n\r\n  const handleClick = (item) => {\r\n    let updatedList = list.map((litem) => {\r\n      if (litem.label === item.label) {\r\n        litem.open ? (litem.open = false) : (litem.open = true);\r\n      }\r\n      return litem;\r\n    });\r\n    setList(updatedList);\r\n  };\r\n\r\n  const handleClickMakeActive = (child) => {\r\n    setActiveChild(child.link);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.sideBarCSS}>\r\n      {list &&\r\n        list.map((item, index) => (\r\n          <List\r\n            key={index}\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n          >\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                handleClick(item);\r\n              }}\r\n            >\r\n              {item.open ? <ExpandLess /> : <ExpandMore />}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n            <Collapse in={item.open} timeout=\"auto\" unmountOnExit>\r\n              <List\r\n                component=\"div\"\r\n                disablePadding\r\n                className={classes.sideBarCSS}\r\n              >\r\n                {item.childs.map((child) => (\r\n                  <ListItem\r\n                    component={Link}\r\n                    to={child.link}\r\n                    key={child.link}\r\n                    className={\r\n                      activeChild == child.link ? classes.activeNavLink : \"\"\r\n                    }\r\n                    onClick={() => {\r\n                      handleClickMakeActive(child);\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={child.label} />\r\n                    {child.badge ? (\r\n                      <Chip className={classes.root} label={child.badge}></Chip>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          </List>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js",["415","416","417","418"],"import React, { useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst Search = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div style={serachBoxEntire}>\r\n      {showSearchLeft && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n      <input\r\n        value={props?.searchValue}\r\n        className=\"searchInput\"\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n        placeholder={placeholder}\r\n      />\r\n      {showSearchRight && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getGroundingList,\r\n  getAuthTokenSSO,\r\n  getAccessTokenEndpoint,\r\n  getUserInfo,\r\n  getImageData,\r\n  // getCarXml,\r\n} from \"../../service/api\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PassOnVehicle from \"../PassOnVehicle\";\r\nimport ExclusivityPeriod from \"./ExclusivityPeriod\";\r\nimport Loaderpage from \"../LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\n// const parseString = require(\"xml2js\").parseString;\r\n\r\nlet resp = [\r\n  // {\r\n  //   account_type: \"LEASE\",\r\n  //   pay_off_amt: 12000,\r\n  //   residual_amt: 11000,\r\n  //   remaining_pmts: 250,\r\n  //   model_year: 19,\r\n  //   brand: \"MAZDA\",\r\n  //   model: \"SD\",\r\n  //   ext_color: \"Color\",\r\n  //   grounding_date: \"2021-08-13T00:00:00\",\r\n  //   odometer_reading: \"9000\",\r\n  //   vin: \"JM3KFBDM0K1698372\",\r\n  // },\r\n  // {\r\n  //   account_type: \"LEASE\",\r\n  //   pay_off_amt: 12500,\r\n  //   residual_amt: 9000,\r\n  //   remaining_pmts: 300,\r\n  //   model_year: 2018,\r\n  //   brand: \"MAZDA\",\r\n  //   model: \"MAZDA3\",\r\n  //   ext_color: \"Black\",\r\n  //   grounding_date: \"2021-05-11T00:00:00\",\r\n  //   odometer_reading: \"12000\",\r\n  //   vin: \"JM3KFADM3K1586305\",\r\n  // },\r\n  // {\r\n  //   account_type: \"LEASE\",\r\n  //   pay_off_amt: 14000,\r\n  //   residual_amt: 11000,\r\n  //   remaining_pmts: 400,\r\n  //   model_year: 2018,\r\n  //   brand: \"MAZDA\",\r\n  //   model: \"MAZDA3\",\r\n  //   ext_color: \"Blue\",\r\n  //   grounding_date: \"2021-05-07T00:00:00\",\r\n  //   odometer_reading: \"8000\",\r\n  //   vin: \"3MZBPBCM4LM125760\",\r\n  // },\r\n  // {\r\n  //   account_type: \"LEASE\",\r\n  //   pay_off_amt: 15000,\r\n  //   residual_amt: 14000,\r\n  //   remaining_pmts: 500,\r\n  //   model_year: 2018,\r\n  //   brand: \"MAZDA\",\r\n  //   model: \"MAZDA3\",\r\n  //   ext_color: \"Blue\",\r\n  //   grounding_date: \"2021-05-08T00:00:00\",\r\n  //   odometer_reading: \"6000\",\r\n  //   vin: \"JM3KFABM2L0748452\",\r\n  // },\r\n];\r\nexport default function ListingPage(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  const [SSOAuth, setSSOAuth] = useState();\r\n  const [value, setValue] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [time, setTime] = React.useState(\"00:00\");\r\n  const [passVin, setPassVin] = React.useState(\"\");\r\n  const [images, setImages] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n    getImages();\r\n  }, [value]);\r\n\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getGroundingList();\r\n    setVehicleResponse(apiResponse.data.data);\r\n    console.log(\"------->\", apiResponse.data);\r\n    setLoader(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAuthTokenSSO1();\r\n  }, [value]);\r\n\r\n  async function getAuthTokenSSO1() {\r\n    let apiResponse = await getAuthTokenSSO();\r\n    setSSOAuth(apiResponse.data.data);\r\n    console.log(\"-------0------>\", SSOAuth);\r\n  }\r\n\r\n  const getImages = async () => {\r\n    let reqObj = {\r\n      inspectionId: 18734078,\r\n      paramForImage: \"Inspection_Front_Page\",\r\n      tenantId: \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n    console.log(\"get image data::\", getimagesRes);\r\n\r\n    getimagesRes &&\r\n      getimagesRes.data &&\r\n      getimagesRes.data.imageDetails.map((item) => {\r\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\r\n      });\r\n    setImages(getimagesRes?.data.imageDetails);\r\n  };\r\n\r\n  // const getImages = async () => {\r\n  //   // let obj = {\r\n  //   //     \"inspectionId\": 0,\r\n  //   //     \"paramForImage\": \"string\",\r\n  //   //     \"tenantId\": \"string\"\r\n  //   //   }\r\n\r\n  //     // let getimagesRes = getImageData(null);\r\n  //     // console.log(\"get image data::\", getimagesRes)\r\n\r\n  //   // let getXmlImages = await getCarXml();\r\n  //   // parseString(getXmlImages.data, (err, body) => {\r\n  //   //   console.log(\"get Xml Images::\", body);\r\n  //   // });\r\n  // };\r\n\r\n  const openConditionReport = (VINumber, vehicle) => {\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      purchaseSection: true,\r\n      vehicleDetails: vehicle,\r\n    });\r\n  };\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      vehicleDetails: vehicle,\r\n    });\r\n  };\r\n  const handleOpen = (vin) => {\r\n    setPassVin(vin);\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  React.useEffect(() => {\r\n    // const timer = setInterval(() => {\r\n    //     setProgress(oldProgress => {\r\n    //         if (oldProgress === 100) {\r\n    //             return 0;\r\n    //         }\r\n    //         return Math.min(oldProgress + 15, 100);\r\n    //     });\r\n    // }, 1000);\r\n    const timer = setInterval(() => {\r\n      var d1 = moment.duration();\r\n      var d2 = d1.clone();\r\n      var x = d1.add(24, \"hours\");\r\n\r\n      let timeremaining = moment.unix(x).format(\"hh:mm\");\r\n      setTime(timeremaining);\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const getEstimagetTimeRemaining = (grounding_date) => {\r\n    setInterval(() => {\r\n      let time = moment(grounding_date).unix();\r\n      let end = moment.duration(1, \"d\");\r\n      var duration = moment.duration(end.diff(time));\r\n      let hours = time.add(end).asHours();\r\n\r\n      let timeremaining = moment.unix(hours).format(\"hh:mm\");\r\n      setTime(timeremaining);\r\n    }, 600);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {vehicleResponse?.length > 0 ? (\r\n        vehicleResponse.map((vehicle, index) => {\r\n          return (\r\n            <div className=\"listingPageCard\" key={index}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={4}>\r\n                  {vehicle.inspection_status === \"Inspection Complete\" ? (\r\n                    <SwipeableTextMobileStepper\r\n                      // vehical={vehicle}\r\n                      images={vehicle.groundingImage}\r\n                    />\r\n                  ) : (\r\n                    <img\r\n                      className=\"pendingImg\"\r\n                      src=\"inspection_pending.png\"\r\n                      alt=\"pending\"\r\n                    />\r\n                  )}\r\n\r\n                  {/* <img\r\n                    className=\"pendingImg\"\r\n                    src=\"inspection_pending.png\"\r\n                    alt=\"pending\"\r\n                  /> */}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className=\"Year-Make-Model-Col\">\r\n                    <div className=\"vehicleMakeModel\">\r\n                      <span>\r\n                        {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                        {vehicle.model_year}\r\n                      </span>\r\n                    </div>\r\n                    <List>\r\n                      {/* <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Exclusivity Period</span>:{\" \"}\r\n                        <span className=\"textStyleWarning\">\r\n                          {time} Remaining\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"progressStyle\">\r\n                        <LinearProgress\r\n                          variant=\"determinate\"\r\n                          value={progress}\r\n                          color=\"secondary\"\r\n                        />\r\n                      </span>  */}\r\n                      <ExclusivityPeriod vehicle={vehicle} />\r\n\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> VIN:</span>\r\n                        <a\r\n                          className=\"vin\"\r\n                          onClick={openConditionScreen.bind(\r\n                            this,\r\n                            vehicle.vin,\r\n                            vehicle\r\n                          )}\r\n                        >\r\n                          {\" \"}\r\n                          {vehicle.vin}\r\n                        </a>\r\n                      </span>\r\n\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Grounding Date:</span>{\" \"}\r\n                        {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\r\n                      </span>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\r\n                        <CurrencyFormat\r\n                          value={vehicle.odometer_reading}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          suffix={\" miles\"}\r\n                        />\r\n                      </span>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\r\n                        <CurrencyFormat\r\n                          value={\r\n                            vehicle.inspection_mileage\r\n                              ? vehicle.inspection_mileage\r\n                              : \"Pending\"\r\n                          }\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          suffix={\"miles\"}\r\n                        />\r\n                      </span>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Account Type: </span>{\" \"}\r\n                        {vehicle.account_type}\r\n                      </span>\r\n                    </List>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <div className=\"Vehicle-Price-Option\">\r\n                    <div className=\"vehicleMakeModel1\">\r\n                      <span>Vehicle Price Options </span>\r\n                    </div>\r\n                    <List>\r\n                      <ListItem className=\"paddingCSS\">\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\"> Payoff </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">\r\n                            <CurrencyFormat\r\n                              value={\r\n                                vehicle.pay_off_amt ? vehicle.pay_off_amt : \"\"\r\n                              }\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          </span>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n\r\n                      <ListItem className=\"paddingCSS\">\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\">\r\n                              {\" \"}\r\n                              Residual + Remaining Payments{\" \"}\r\n                            </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">\r\n                            <CurrencyFormat\r\n                              value={\r\n                                vehicle.residual_amt + vehicle.remaining_pmts\r\n                              }\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          </span>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      <ListItem className=\"paddingCSS\">\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\"> Market </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">\r\n                            <CurrencyFormat\r\n                              value={\r\n                                vehicle.vehicle_price\r\n                                  ? vehicle.vehicle_price\r\n                                  : \"Pending\"\r\n                              }\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          </span>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                      <ListItem className=\"paddingCSS\">\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\">\r\n                              {\" \"}\r\n                              Market + Remaining Payments{\" \"}\r\n                            </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">\r\n                            {/* <CurrencyFormat\r\n                              value={\r\n                                vehicle.remaining_pmts\r\n                                  ? vehicle.remaining_pmts\r\n                                  : \"\"\r\n                              }\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            /> */}\r\n                            Pending\r\n                          </span>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    </List>\r\n                    <div className=\"NavigatorButtons\">\r\n                      <Button\r\n                        className=\"PassonVehicleStyle\"\r\n                        onClick={handleOpen.bind(this, vehicle.vin)}\r\n                      >\r\n                        Pass on vehicle\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"button\"\r\n                        onClick={openConditionReport.bind(\r\n                          this,\r\n                          vehicle.vin,\r\n                          vehicle\r\n                        )}\r\n                      >\r\n                        {\"Purchase Vehicle\"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div>\r\n          {loader ? (\r\n            <Box\r\n              height={\"90vh\"}\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <div>\r\n                <Loaderpage />\r\n                <span className=\"loaderText\">Loading...</span>\r\n              </div>\r\n            </Box>\r\n          ) : (\r\n            <div className=\"listingPageCardNoData\">\r\n              <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\r\n              <span className=\"nodataText\">No Vehicles found</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <PassOnVehicle\r\n        open={open}\r\n        close={handleClose}\r\n        vin={passVin}\r\n        reload={() => {\r\n          getVehicleDetails();\r\n          props.fireEvents();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js",["434","435","436","437","438","439"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getPassedList,\r\n  getImageData,\r\n  getTransportationDetails,\r\n} from \"../../service/api\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport VerticalVehicleStepper from \"../../components/Stepper/VerticalStepper\";\r\nimport Loaderpage from \"../LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    vin: \"JM3KFBDM0K1698372\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\nexport default function ListingPage1(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n  const [images, setImages] = React.useState([]);\r\n  const [transport, setTransport] = useState({});\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n    getImages();\r\n  }, [value]);\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPassedList();\r\n\r\n    getTransportDetails(apiResponse?.data.data);\r\n  }\r\n\r\n  async function getTransportDetails(data) {\r\n    if (data.length !== 0) {\r\n      let vinlistqueryparams = \"\";\r\n      data.forEach((item, index) => {\r\n        if (data.length - 1 === index) {\r\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin;\r\n        } else {\r\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin + \"&\";\r\n        }\r\n      });\r\n\r\n      console.log(\"vinlistqueryparams\", vinlistqueryparams);\r\n\r\n      let apiResponse = await getTransportationDetails(vinlistqueryparams);\r\n      setTransport(apiResponse.data);\r\n      setVehicleResponse(data);\r\n      setLoader(false);\r\n    }\r\n  }\r\n\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      vehicleDetails: vehicle,\r\n    });\r\n  };\r\n\r\n  const getImages = async () => {\r\n    let reqObj = {\r\n      inspectionId: 18734078,\r\n      paramForImage: \"Inspection_Front_Page\",\r\n      tenantId: \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n    console.log(\"get image data::\", getimagesRes);\r\n\r\n    getimagesRes &&\r\n      getimagesRes.data &&\r\n      getimagesRes.data.imageDetails.map((item) => {\r\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\r\n      });\r\n    setImages(getimagesRes.data.imageDetails);\r\n  };\r\n\r\n  return vehicleResponse?.length > 0 ? (\r\n    vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              {vehicle.inspection_mileage > 0 ? (\r\n                <SwipeableTextMobileStepper vehical={vehicle} images={images} />\r\n              ) : (\r\n                <img\r\n                  className=\"pendingImg\"\r\n                  src=\"inspection_pending.png\"\r\n                  alt=\"pending\"\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                    {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                    {vehicle.model_year}\r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={openConditionScreen.bind(\r\n                        this,\r\n                        vehicle.vin,\r\n                        vehicle\r\n                      )}\r\n                    >\r\n                      {\" \"}\r\n                      {vehicle.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Date:</span>{\" \"}\r\n                    {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\r\n                    <CurrencyFormat\r\n                      value={vehicle.odometer_reading}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\"  miles\"}\r\n                    />\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\r\n                    Pending\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Account Type: </span>{\" \"}\r\n                    {vehicle.account_type}\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Vehicle-Price-Option\">\r\n                <VerticalVehicleStepper\r\n                  vin={vehicle.vin}\r\n                  transportData={transport}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <div>\r\n      {loader ? (\r\n        <Box\r\n          height={\"90vh\"}\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <div>\r\n            <Loaderpage />\r\n            <span className=\"loaderText\">Loading...</span>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <div className=\"listingPageCardNoData\">\r\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\r\n          <span className=\"nodataText\">No Vehicles found</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js",["440","441","442","443","444","445","446","447","448"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport {\r\n  getAccessTokenEndpoint,\r\n  getPurchasedList,\r\n  getUserInfoToken,\r\n  getImageData,\r\n} from \"../../service/api\";\r\nimport Loaderpage from \"../LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFBDM0K1698372\",\r\n    },\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFADM3K1586305\",\r\n    },\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    groundingDetails: {\r\n      vin: \"3MZBPBCM4LM125760\",\r\n    },\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFABM2L0748452\",\r\n    },\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\n\r\nexport default function ListingPage2(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n  const [images, setImages] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n    getImages();\r\n  }, [value]);\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPurchasedList(\"ALL\");\r\n    setVehicleResponse(apiResponse?.data.data);\r\n    console.log(vehicleResponse);\r\n    // console.log(apiResponse?.data.data);\r\n    setLoader(false);\r\n  }\r\n\r\n  const getImages = async () => {\r\n    let reqObj = {\r\n      inspectionId: 18734078,\r\n      paramForImage: \"Inspection_Front_Page\",\r\n      tenantId: \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n    console.log(\"get image data::\", getimagesRes);\r\n\r\n    getimagesRes &&\r\n      getimagesRes.data &&\r\n      getimagesRes.data.imageDetails.map((item) => {\r\n        item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\r\n      });\r\n    setImages(getimagesRes.data.imageDetails);\r\n  };\r\n\r\n  return vehicleResponse?.length > 0 ? (\r\n    vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              {/* <SwipeableTextMobileStepper /> */}\r\n              {vehicle.inspection_mileage > 0 ? (\r\n                <SwipeableTextMobileStepper vehical={vehicle} images={images} />\r\n              ) : (\r\n                <img\r\n                  className=\"pendingImg\"\r\n                  src=\"inspection_pending.png\"\r\n                  alt=\"pending\"\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                    {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                    {vehicle.model_year}\r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a className=\"vin\" href={`/conditionreport${vehicle.vin}`}>\r\n                      {\" \"}\r\n                      {vehicle.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Date:</span>{\" \"}\r\n                    {moment(vehicle.purchase_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\r\n                    <CurrencyFormat\r\n                      value={vehicle.odometer_reading}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                    />{\" \"}\r\n                    miles\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\r\n                    Pending\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Type:</span>{\" \"}\r\n                    {vehicle.purchase_type ? vehicle.purchase_type : \"\"}\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Vehicle-Price-Option\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>Vehicle Cost </span>\r\n                </div>\r\n                <List>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Payoff Price </span>{\" \"}\r\n                    <span className=\"margin__space4\">\r\n                      <CurrencyFormat\r\n                        value={\r\n                          vehicle.groundingDetails &&\r\n                          vehicle.groundingDetails.pay_off_amt\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Rem.Payments</span>{\" \"}\r\n                    <span className=\"margin__space5\">\r\n                      <CurrencyFormat\r\n                        value={\r\n                          vehicle.groundingDetails &&\r\n                          vehicle.groundingDetails.remaining_pmts\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Admin Fee</span>{\" \"}\r\n                    <span className=\"margin__space6\">\r\n                      <CurrencyFormat\r\n                        value={vehicle.admin_fee}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                  <div className=\"purchasedScreenTotal\" />\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textStyleTotalFee\"> Total Price</span>{\" \"}\r\n                    <span className=\"totalFeeSum\">\r\n                      <CurrencyFormat\r\n                        value={\r\n                          vehicle.groundingDetails &&\r\n                          vehicle.groundingDetails.pay_off_amt +\r\n                            vehicle.groundingDetails &&\r\n                          vehicle.groundingDetails.remaining_pmts +\r\n                            vehicle.admin_fee\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <div>\r\n      {loader ? (\r\n        <Box\r\n          height={\"90vh\"}\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <div>\r\n            <Loaderpage />\r\n            <span className=\"loaderText\">Loading...</span>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <div className=\"listingPageCardNoData\">\r\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\r\n          <span className=\"nodataText\">No Vehicles found</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js",["449","450","451","452","453","454","455"],"import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst SearchText = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        value={props?.searchValue}\r\n        maxlength=\"18\"\r\n        className=\"searchInput\"\r\n        fullWidth\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <CloseIcon />\r\n      </IconButton>\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchText;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js",["456","457"],"import ImageGallery from \"react-image-gallery\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport { getCarXml, getImageData } from \"../service/api\";\r\nimport Loaderpage from \"./LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\n// const parseString = require(\"xml2js\").parseString;\r\n// const images = [\r\n//   {\r\n//     original: \"car.jpg\",\r\n//     thumbnail: \"car.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car.jpg\",\r\n//     thumbnail: \"car.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n// ];\r\n\r\nexport default function MyGallery(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getImages();\r\n  }, []);\r\n  const getImages = async () => {\r\n    // let getXmlImages = await getCarXml();\r\n    // parseString(getXmlImages.data, (err, body) => {\r\n    //   console.log(\"get Xml Images::\", body[\"ns0:sendVehicle\"][\"ns0:vehicles\"]);\r\n    //   let imageArray = body[\"ns0:sendVehicle\"][\"ns0:vehicles\"];\r\n    //   let imgagesdata = [];\r\n    //   for (let img of imageArray) {\r\n    //     let imgobj = {\r\n    //       original: \"data:image/jpeg;base64,\" + img[\"ns0:image\"][0],\r\n    //       thumbnail: \"data:image/jpeg;base64,\" + img[\"ns0:image\"][0],\r\n    //     };\r\n    //     imgagesdata.push(imgobj);\r\n    //   }\r\n\r\n    //   console.log(\"imgagesdata\", imgagesdata);\r\n    //   setImages(imgagesdata);\r\n    // });\r\n\r\n    let reqObj = {\r\n      inspectionId: 18734078,\r\n      paramForImage: \"ALL\",\r\n      tenantId: \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n\r\n    console.log(\"get image data::\", getimagesRes);\r\n\r\n    setImages(getimagesRes.data.imageDetails);\r\n    let imgagesdata = [];\r\n    for (let img of getimagesRes.data.imageDetails) {\r\n      let imgobj = {\r\n        original: \"data:image/jpeg;base64,\" + img.binImageArray,\r\n        thumbnail: \"data:image/jpeg;base64,\" + img.binImageArray,\r\n      };\r\n      imgagesdata.push(imgobj);\r\n    }\r\n\r\n    console.log(\"imgagesdata\", imgagesdata);\r\n    setImages(imgagesdata);\r\n    setLoader(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {images.length != 0 ? (\r\n        <ImageGallery\r\n          {...props}\r\n          items={images}\r\n          showFullscreenButton={false}\r\n          showPlayButton={false}\r\n          slideOnThumbnailOver={true}\r\n        />\r\n      ) : (\r\n        <div>\r\n          {loader ? (\r\n            <Box\r\n              height={\"350px\"}\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <div>\r\n                <Loaderpage />\r\n                <span className=\"loaderText\">Loading...</span>\r\n              </div>\r\n            </Box>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js",["458","459","460","461","462","463","464"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js",["465","466","467","468","469","470","471","472","473","474"],"import React, { useEffect, useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Box, Select } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { getDealerPaymentsData, getPurchaseDetails } from \"../service/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"96%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\nexport default function PurchasedPricingSideBar(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n\r\n  const [accountName, setAccountName] = React.useState(\"\");\r\n  const [paymentMethods, SetPaymentMethods] = React.useState([]);\r\n  const [accountMaskNumber, setAccountMaskNumber] = React.useState(null);\r\n  const [purchasedData, setPurchasedData] = React.useState({});\r\n\r\n  useEffect(async () => {\r\n    let getDealerPaymentsRes = await getDealerPaymentsData();\r\n    console.log(\"getDealerPaymentsData\", getDealerPaymentsRes);\r\n    getDealerPaymentsRes &&\r\n      getDealerPaymentsRes.data &&\r\n      getDealerPaymentsRes.data.PaymentMethod &&\r\n      SetPaymentMethods(getDealerPaymentsRes.data.PaymentMethod);\r\n\r\n    let getPurchaseDetailsRes = await getPurchaseDetails(props.vin);\r\n    console.log(\"getPurchaseDetailsRes:::\", getPurchaseDetailsRes);\r\n    setPurchasedData(getPurchaseDetailsRes.data.data);\r\n  }, []);\r\n\r\n  const handleChangeAccountName = (event) => {\r\n    setAccountName(event.target.value);\r\n    paymentMethods.forEach((item) => {\r\n      if (item.achAccountName == event.target.value) {\r\n        console.log(item);\r\n        setAccountMaskNumber(item.achAccountNumberMask);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Purchase Page</ListItem>\r\n      <ListItem>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Vehicle pricing options</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"gender1\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"Payoff\" />\r\n              <p> ${purchasedData.payOffAmount} </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value=\"2\"\r\n                control={<Radio />}\r\n                label=\"Residual + Remaining Payments\"\r\n              />\r\n              <p>\r\n                {\" \"}\r\n                $\r\n                {parseInt(parseFloat(purchasedData.remainingPmts).toFixed(2)) +\r\n                  parseInt(\r\n                    parseFloat(purchasedData.residualAmount).toFixed(2)\r\n                  )}{\" \"}\r\n              </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"Market\" />\r\n              <p> ${purchasedData.vehiclePrice} </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value=\"4\"\r\n                control={<Radio />}\r\n                label=\"Market + Remaining Payments \"\r\n              />\r\n              <p>\r\n                {\" \"}\r\n                $\r\n                {parseInt(purchasedData.vehiclePrice) +\r\n                  parseInt(purchasedData.remainingPmts)}{\" \"}\r\n              </p>\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Admin. Fee:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Total Fee:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box>Account Nick Name</Box>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel> */}\r\n            <Select\r\n              style={{ lineHeight: \"2.1em\" }}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={accountName}\r\n              onChange={handleChangeAccountName}\r\n            >\r\n              {/* <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem> */}\r\n              {paymentMethods &&\r\n                paymentMethods.map((opt, index) => (\r\n                  <MenuItem key={index} value={opt.achAccountName}>\r\n                    {opt.achAccountName}\r\n                  </MenuItem>\r\n                ))}\r\n              {/* <MenuItem value={20}>BOFA</MenuItem>\r\n              <MenuItem value={30}>CHASE</MenuItem> */}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box px={1} mb={2}>\r\n            <Box color={\"gray\"}>Dealers bank account number </Box>\r\n            <Box color={\"black\"} p={1} bgcolor={\"lightgray\"} borderRadius={4}>\r\n              {accountMaskNumber || \"****0000\"}\r\n            </Box>\r\n          </Box>\r\n        </ListItemText>\r\n      </ListItem>\r\n\r\n      <List className=\"purchasePassBtn\">\r\n        <Button className=\"passButton\" color=\"primary\">\r\n          Pass on Vehicle\r\n        </Button>\r\n        <Button\r\n          disabled={!accountName || !value}\r\n          className=\"purchaseButton\"\r\n          color=\"secondary\"\r\n          onClick={props.onPurchaseVehical}\r\n        >\r\n          Purchase Vehicle\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js",["475","476","477","478","479","480"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { getInspectionVehicleDetails } from \"../service/api\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AdminDetailedReport(props) {\r\n  let groundingDetails = {\r\n    \"Account Number\": \"00000000000\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Customer Return Date\": \"00/00/2021\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Grounding Dealer Number\": \"00000000000\",\r\n    \"Grounding Dealer Name\": \"Dealer Name\",\r\n    \"Grounding Date\": \"00/00/2021\",\r\n    \"Grounding Mileage\": \"000,000 mi\",\r\n    \"Transportation Order Date\": \"00/00/2021\",\r\n    \"Transportation Company\": \"Company Name\",\r\n    \"Bankruptcy Code\": \"Detail\",\r\n    \"Term Code\": \"Detail\",\r\n    \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\r\n    Type: \"Detail\",\r\n    Residual: \"$00,000.00\",\r\n    \"Current Payoff Amount\": \"$00,000.00\",\r\n    \"Grounding Dealer Auction\": \"Detail\",\r\n    \"Total Outstanding Remaining Payments\": \"00\",\r\n    \"Guaranteed Payments\": \"$00,000.00\",\r\n    \"Payment Guarantee\": \"Yes/No\",\r\n    \"10-Day Rule No Charge Amount\": \"$00,000.00\",\r\n    \"Payoff at Grounding\": \"?????\",\r\n    \"Market Based Price\": \"$00,000.00\",\r\n    \"Remaining Payments at Grounding\": \"$00,000.00\",\r\n  };\r\n  let inspectionDetails = {\r\n    \"Inspection Scheduled Date\": `${moment(\r\n      props?.inspectiondata?.inspection_date\r\n    ).format(\"MM/DD/YYYY\")}`,\r\n    \"Inspection Date\": \"00/00/2021\",\r\n    \"Inspection Status\": \"Detail\",\r\n    \"Inspection Mileage\": \"000,000 mi\",\r\n    \"Master Keys Returned\": \"00\",\r\n    \"Value Keys Returned\": \"00\",\r\n    \"Inspection Type\": \"Detail\",\r\n    \"Excess Wear & Tear Amount\": \"$00,000.00\",\r\n  };\r\n\r\n  let purchaseDetails = {\r\n    \"Sold Date\": \"00/00/2021\",\r\n    \"Purchasing Dealer\": \"Dealer Name\",\r\n    \"Purchase Dealer Number\": \"00000000000\",\r\n    \"Purchase Type\": \"Detail\",\r\n    \"Gross Purchase Amount\": \"$00,000.00\",\r\n    \"Purchasing Dealer Legal Name\": \"Detail\",\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = useState({});\r\n  const [vin, setvin] = useState(\"JM3KFBDM0K1698372\");\r\n\r\n  console.log(\"admndetailedreport props:\", props);\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <div className=\"conditionPageCard\">\r\n      <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n        <Grid item xs={5}>\r\n          <MyGallery />\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <div className=\"ConditionReportSection\">\r\n            <div className=\"reportTitle\">\r\n              <span>Year Make Model Color</span>\r\n            </div>\r\n            <span className=\"ConditionReportInspection\">\r\n              <span className=\"BadgeValue\">Inspection Complete</span>\r\n            </span>\r\n          </div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Card className=\"vehicleSectionCR\">\r\n              <Typography variant=\"h6\">Grounding Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(groundingDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n\r\n              <Typography variant=\"h6\">Inspection Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(inspectionDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <Typography variant=\"h6\">Purchase Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(purchaseDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <div className=\"disclaimerVRS\">\r\n                Disclaimer: The parts, equipment, accessories, and other\r\n                information listed above are based on equipment/configuration at\r\n                the time vehicle was sold by Mazda Motor Corporation to a dealer\r\n                and does not mean that this vehicle is still so equipped.\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\LoaderPage.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js",["481","482","483","484","485","486","487","488","489","490","491"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\n\r\nimport { getImageData } from \"../../service/api\";\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n  {\r\n    imgPath: \"car.png\",\r\n  },\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n    // border: \"solid 1px #dddbda\",\r\n    margin: \"20px\",\r\n    borderRadius: \"4px\",\r\n    // boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: \"block\",\r\n    maxWidth: 400,\r\n    overflow: \"hidden\",\r\n    width: \"80%\",\r\n  },\r\n  card: {\r\n    boxShadow: \"unset !important\",\r\n    // border: \"1px solid gray\",\r\n  },\r\n}));\r\n\r\nconst Item = ({ image_bin_value }) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <img\r\n        className=\"img\"\r\n        src={\"data:image/jpeg;base64,\" + image_bin_value}\r\n        alt={image_bin_value}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nfunction SwipeableTextMobileStepper(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  useEffect(() => {\r\n    console.log(\" props.images\", props.images);\r\n  }, []);\r\n\r\n  //   const handleNext = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  //   };\r\n\r\n  //   const handleBack = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  //   };\r\n\r\n  //   const handleStepChange = (step) => {\r\n  //     setActiveStep(step);\r\n  //   };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Carousel\r\n        navButtonsAlwaysVisible={true}\r\n        autoPlay={false}\r\n        navButtonsProps={{\r\n          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\r\n          style: {\r\n            backgroundColor: \"white\",\r\n            color: \"gray\",\r\n          },\r\n        }}\r\n        // indicatorIconButtonProps={{\r\n        //     style: {\r\n        //         // padding: '10px',    // 1\r\n        //         color: 'l'       // 3\r\n        //     }\r\n        // }}\r\n\r\n        // activeIndicatorIconButtonProps={{\r\n        //     style: {\r\n        //         backgroundColor: 'blue' // 2\r\n        //     }\r\n        // }}\r\n      >\r\n        {props.images &&\r\n          props.images.map((item, i) => <Item key={i} {...item} />)}\r\n      </Carousel>\r\n\r\n      {/* <img className=\"img\" src={tutorialSteps[0].imgPath} alt={tutorialSteps[0].imgPath} /> */}\r\n\r\n      {/* <img className=\"img\" src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n\r\n                    </Button>\r\n                }\r\n            /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js",["492","493","494","495","496","497"],"import React, { useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { postDealerActionPassOnVehicle } from \"../service/api\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function PassOnVehicle(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [noCall, setnoCall] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.close();\r\n  };\r\n\r\n  const handleProceed = () => {\r\n    setOpen(false);\r\n    // setnoCall(true);\r\n    getPassOnDetails();\r\n    props.close();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     getPassOnDetails();\r\n  // }, [noCall]);\r\n\r\n  async function getPassOnDetails() {\r\n    let apiResponse = await postDealerActionPassOnVehicle(props.vin);\r\n    props.reload();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        open={props.open}\r\n      >\r\n        <DialogTitle\r\n          className=\"viewReportHeader\"\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Pass On vehicle\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid xs={12}>\r\n              <div className=\"viewReportCenter\">You have passed on Vehicle</div>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions className=\"reportFooter\">\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleProceed}\r\n            className=\"closePassBtn\"\r\n            color=\"secondary\"\r\n          >\r\n            Proceed\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\ExclusivityPeriod.js",["498","499","500","501"],"import React, { useState, useEffect } from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport moment from \"moment\";\r\n// import {\r\n//   getGroundingList,\r\n//   getAuthTokenSSO,\r\n//   getAccessTokenEndpoint,\r\n//   getUserInfo,\r\n//   getImageData,\r\n//   // getCarXml,\r\n// } from \"../../service/api\";\r\n\r\nexport default function ExclusivityPeriod(props) {\r\n  const [time, setTime] = React.useState(\"00:00\");\r\n  const [progress, setProgress] = React.useState(20);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  //   async function getVehicleDetails() {\r\n  //     let apiResponse = await getGroundingList();\r\n  //     setVehicleResponse(apiResponse.data.data);\r\n  //     console.log(\"------->\", apiResponse.data);\r\n  //   }\r\n\r\n  return (\r\n    <>\r\n      <span className=\"textStyle\">\r\n        <span className=\"textBold\"> Exclusivity Period</span>:{\" \"}\r\n        <span className=\"textStyleWarning\">{time} Remaining</span>\r\n      </span>\r\n      <span className=\"progressStyle\">\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          color=\"secondary\"\r\n        />\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js",["502","503","504","505","506","507","508","509","510","511","512"],"import React,{useEffect} from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Block from '@material-ui/icons/Block';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport {getTransportationDetails} from '../../service/api'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: 'calc(-50% + 16px)',\r\n      right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: '#eaeaf0',\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: '#eaeaf0',\r\n      display: 'flex',\r\n      height: 22,\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      color: '#0091ff',\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: '50%',\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n      //color: '#0091ff',\r\n      color: '#c23934',\r\n      zIndex: 1,\r\n      fontSize: 22,\r\n    },\r\n  });\r\n  \r\n  function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? <Block className={classes.completed} />: <RadioButtonCheckedIcon />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\nfunction getSteps() {\r\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\r\n}\r\nlet transportMetaData = ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\r\nexport default function VerticalVehicleStepper(props) {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(2);\r\n    const steps = getSteps();\r\n\r\n    const [transportDetails, setTransportDetails] = React.useState(props.transportData);\r\n\r\n\r\n    useEffect(() =>{\r\n      setTransportInformation();\r\n    },[props.transportData]);\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const setTransportInformation = () => {\r\n      transportDetails?.data.length > 0 && transportDetails?.data.map(row =>{\r\n        if(row.vin == props.vin){\r\n          transportMetaData.map((trp,index) =>{\r\n             if(trp == row.derivedStatus){\r\n               setActiveStep(index);\r\n             }\r\n          })\r\n        }\r\n      });\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {steps.map((label, index) => {                    \r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                        </Step>\r\n                    )\r\n                }\r\n\r\n                )}\r\n            </Stepper>\r\n            {activeStep === steps.length && (\r\n                <Paper square elevation={0} className={classes.resetContainer}>\r\n                    <Typography>All steps completed - you&apos;re finished</Typography>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                        Reset\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js",["513","514","515"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 550,\r\n        marginRight: '50px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n    console.log(\"searchtext : \",searchtext)\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n        props.searchdetails(searchtext)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search Vehicle By VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => handleSearchText(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js",["516","517","518","519","520"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterMileage() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js",["521","522","523","524","525"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Paginator(props) {\r\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\r\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\r\n  const [totalData, setTotalData] = useState(data);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [skipRecords, setSkipRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNoOfPages(Math.ceil(totalData.length / pageCount));\r\n    onChangePage(totalData.slice(skipRecords, pageCount));\r\n  }, [pageCount]);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    event.preventDefault();\r\n    event.target && event.target.value && setPageCount(event.target.value);\r\n  };\r\n\r\n  const onChangePageNumber = (event, page) => {\r\n    event.preventDefault();\r\n    let skip = (page - 1) * pageCount;\r\n    setSkipRecords(skip);\r\n    onChangePage(totalData.slice(skip, skip + pageCount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        className=\"custompagination\"\r\n      >\r\n        <Box pr={2}> {label} </Box>\r\n        <Box pr={2}>\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"demo-customized-select-label\"\r\n              id=\"demo-customized-select\"\r\n              value={pageCount}\r\n              onChange={handleChangePageCount}\r\n              input={<BootstrapInput />}\r\n            >\r\n              {pages &&\r\n                pages.map((menuitem, index) => (\r\n                  <MenuItem key={index} value={menuitem}>\r\n                    {\" \"}\r\n                    {menuitem}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Pagination\r\n          count={noOfPages}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={onChangePageNumber}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginator;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js",["526","527","528","529","530"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilter(props) {\r\n  const {\r\n    fetchDataBasedOnSearchValue,\r\n    fetchDataBasedOnFilters,\r\n    resetFilterList,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"CX-5\", text: \"CX-5\" },\r\n    { value: \"MX-5\", text: \"MX-5\" },\r\n    { value: \"Mazda3\", text: \"Mazda3\" },\r\n    { value: \"Mazda6\", text: \"Mazda6\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"Pending\", text: \"Pending\" },\r\n    { value: \"Completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"Texas\", text: \"Texas\" },\r\n    { value: \"Florida\", text: \"Florida\" },\r\n    { value: \"Indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const resetFilterInput = () => {\r\n    setFilterInput({\r\n      vin: \"\",\r\n      yearFrom: \"\",\r\n      yearTo: \"\",\r\n      make: \"\",\r\n      inspectionStatus: \"\",\r\n      inspectionDateFrom: \"\",\r\n      inspectionDateTo: \"\",\r\n      groundingRegion: \"\",\r\n      auctionCode: \"\",\r\n    });\r\n    resetFilterList();\r\n    setState({ ...state, [\"right\"]: false });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button\r\n          autoFocus\r\n          className={classes.cancelButton}\r\n          color=\"primary\"\r\n          onClick={() => resetFilterInput()}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={() => fetchDataBasedOnFilters(filterInput)}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          value={searchtext || \"\"}\r\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js",["531","532","533","534","535"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterRRM() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"536","replacedBy":"537"},{"ruleId":"538","replacedBy":"539"},{"ruleId":"540","severity":1,"message":"541","line":10,"column":10,"nodeType":"542","messageId":"543","endLine":10,"endColumn":18},{"ruleId":"540","severity":1,"message":"544","line":10,"column":20,"nodeType":"542","messageId":"543","endLine":10,"endColumn":29},{"ruleId":"540","severity":1,"message":"545","line":10,"column":43,"nodeType":"542","messageId":"543","endLine":10,"endColumn":52},{"ruleId":"546","severity":1,"message":"547","line":36,"column":19,"nodeType":"548","messageId":"549","endLine":36,"endColumn":24},{"ruleId":"546","severity":1,"message":"547","line":50,"column":19,"nodeType":"548","messageId":"549","endLine":50,"endColumn":24},{"ruleId":"540","severity":1,"message":"550","line":7,"column":8,"nodeType":"542","messageId":"543","endLine":7,"endColumn":18},{"ruleId":"540","severity":1,"message":"551","line":53,"column":9,"nodeType":"542","messageId":"543","endLine":53,"endColumn":16},{"ruleId":"552","severity":1,"message":"553","line":65,"column":6,"nodeType":"554","endLine":65,"endColumn":61,"suggestions":"555"},{"ruleId":"552","severity":1,"message":"556","line":65,"column":7,"nodeType":"557","endLine":65,"endColumn":60},{"ruleId":"558","severity":1,"message":"559","line":80,"column":5,"nodeType":"560","messageId":"561","endLine":80,"endColumn":19},{"ruleId":"540","severity":1,"message":"562","line":96,"column":9,"nodeType":"542","messageId":"543","endLine":96,"endColumn":14},{"ruleId":"540","severity":1,"message":"563","line":2,"column":8,"nodeType":"542","messageId":"543","endLine":2,"endColumn":14},{"ruleId":"540","severity":1,"message":"564","line":6,"column":5,"nodeType":"542","messageId":"543","endLine":6,"endColumn":11},{"ruleId":"552","severity":1,"message":"556","line":19,"column":7,"nodeType":"565","endLine":19,"endColumn":28},{"ruleId":"566","severity":1,"message":"567","line":19,"column":24,"nodeType":"565","messageId":"561","endLine":19,"endColumn":26},{"ruleId":"540","severity":1,"message":"568","line":39,"column":9,"nodeType":"542","messageId":"543","endLine":39,"endColumn":28},{"ruleId":"540","severity":1,"message":"569","line":6,"column":10,"nodeType":"542","messageId":"543","endLine":6,"endColumn":15},{"ruleId":"540","severity":1,"message":"570","line":9,"column":22,"nodeType":"542","messageId":"543","endLine":9,"endColumn":35},{"ruleId":"571","severity":1,"message":"572","line":13,"column":25,"nodeType":"573","messageId":"574","endLine":13,"endColumn":26,"suggestions":"575"},{"ruleId":"552","severity":1,"message":"576","line":25,"column":6,"nodeType":"560","endLine":25,"endColumn":8},{"ruleId":"552","severity":1,"message":"577","line":25,"column":6,"nodeType":"560","endLine":25,"endColumn":8,"suggestions":"578"},{"ruleId":"552","severity":1,"message":"579","line":28,"column":6,"nodeType":"554","endLine":28,"endColumn":13,"suggestions":"580"},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"552","severity":1,"message":"582","line":31,"column":3,"nodeType":"542","endLine":31,"endColumn":12,"suggestions":"583"},{"ruleId":"566","severity":1,"message":"567","line":58,"column":21,"nodeType":"565","messageId":"561","endLine":58,"endColumn":23},{"ruleId":"566","severity":1,"message":"567","line":60,"column":33,"nodeType":"565","messageId":"561","endLine":60,"endColumn":35},{"ruleId":"566","severity":1,"message":"567","line":61,"column":27,"nodeType":"565","messageId":"561","endLine":61,"endColumn":29},{"ruleId":"540","severity":1,"message":"584","line":74,"column":9,"nodeType":"542","messageId":"543","endLine":74,"endColumn":22},{"ruleId":"540","severity":1,"message":"585","line":33,"column":8,"nodeType":"542","messageId":"543","endLine":33,"endColumn":24},{"ruleId":"540","severity":1,"message":"586","line":36,"column":7,"nodeType":"542","messageId":"543","endLine":36,"endColumn":17},{"ruleId":"540","severity":1,"message":"587","line":51,"column":7,"nodeType":"542","messageId":"543","endLine":51,"endColumn":26},{"ruleId":"540","severity":1,"message":"588","line":56,"column":15,"nodeType":"542","messageId":"543","endLine":56,"endColumn":21},{"ruleId":"540","severity":1,"message":"589","line":57,"column":20,"nodeType":"542","messageId":"543","endLine":57,"endColumn":31},{"ruleId":"540","severity":1,"message":"590","line":62,"column":10,"nodeType":"542","messageId":"543","endLine":62,"endColumn":15},{"ruleId":"540","severity":1,"message":"591","line":62,"column":17,"nodeType":"542","messageId":"543","endLine":62,"endColumn":25},{"ruleId":"540","severity":1,"message":"592","line":64,"column":10,"nodeType":"542","messageId":"543","endLine":64,"endColumn":29},{"ruleId":"552","severity":1,"message":"593","line":72,"column":6,"nodeType":"554","endLine":72,"endColumn":11,"suggestions":"594"},{"ruleId":"552","severity":1,"message":"595","line":81,"column":6,"nodeType":"554","endLine":81,"endColumn":8,"suggestions":"596"},{"ruleId":"540","severity":1,"message":"597","line":20,"column":8,"nodeType":"542","messageId":"543","endLine":20,"endColumn":18},{"ruleId":"540","severity":1,"message":"598","line":23,"column":3,"nodeType":"542","messageId":"543","endLine":23,"endColumn":17},{"ruleId":"540","severity":1,"message":"586","line":39,"column":7,"nodeType":"542","messageId":"543","endLine":39,"endColumn":17},{"ruleId":"540","severity":1,"message":"587","line":55,"column":7,"nodeType":"542","messageId":"543","endLine":55,"endColumn":26},{"ruleId":"540","severity":1,"message":"588","line":60,"column":15,"nodeType":"542","messageId":"543","endLine":60,"endColumn":21},{"ruleId":"540","severity":1,"message":"599","line":61,"column":27,"nodeType":"542","messageId":"543","endLine":61,"endColumn":45},{"ruleId":"540","severity":1,"message":"600","line":65,"column":10,"nodeType":"542","messageId":"543","endLine":65,"endColumn":25},{"ruleId":"540","severity":1,"message":"592","line":68,"column":10,"nodeType":"542","messageId":"543","endLine":68,"endColumn":29},{"ruleId":"540","severity":1,"message":"601","line":69,"column":26,"nodeType":"542","messageId":"543","endLine":69,"endColumn":43},{"ruleId":"552","severity":1,"message":"593","line":80,"column":6,"nodeType":"554","endLine":80,"endColumn":11,"suggestions":"602"},{"ruleId":"552","severity":1,"message":"595","line":100,"column":6,"nodeType":"554","endLine":100,"endColumn":20,"suggestions":"603"},{"ruleId":"540","severity":1,"message":"604","line":66,"column":7,"nodeType":"542","messageId":"543","endLine":66,"endColumn":11},{"ruleId":"540","severity":1,"message":"605","line":1007,"column":10,"nodeType":"542","messageId":"543","endLine":1007,"endColumn":14},{"ruleId":"540","severity":1,"message":"606","line":1007,"column":16,"nodeType":"542","messageId":"543","endLine":1007,"endColumn":23},{"ruleId":"540","severity":1,"message":"607","line":1008,"column":10,"nodeType":"542","messageId":"543","endLine":1008,"endColumn":21},{"ruleId":"540","severity":1,"message":"608","line":1008,"column":23,"nodeType":"542","messageId":"543","endLine":1008,"endColumn":37},{"ruleId":"609","severity":1,"message":"610","line":1067,"column":23,"nodeType":"611","endLine":1067,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1079,"column":23,"nodeType":"611","endLine":1079,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1091,"column":23,"nodeType":"611","endLine":1091,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1103,"column":23,"nodeType":"611","endLine":1103,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1115,"column":23,"nodeType":"611","endLine":1115,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1127,"column":23,"nodeType":"611","endLine":1127,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1139,"column":23,"nodeType":"611","endLine":1139,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1151,"column":23,"nodeType":"611","endLine":1151,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1163,"column":23,"nodeType":"611","endLine":1163,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":1175,"column":23,"nodeType":"611","endLine":1175,"endColumn":71},{"ruleId":"612","severity":1,"message":"613","line":1191,"column":23,"nodeType":"611","endLine":1194,"endColumn":24},{"ruleId":"566","severity":1,"message":"614","line":1227,"column":28,"nodeType":"565","messageId":"561","endLine":1227,"endColumn":30},{"ruleId":"540","severity":1,"message":"605","line":693,"column":10,"nodeType":"542","messageId":"543","endLine":693,"endColumn":14},{"ruleId":"540","severity":1,"message":"607","line":694,"column":10,"nodeType":"542","messageId":"543","endLine":694,"endColumn":21},{"ruleId":"540","severity":1,"message":"608","line":694,"column":23,"nodeType":"542","messageId":"543","endLine":694,"endColumn":37},{"ruleId":"540","severity":1,"message":"615","line":695,"column":10,"nodeType":"542","messageId":"543","endLine":695,"endColumn":21},{"ruleId":"540","severity":1,"message":"616","line":696,"column":10,"nodeType":"542","messageId":"543","endLine":696,"endColumn":19},{"ruleId":"540","severity":1,"message":"617","line":721,"column":9,"nodeType":"542","messageId":"543","endLine":721,"endColumn":30},{"ruleId":"540","severity":1,"message":"618","line":724,"column":9,"nodeType":"542","messageId":"543","endLine":724,"endColumn":25},{"ruleId":"609","severity":1,"message":"610","line":826,"column":23,"nodeType":"611","endLine":826,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":838,"column":23,"nodeType":"611","endLine":838,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":850,"column":23,"nodeType":"611","endLine":850,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":862,"column":23,"nodeType":"611","endLine":862,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":874,"column":23,"nodeType":"611","endLine":874,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":886,"column":23,"nodeType":"611","endLine":886,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":898,"column":23,"nodeType":"611","endLine":898,"endColumn":71},{"ruleId":"609","severity":1,"message":"610","line":910,"column":23,"nodeType":"611","endLine":910,"endColumn":71},{"ruleId":"612","severity":1,"message":"613","line":923,"column":23,"nodeType":"611","endLine":926,"endColumn":24},{"ruleId":"566","severity":1,"message":"614","line":944,"column":39,"nodeType":"565","messageId":"561","endLine":944,"endColumn":41},{"ruleId":"540","severity":1,"message":"619","line":541,"column":7,"nodeType":"542","messageId":"543","endLine":541,"endColumn":21},{"ruleId":"540","severity":1,"message":"605","line":579,"column":10,"nodeType":"542","messageId":"543","endLine":579,"endColumn":14},{"ruleId":"540","severity":1,"message":"606","line":579,"column":16,"nodeType":"542","messageId":"543","endLine":579,"endColumn":23},{"ruleId":"540","severity":1,"message":"607","line":580,"column":10,"nodeType":"542","messageId":"543","endLine":580,"endColumn":21},{"ruleId":"540","severity":1,"message":"608","line":580,"column":23,"nodeType":"542","messageId":"543","endLine":580,"endColumn":37},{"ruleId":"540","severity":1,"message":"616","line":581,"column":10,"nodeType":"542","messageId":"543","endLine":581,"endColumn":19},{"ruleId":"540","severity":1,"message":"617","line":593,"column":9,"nodeType":"542","messageId":"543","endLine":593,"endColumn":30},{"ruleId":"609","severity":1,"message":"610","line":620,"column":21,"nodeType":"611","endLine":620,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":632,"column":21,"nodeType":"611","endLine":632,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":644,"column":21,"nodeType":"611","endLine":644,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":656,"column":21,"nodeType":"611","endLine":656,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":668,"column":21,"nodeType":"611","endLine":668,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":680,"column":21,"nodeType":"611","endLine":680,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":692,"column":21,"nodeType":"611","endLine":692,"endColumn":69},{"ruleId":"609","severity":1,"message":"610","line":704,"column":21,"nodeType":"611","endLine":704,"endColumn":69},{"ruleId":"612","severity":1,"message":"613","line":717,"column":21,"nodeType":"611","endLine":720,"endColumn":22},{"ruleId":"566","severity":1,"message":"614","line":737,"column":28,"nodeType":"565","messageId":"561","endLine":737,"endColumn":30},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"620","line":5,"column":8,"nodeType":"542","messageId":"543","endLine":5,"endColumn":17},{"ruleId":"540","severity":1,"message":"621","line":9,"column":8,"nodeType":"542","messageId":"543","endLine":9,"endColumn":18},{"ruleId":"609","severity":1,"message":"610","line":18,"column":7,"nodeType":"611","endLine":21,"endColumn":9},{"ruleId":"540","severity":1,"message":"622","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":24},{"ruleId":"540","severity":1,"message":"623","line":22,"column":12,"nodeType":"542","messageId":"543","endLine":22,"endColumn":16},{"ruleId":"540","severity":1,"message":"624","line":22,"column":18,"nodeType":"542","messageId":"543","endLine":22,"endColumn":25},{"ruleId":"540","severity":1,"message":"551","line":23,"column":11,"nodeType":"542","messageId":"543","endLine":23,"endColumn":18},{"ruleId":"558","severity":1,"message":"625","line":60,"column":5,"nodeType":"560","messageId":"561","endLine":60,"endColumn":18},{"ruleId":"540","severity":1,"message":"626","line":157,"column":9,"nodeType":"542","messageId":"543","endLine":157,"endColumn":27},{"ruleId":"566","severity":1,"message":"567","line":177,"column":21,"nodeType":"565","messageId":"561","endLine":177,"endColumn":23},{"ruleId":"566","severity":1,"message":"567","line":179,"column":33,"nodeType":"565","messageId":"561","endLine":179,"endColumn":35},{"ruleId":"566","severity":1,"message":"567","line":180,"column":27,"nodeType":"565","messageId":"561","endLine":180,"endColumn":29},{"ruleId":"609","severity":1,"message":"610","line":202,"column":9,"nodeType":"611","endLine":207,"endColumn":10},{"ruleId":"609","severity":1,"message":"610","line":267,"column":15,"nodeType":"611","endLine":267,"endColumn":22},{"ruleId":"540","severity":1,"message":"550","line":7,"column":8,"nodeType":"542","messageId":"543","endLine":7,"endColumn":18},{"ruleId":"540","severity":1,"message":"551","line":52,"column":11,"nodeType":"542","messageId":"543","endLine":52,"endColumn":18},{"ruleId":"540","severity":1,"message":"627","line":5,"column":8,"nodeType":"542","messageId":"543","endLine":5,"endColumn":15},{"ruleId":"540","severity":1,"message":"628","line":7,"column":8,"nodeType":"542","messageId":"543","endLine":7,"endColumn":16},{"ruleId":"540","severity":1,"message":"629","line":9,"column":8,"nodeType":"542","messageId":"543","endLine":9,"endColumn":22},{"ruleId":"540","severity":1,"message":"630","line":36,"column":12,"nodeType":"542","messageId":"543","endLine":36,"endColumn":22},{"ruleId":"540","severity":1,"message":"631","line":38,"column":11,"nodeType":"542","messageId":"543","endLine":38,"endColumn":27},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"609","severity":1,"message":"610","line":66,"column":19,"nodeType":"611","endLine":66,"endColumn":57},{"ruleId":"609","severity":1,"message":"610","line":69,"column":19,"nodeType":"611","endLine":69,"endColumn":55},{"ruleId":"609","severity":1,"message":"610","line":72,"column":19,"nodeType":"611","endLine":72,"endColumn":55},{"ruleId":"540","severity":1,"message":"622","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":24},{"ruleId":"540","severity":1,"message":"632","line":11,"column":8,"nodeType":"542","messageId":"543","endLine":11,"endColumn":13},{"ruleId":"540","severity":1,"message":"633","line":12,"column":8,"nodeType":"542","messageId":"543","endLine":12,"endColumn":18},{"ruleId":"540","severity":1,"message":"634","line":13,"column":8,"nodeType":"542","messageId":"543","endLine":13,"endColumn":18},{"ruleId":"540","severity":1,"message":"623","line":52,"column":10,"nodeType":"542","messageId":"543","endLine":52,"endColumn":14},{"ruleId":"540","severity":1,"message":"624","line":52,"column":16,"nodeType":"542","messageId":"543","endLine":52,"endColumn":23},{"ruleId":"540","severity":1,"message":"551","line":53,"column":9,"nodeType":"542","messageId":"543","endLine":53,"endColumn":16},{"ruleId":"540","severity":1,"message":"635","line":54,"column":9,"nodeType":"542","messageId":"543","endLine":54,"endColumn":20},{"ruleId":"540","severity":1,"message":"623","line":195,"column":12,"nodeType":"542","messageId":"543","endLine":195,"endColumn":16},{"ruleId":"540","severity":1,"message":"587","line":201,"column":9,"nodeType":"542","messageId":"543","endLine":201,"endColumn":28},{"ruleId":"540","severity":1,"message":"636","line":202,"column":11,"nodeType":"542","messageId":"543","endLine":202,"endColumn":26},{"ruleId":"637","severity":1,"message":"638","line":219,"column":47,"nodeType":"639","messageId":"640","endLine":219,"endColumn":49},{"ruleId":"566","severity":1,"message":"567","line":220,"column":32,"nodeType":"565","messageId":"561","endLine":220,"endColumn":34},{"ruleId":"566","severity":1,"message":"567","line":222,"column":39,"nodeType":"565","messageId":"561","endLine":222,"endColumn":41},{"ruleId":"566","severity":1,"message":"567","line":224,"column":39,"nodeType":"565","messageId":"561","endLine":224,"endColumn":41},{"ruleId":"566","severity":1,"message":"567","line":366,"column":157,"nodeType":"565","messageId":"561","endLine":366,"endColumn":159},{"ruleId":"566","severity":1,"message":"567","line":411,"column":156,"nodeType":"565","messageId":"561","endLine":411,"endColumn":158},{"ruleId":"566","severity":1,"message":"567","line":446,"column":155,"nodeType":"565","messageId":"561","endLine":446,"endColumn":157},{"ruleId":"540","severity":1,"message":"641","line":6,"column":8,"nodeType":"542","messageId":"543","endLine":6,"endColumn":20},{"ruleId":"540","severity":1,"message":"623","line":84,"column":10,"nodeType":"542","messageId":"543","endLine":84,"endColumn":14},{"ruleId":"540","severity":1,"message":"624","line":84,"column":16,"nodeType":"542","messageId":"543","endLine":84,"endColumn":23},{"ruleId":"552","severity":1,"message":"642","line":88,"column":13,"nodeType":"639","endLine":145,"endColumn":4},{"ruleId":"637","severity":1,"message":"638","line":97,"column":29,"nodeType":"639","messageId":"640","endLine":97,"endColumn":31},{"ruleId":"637","severity":1,"message":"638","line":98,"column":31,"nodeType":"639","messageId":"640","endLine":98,"endColumn":33},{"ruleId":"566","severity":1,"message":"567","line":99,"column":25,"nodeType":"565","messageId":"561","endLine":99,"endColumn":27},{"ruleId":"566","severity":1,"message":"567","line":103,"column":24,"nodeType":"565","messageId":"561","endLine":103,"endColumn":26},{"ruleId":"566","severity":1,"message":"567","line":114,"column":24,"nodeType":"565","messageId":"561","endLine":114,"endColumn":26},{"ruleId":"566","severity":1,"message":"567","line":125,"column":24,"nodeType":"565","messageId":"561","endLine":125,"endColumn":26},{"ruleId":"566","severity":1,"message":"614","line":142,"column":55,"nodeType":"565","messageId":"561","endLine":142,"endColumn":57},{"ruleId":"552","severity":1,"message":"643","line":145,"column":6,"nodeType":"554","endLine":145,"endColumn":25,"suggestions":"644"},{"ruleId":"566","severity":1,"message":"567","line":191,"column":35,"nodeType":"565","messageId":"561","endLine":191,"endColumn":37},{"ruleId":"540","severity":1,"message":"645","line":2,"column":10,"nodeType":"542","messageId":"543","endLine":2,"endColumn":25},{"ruleId":"540","severity":1,"message":"646","line":5,"column":10,"nodeType":"542","messageId":"543","endLine":5,"endColumn":16},{"ruleId":"540","severity":1,"message":"647","line":5,"column":18,"nodeType":"542","messageId":"543","endLine":5,"endColumn":27},{"ruleId":"540","severity":1,"message":"648","line":6,"column":25,"nodeType":"542","messageId":"543","endLine":6,"endColumn":41},{"ruleId":"540","severity":1,"message":"649","line":2,"column":10,"nodeType":"542","messageId":"543","endLine":2,"endColumn":14},{"ruleId":"540","severity":1,"message":"650","line":6,"column":8,"nodeType":"542","messageId":"543","endLine":6,"endColumn":22},{"ruleId":"540","severity":1,"message":"651","line":12,"column":3,"nodeType":"542","messageId":"543","endLine":12,"endColumn":25},{"ruleId":"540","severity":1,"message":"652","line":13,"column":3,"nodeType":"542","messageId":"543","endLine":13,"endColumn":14},{"ruleId":"540","severity":1,"message":"653","line":27,"column":5,"nodeType":"542","messageId":"543","endLine":27,"endColumn":9},{"ruleId":"540","severity":1,"message":"591","line":84,"column":17,"nodeType":"542","messageId":"543","endLine":84,"endColumn":25},{"ruleId":"540","severity":1,"message":"654","line":86,"column":10,"nodeType":"542","messageId":"543","endLine":86,"endColumn":14},{"ruleId":"540","severity":1,"message":"655","line":88,"column":10,"nodeType":"542","messageId":"543","endLine":88,"endColumn":16},{"ruleId":"552","severity":1,"message":"656","line":105,"column":6,"nodeType":"554","endLine":105,"endColumn":13,"suggestions":"657"},{"ruleId":"637","severity":1,"message":"638","line":124,"column":49,"nodeType":"639","messageId":"640","endLine":124,"endColumn":51},{"ruleId":"540","severity":1,"message":"658","line":177,"column":11,"nodeType":"542","messageId":"543","endLine":177,"endColumn":13},{"ruleId":"540","severity":1,"message":"659","line":188,"column":9,"nodeType":"542","messageId":"543","endLine":188,"endColumn":34},{"ruleId":"540","severity":1,"message":"660","line":192,"column":11,"nodeType":"542","messageId":"543","endLine":192,"endColumn":19},{"ruleId":"612","severity":1,"message":"613","line":253,"column":25,"nodeType":"611","endLine":260,"endColumn":26},{"ruleId":"609","severity":1,"message":"610","line":436,"column":15,"nodeType":"611","endLine":436,"endColumn":69},{"ruleId":"540","severity":1,"message":"653","line":15,"column":5,"nodeType":"542","messageId":"543","endLine":15,"endColumn":9},{"ruleId":"540","severity":1,"message":"591","line":72,"column":17,"nodeType":"542","messageId":"543","endLine":72,"endColumn":25},{"ruleId":"552","severity":1,"message":"661","line":80,"column":6,"nodeType":"554","endLine":80,"endColumn":13,"suggestions":"662"},{"ruleId":"637","severity":1,"message":"638","line":125,"column":49,"nodeType":"639","messageId":"640","endLine":125,"endColumn":51},{"ruleId":"612","severity":1,"message":"613","line":165,"column":21,"nodeType":"611","endLine":172,"endColumn":22},{"ruleId":"609","severity":1,"message":"610","line":230,"column":11,"nodeType":"611","endLine":230,"endColumn":65},{"ruleId":"540","severity":1,"message":"663","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":14},{"ruleId":"540","severity":1,"message":"650","line":5,"column":8,"nodeType":"542","messageId":"543","endLine":5,"endColumn":22},{"ruleId":"540","severity":1,"message":"651","line":10,"column":3,"nodeType":"542","messageId":"543","endLine":10,"endColumn":25},{"ruleId":"540","severity":1,"message":"664","line":12,"column":3,"nodeType":"542","messageId":"543","endLine":12,"endColumn":19},{"ruleId":"540","severity":1,"message":"653","line":18,"column":5,"nodeType":"542","messageId":"543","endLine":18,"endColumn":9},{"ruleId":"540","severity":1,"message":"591","line":87,"column":17,"nodeType":"542","messageId":"543","endLine":87,"endColumn":25},{"ruleId":"552","severity":1,"message":"661","line":94,"column":6,"nodeType":"554","endLine":94,"endColumn":13,"suggestions":"665"},{"ruleId":"637","severity":1,"message":"638","line":114,"column":49,"nodeType":"639","messageId":"640","endLine":114,"endColumn":51},{"ruleId":"609","severity":1,"message":"610","line":271,"column":11,"nodeType":"611","endLine":271,"endColumn":65},{"ruleId":"540","severity":1,"message":"646","line":7,"column":10,"nodeType":"542","messageId":"543","endLine":7,"endColumn":16},{"ruleId":"540","severity":1,"message":"647","line":7,"column":18,"nodeType":"542","messageId":"543","endLine":7,"endColumn":27},{"ruleId":"540","severity":1,"message":"648","line":8,"column":25,"nodeType":"542","messageId":"543","endLine":8,"endColumn":41},{"ruleId":"540","severity":1,"message":"666","line":10,"column":9,"nodeType":"542","messageId":"543","endLine":10,"endColumn":24},{"ruleId":"540","severity":1,"message":"667","line":11,"column":9,"nodeType":"542","messageId":"543","endLine":11,"endColumn":23},{"ruleId":"540","severity":1,"message":"668","line":12,"column":9,"nodeType":"542","messageId":"543","endLine":12,"endColumn":24},{"ruleId":"540","severity":1,"message":"669","line":13,"column":9,"nodeType":"542","messageId":"543","endLine":13,"endColumn":24},{"ruleId":"540","severity":1,"message":"670","line":4,"column":10,"nodeType":"542","messageId":"543","endLine":4,"endColumn":19},{"ruleId":"566","severity":1,"message":"614","line":94,"column":22,"nodeType":"565","messageId":"561","endLine":94,"endColumn":24},{"ruleId":"540","severity":1,"message":"671","line":101,"column":3,"nodeType":"542","messageId":"543","endLine":101,"endColumn":14},{"ruleId":"540","severity":1,"message":"672","line":219,"column":3,"nodeType":"542","messageId":"543","endLine":219,"endColumn":18},{"ruleId":"673","severity":1,"message":"674","line":287,"column":7,"nodeType":"542","messageId":"675","endLine":287,"endColumn":11},{"ruleId":"673","severity":1,"message":"674","line":315,"column":7,"nodeType":"542","messageId":"675","endLine":315,"endColumn":11},{"ruleId":"540","severity":1,"message":"676","line":371,"column":9,"nodeType":"542","messageId":"543","endLine":371,"endColumn":16},{"ruleId":"540","severity":1,"message":"676","line":383,"column":9,"nodeType":"542","messageId":"543","endLine":383,"endColumn":16},{"ruleId":"540","severity":1,"message":"677","line":538,"column":7,"nodeType":"542","messageId":"543","endLine":538,"endColumn":9},{"ruleId":"540","severity":1,"message":"622","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":24},{"ruleId":"540","severity":1,"message":"678","line":9,"column":8,"nodeType":"542","messageId":"543","endLine":9,"endColumn":18},{"ruleId":"540","severity":1,"message":"619","line":43,"column":7,"nodeType":"542","messageId":"543","endLine":43,"endColumn":21},{"ruleId":"540","severity":1,"message":"623","line":64,"column":10,"nodeType":"542","messageId":"543","endLine":64,"endColumn":14},{"ruleId":"540","severity":1,"message":"624","line":64,"column":16,"nodeType":"542","messageId":"543","endLine":64,"endColumn":23},{"ruleId":"552","severity":1,"message":"642","line":72,"column":13,"nodeType":"639","endLine":83,"endColumn":4},{"ruleId":"552","severity":1,"message":"679","line":83,"column":6,"nodeType":"554","endLine":83,"endColumn":8,"suggestions":"680"},{"ruleId":"566","severity":1,"message":"567","line":88,"column":31,"nodeType":"565","messageId":"561","endLine":88,"endColumn":33},{"ruleId":"540","severity":1,"message":"635","line":95,"column":9,"nodeType":"542","messageId":"543","endLine":95,"endColumn":20},{"ruleId":"540","severity":1,"message":"681","line":98,"column":9,"nodeType":"542","messageId":"543","endLine":98,"endColumn":23},{"ruleId":"558","severity":1,"message":"682","line":18,"column":5,"nodeType":"560","messageId":"561","endLine":18,"endColumn":21},{"ruleId":"540","severity":1,"message":"683","line":62,"column":10,"nodeType":"542","messageId":"543","endLine":62,"endColumn":31},{"ruleId":"540","severity":1,"message":"684","line":63,"column":15,"nodeType":"542","messageId":"543","endLine":63,"endColumn":21},{"ruleId":"552","severity":1,"message":"685","line":69,"column":6,"nodeType":"554","endLine":69,"endColumn":11,"suggestions":"686"},{"ruleId":"540","severity":1,"message":"687","line":77,"column":9,"nodeType":"542","messageId":"543","endLine":77,"endColumn":19},{"ruleId":"540","severity":1,"message":"688","line":80,"column":9,"nodeType":"542","messageId":"543","endLine":80,"endColumn":20},{"ruleId":"540","severity":1,"message":"581","line":1,"column":28,"nodeType":"542","messageId":"543","endLine":1,"endColumn":36},{"ruleId":"540","severity":1,"message":"689","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":21},{"ruleId":"540","severity":1,"message":"690","line":4,"column":8,"nodeType":"542","messageId":"543","endLine":4,"endColumn":25},{"ruleId":"540","severity":1,"message":"691","line":5,"column":8,"nodeType":"542","messageId":"543","endLine":5,"endColumn":26},{"ruleId":"540","severity":1,"message":"663","line":8,"column":17,"nodeType":"542","messageId":"543","endLine":8,"endColumn":23},{"ruleId":"540","severity":1,"message":"692","line":10,"column":10,"nodeType":"542","messageId":"543","endLine":10,"endColumn":22},{"ruleId":"540","severity":1,"message":"693","line":58,"column":10,"nodeType":"542","messageId":"543","endLine":58,"endColumn":20},{"ruleId":"540","severity":1,"message":"694","line":58,"column":22,"nodeType":"542","messageId":"543","endLine":58,"endColumn":35},{"ruleId":"540","severity":1,"message":"562","line":72,"column":9,"nodeType":"542","messageId":"543","endLine":72,"endColumn":14},{"ruleId":"540","severity":1,"message":"695","line":73,"column":9,"nodeType":"542","messageId":"543","endLine":73,"endColumn":17},{"ruleId":"552","severity":1,"message":"696","line":77,"column":6,"nodeType":"554","endLine":77,"endColumn":8,"suggestions":"697"},{"ruleId":"540","severity":1,"message":"698","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":26},{"ruleId":"540","severity":1,"message":"623","line":59,"column":10,"nodeType":"542","messageId":"543","endLine":59,"endColumn":14},{"ruleId":"540","severity":1,"message":"699","line":60,"column":10,"nodeType":"542","messageId":"543","endLine":60,"endColumn":16},{"ruleId":"540","severity":1,"message":"700","line":60,"column":18,"nodeType":"542","messageId":"543","endLine":60,"endColumn":27},{"ruleId":"540","severity":1,"message":"636","line":61,"column":9,"nodeType":"542","messageId":"543","endLine":61,"endColumn":24},{"ruleId":"540","severity":1,"message":"701","line":81,"column":9,"nodeType":"542","messageId":"543","endLine":81,"endColumn":20},{"ruleId":"540","severity":1,"message":"581","line":1,"column":17,"nodeType":"542","messageId":"543","endLine":1,"endColumn":25},{"ruleId":"540","severity":1,"message":"702","line":3,"column":8,"nodeType":"542","messageId":"543","endLine":3,"endColumn":14},{"ruleId":"540","severity":1,"message":"703","line":14,"column":16,"nodeType":"542","messageId":"543","endLine":14,"endColumn":23},{"ruleId":"540","severity":1,"message":"704","line":15,"column":20,"nodeType":"542","messageId":"543","endLine":15,"endColumn":31},{"ruleId":"540","severity":1,"message":"705","line":11,"column":8,"nodeType":"542","messageId":"543","endLine":11,"endColumn":19},{"ruleId":"540","severity":1,"message":"706","line":15,"column":9,"nodeType":"542","messageId":"543","endLine":15,"endColumn":33},{"ruleId":"540","severity":1,"message":"707","line":31,"column":7,"nodeType":"542","messageId":"543","endLine":31,"endColumn":21},{"ruleId":"540","severity":1,"message":"708","line":112,"column":30,"nodeType":"542","messageId":"543","endLine":112,"endColumn":49},{"ruleId":"552","severity":1,"message":"709","line":117,"column":7,"nodeType":"554","endLine":117,"endColumn":28,"suggestions":"710"},{"ruleId":"540","severity":1,"message":"711","line":118,"column":11,"nodeType":"542","messageId":"543","endLine":118,"endColumn":21},{"ruleId":"540","severity":1,"message":"712","line":122,"column":11,"nodeType":"542","messageId":"543","endLine":122,"endColumn":21},{"ruleId":"637","severity":1,"message":"638","line":131,"column":75,"nodeType":"639","messageId":"640","endLine":131,"endColumn":77},{"ruleId":"566","severity":1,"message":"567","line":132,"column":20,"nodeType":"565","messageId":"561","endLine":132,"endColumn":22},{"ruleId":"637","severity":1,"message":"638","line":133,"column":45,"nodeType":"639","messageId":"640","endLine":133,"endColumn":47},{"ruleId":"566","severity":1,"message":"567","line":134,"column":21,"nodeType":"565","messageId":"561","endLine":134,"endColumn":23},{"ruleId":"540","severity":1,"message":"627","line":5,"column":8,"nodeType":"542","messageId":"543","endLine":5,"endColumn":15},{"ruleId":"540","severity":1,"message":"628","line":7,"column":8,"nodeType":"542","messageId":"543","endLine":7,"endColumn":16},{"ruleId":"540","severity":1,"message":"629","line":9,"column":8,"nodeType":"542","messageId":"543","endLine":9,"endColumn":22},{"ruleId":"540","severity":1,"message":"698","line":1,"column":27,"nodeType":"542","messageId":"543","endLine":1,"endColumn":36},{"ruleId":"540","severity":1,"message":"713","line":173,"column":23,"nodeType":"542","messageId":"543","endLine":173,"endColumn":37},{"ruleId":"540","severity":1,"message":"714","line":178,"column":35,"nodeType":"542","messageId":"543","endLine":178,"endColumn":61},{"ruleId":"540","severity":1,"message":"715","line":182,"column":34,"nodeType":"542","messageId":"543","endLine":182,"endColumn":59},{"ruleId":"540","severity":1,"message":"630","line":187,"column":10,"nodeType":"542","messageId":"543","endLine":187,"endColumn":20},{"ruleId":"540","severity":1,"message":"716","line":2,"column":10,"nodeType":"542","messageId":"543","endLine":2,"endColumn":20},{"ruleId":"540","severity":1,"message":"678","line":3,"column":28,"nodeType":"542","messageId":"543","endLine":3,"endColumn":38},{"ruleId":"540","severity":1,"message":"550","line":3,"column":40,"nodeType":"542","messageId":"543","endLine":3,"endColumn":50},{"ruleId":"540","severity":1,"message":"717","line":47,"column":21,"nodeType":"542","messageId":"543","endLine":47,"endColumn":33},{"ruleId":"552","severity":1,"message":"718","line":54,"column":6,"nodeType":"554","endLine":54,"endColumn":17,"suggestions":"719"},{"ruleId":"540","severity":1,"message":"698","line":1,"column":27,"nodeType":"542","messageId":"543","endLine":1,"endColumn":36},{"ruleId":"540","severity":1,"message":"713","line":178,"column":23,"nodeType":"542","messageId":"543","endLine":178,"endColumn":37},{"ruleId":"540","severity":1,"message":"714","line":184,"column":35,"nodeType":"542","messageId":"543","endLine":184,"endColumn":61},{"ruleId":"540","severity":1,"message":"715","line":188,"column":34,"nodeType":"542","messageId":"543","endLine":188,"endColumn":59},{"ruleId":"720","severity":1,"message":"721","line":226,"column":26,"nodeType":"722","messageId":"723","endLine":226,"endColumn":42,"fix":"724"},{"ruleId":"540","severity":1,"message":"698","line":1,"column":27,"nodeType":"542","messageId":"543","endLine":1,"endColumn":36},{"ruleId":"540","severity":1,"message":"713","line":173,"column":23,"nodeType":"542","messageId":"543","endLine":173,"endColumn":37},{"ruleId":"540","severity":1,"message":"714","line":178,"column":35,"nodeType":"542","messageId":"543","endLine":178,"endColumn":61},{"ruleId":"540","severity":1,"message":"715","line":182,"column":34,"nodeType":"542","messageId":"543","endLine":182,"endColumn":59},{"ruleId":"540","severity":1,"message":"630","line":187,"column":10,"nodeType":"542","messageId":"543","endLine":187,"endColumn":20},"no-native-reassign",["725"],"no-negated-in-lhs",["726"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["727"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","'Search' is defined but never used.","'styles' is assigned a value but never used.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","'openConditionScreen' is assigned a value but never used.","'Route' is defined but never used.","'setDealerName' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["728","729"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["730"],"React Hook useEffect has a missing dependency: 'getUserAccessInfoToken'. Either include it or remove the dependency array.",["731"],"'useState' is defined but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["732"],"'setSearchData' is assigned a value but never used.","'TransactionModal' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["733"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["734"],"'PrintSharp' is defined but never used.","'getPassedList1' is defined but never used.","'setPurchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.",["735"],["736"],"'rows' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","'vehicleList' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'handleChangePageCount' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'CardMedia' is defined but never used.","'SearchText' is defined but never used.","'TextareaAutosize' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","Duplicate key 'font-weight'.","'accountInformation' is assigned a value but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'handleSearchText' is assigned a value but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'handleClick' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ListItemIcon' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'activeChild'. Either include it or remove the dependency array.",["737"],"'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'Link' is defined but never used.","'LinearProgress' is defined but never used.","'getAccessTokenEndpoint' is defined but never used.","'getUserInfo' is defined but never used.","'resp' is assigned a value but never used.","'time' is assigned a value but never used.","'images' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthTokenSSO1'. Either include it or remove the dependency array.",["738"],"'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["739"],"'Button' is defined but never used.","'getUserInfoToken' is defined but never used.",["740"],"'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'getCarXml' is defined but never used.","'getTokenSSO' is assigned a value but never used.","'MileageDiscList' is assigned a value but never used.","no-redeclare","'data' is already defined.","redeclared","'options' is assigned a value but never used.","'qs' is assigned a value but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'props.vin'. Either include it or remove the dependency array.",["741"],"'handleOnChange' is assigned a value but never used.","Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["742"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'MobileStepper' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'getImageData' is defined but never used.","'activeStep' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.images'. Either include it or remove the dependency array.",["743"],"'useEffect' is defined but never used.","'noCall' is assigned a value but never used.","'setnoCall' is assigned a value but never used.","'apiResponse' is assigned a value but never used.","'moment' is defined but never used.","'setTime' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'CheckCircle' is defined but never used.","'getTransportationDetails' is defined but never used.","'QontoConnector' is assigned a value but never used.","'setTransportDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTransportInformation'. Either include it or remove the dependency array.",["744"],"'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","'makeStyles' is defined but never used.","'setTotalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onChangePage', 'skipRecords', and 'totalData'. Either include them or remove the dependency array.",["745"],"no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"746","text":"747"},"no-global-assign","no-unsafe-negation",{"desc":"748","fix":"749"},{"messageId":"750","fix":"751","desc":"752"},{"messageId":"753","fix":"754","desc":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},{"desc":"760","fix":"761"},{"desc":"762","fix":"763"},{"desc":"764","fix":"765"},{"desc":"762","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"773","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},[5729,5738],"\"right\"","Update the dependencies array to be: [props.location.state]",{"range":"786","text":"787"},"removeEscape",{"range":"788","text":"789"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"790","text":"791"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [getToken]",{"range":"792","text":"793"},"Update the dependencies array to be: [getUserAccessInfoToken, token]",{"range":"794","text":"795"},"Add dependencies array: []",{"range":"796","text":"797"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"798","text":"799"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"800","text":"801"},{"range":"802","text":"799"},"Update the dependencies array to be: [getInspectionDamageDetails, inspectionId]",{"range":"803","text":"804"},"Update the dependencies array to be: [activeChild, props.stateUpdate]",{"range":"805","text":"806"},"Update the dependencies array to be: [getAuthTokenSSO1, value]",{"range":"807","text":"808"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"809","text":"810"},{"range":"811","text":"810"},"Update the dependencies array to be: [props.vin]",{"range":"812","text":"813"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"814","text":"815"},"Update the dependencies array to be: [props.images]",{"range":"816","text":"817"},"Update the dependencies array to be: [props.transportData, setTransportInformation]",{"range":"818","text":"819"},"Update the dependencies array to be: [onChangePage, pageCount, skipRecords, totalData]",{"range":"820","text":"821"},[1817,1872],"[props.location.state]",[299,300],"",[299,299],"\\",[713,715],"[getToken]",[776,783],"[getUserAccessInfoToken, token]",[1352,1352],", []",[2806,2811],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[3030,3032],"[getInspectionDamageDetails]",[3093,3098],[3755,3769],"[getInspectionDamageDetails, inspectionId]",[4017,4036],"[activeChild, props.stateUpdate]",[3249,3256],"[getAuthTokenSSO1, value]",[2252,2259],"[getVehicleDetails, value]",[2492,2499],[2839,2841],"[props.vin]",[2638,2643],"[getConditionVehicleDetails, vin]",[1860,1862],"[props.images]",[3254,3275],"[props.transportData, setTransportInformation]",[1792,1803],"[onChangePage, pageCount, skipRecords, totalData]"]