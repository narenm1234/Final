[{"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js":"1","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js":"2","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js":"3","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js":"4","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js":"5","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js":"6","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js":"7","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js":"8","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js":"9","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js":"10","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js":"11","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js":"12","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js":"13","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js":"14","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login2.js":"15","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js":"16","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js":"17","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js":"18","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js":"19","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js":"20","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js":"21","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js":"22","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js":"23","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js":"24","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js":"25","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js":"26","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js":"27","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js":"28","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js":"29","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js":"30","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\TransactionModal.js":"31","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js":"32","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js":"33","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js":"34","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js":"35","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js":"36","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js":"37","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js":"38","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js":"39","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js":"40","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js":"41","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\LoaderPage.js":"42","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js":"43","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js":"44","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js":"45","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\ExclusivityPeriod.js":"46","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js":"47","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js":"48","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js":"49","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js":"50","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js":"51","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js":"52","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\UpdateMileage.js":"53","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\UpdateMileagePricing.js":"54","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileagePricingSideBar.js":"55","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\headers.js":"56","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Login.js":"57","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\OktaSignInWidget.js":"58","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login3.js":"59","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PaginationDealerView.js":"60"},{"size":661,"mtime":1631558768443,"results":"61","hashOfConfig":"62"},{"size":375,"mtime":1631558768486,"results":"63","hashOfConfig":"62"},{"size":319,"mtime":1631558768500,"results":"64","hashOfConfig":"62"},{"size":6223,"mtime":1643811011605,"results":"65","hashOfConfig":"62"},{"size":499,"mtime":1631558768479,"results":"66","hashOfConfig":"62"},{"size":2856,"mtime":1631558768385,"results":"67","hashOfConfig":"62"},{"size":3705,"mtime":1633544391385,"results":"68","hashOfConfig":"62"},{"size":2350,"mtime":1642711130105,"results":"69","hashOfConfig":"62"},{"size":699,"mtime":1631558768478,"results":"70","hashOfConfig":"62"},{"size":241,"mtime":1631558768462,"results":"71","hashOfConfig":"62"},{"size":4241,"mtime":1643065504418,"results":"72","hashOfConfig":"62"},{"size":51730,"mtime":1643373312318,"results":"73","hashOfConfig":"62"},{"size":239,"mtime":1640100768647,"results":"74","hashOfConfig":"62"},{"size":236,"mtime":1633316299083,"results":"75","hashOfConfig":"62"},{"size":2510,"mtime":1643862094524,"results":"76","hashOfConfig":"62"},{"size":9776,"mtime":1631558768470,"results":"77","hashOfConfig":"62"},{"size":55205,"mtime":1640100768636,"results":"78","hashOfConfig":"62"},{"size":8545,"mtime":1631558768440,"results":"79","hashOfConfig":"62"},{"size":20588,"mtime":1643811011612,"results":"80","hashOfConfig":"62"},{"size":25453,"mtime":1633030706109,"results":"81","hashOfConfig":"62"},{"size":18260,"mtime":1633544391363,"results":"82","hashOfConfig":"62"},{"size":5610,"mtime":1643811011615,"results":"83","hashOfConfig":"62"},{"size":1687,"mtime":1641916000898,"results":"84","hashOfConfig":"62"},{"size":2962,"mtime":1642711130096,"results":"85","hashOfConfig":"62"},{"size":265,"mtime":1640100768601,"results":"86","hashOfConfig":"62"},{"size":3041,"mtime":1642082172431,"results":"87","hashOfConfig":"62"},{"size":1971,"mtime":1640100768574,"results":"88","hashOfConfig":"62"},{"size":17172,"mtime":1643863787508,"results":"89","hashOfConfig":"62"},{"size":33466,"mtime":1640100768681,"results":"90","hashOfConfig":"62"},{"size":19945,"mtime":1643373312312,"results":"91","hashOfConfig":"62"},{"size":7702,"mtime":1642447488800,"results":"92","hashOfConfig":"62"},{"size":4884,"mtime":1643373312327,"results":"93","hashOfConfig":"62"},{"size":11641,"mtime":1643811011626,"results":"94","hashOfConfig":"62"},{"size":311,"mtime":1631558768469,"results":"95","hashOfConfig":"62"},{"size":327,"mtime":1631558768468,"results":"96","hashOfConfig":"62"},{"size":8268,"mtime":1643373312325,"results":"97","hashOfConfig":"62"},{"size":4773,"mtime":1631558768392,"results":"98","hashOfConfig":"62"},{"size":1464,"mtime":1631558768415,"results":"99","hashOfConfig":"62"},{"size":34025,"mtime":1643863723203,"results":"100","hashOfConfig":"62"},{"size":1321,"mtime":1631558768418,"results":"101","hashOfConfig":"62"},{"size":4618,"mtime":1642447488766,"results":"102","hashOfConfig":"62"},{"size":305,"mtime":1635446877253,"results":"103","hashOfConfig":"62"},{"size":30157,"mtime":1642685677439,"results":"104","hashOfConfig":"62"},{"size":4334,"mtime":1643035786658,"results":"105","hashOfConfig":"62"},{"size":4642,"mtime":1643373312315,"results":"106","hashOfConfig":"62"},{"size":2797,"mtime":1642685677454,"results":"107","hashOfConfig":"62"},{"size":3507,"mtime":1642685677470,"results":"108","hashOfConfig":"62"},{"size":1625,"mtime":1641916000900,"results":"109","hashOfConfig":"62"},{"size":12988,"mtime":1631558768432,"results":"110","hashOfConfig":"62"},{"size":3241,"mtime":1643370843587,"results":"111","hashOfConfig":"62"},{"size":12984,"mtime":1631558768435,"results":"112","hashOfConfig":"62"},{"size":13661,"mtime":1631558768431,"results":"113","hashOfConfig":"62"},{"size":88592,"mtime":1642711130098,"results":"114","hashOfConfig":"62"},{"size":13086,"mtime":1643035786655,"results":"115","hashOfConfig":"62"},{"size":4774,"mtime":1640100768587,"results":"116","hashOfConfig":"62"},{"size":1068,"mtime":1643065567365,"results":"117","hashOfConfig":"62"},{"size":2158,"mtime":1643056803479,"results":"118","hashOfConfig":"62"},{"size":680,"mtime":1631558768402,"results":"119","hashOfConfig":"62"},{"size":1431,"mtime":1643065437793,"results":"120","hashOfConfig":"62"},{"size":3280,"mtime":1643811011619,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"r2rgdv",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"124"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"124"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"269","usedDeprecatedRules":"124"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"124"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"124"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"124"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"124"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"124"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"124"},"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js",[],["292","293"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js",["294","295","296","297","298"],"import \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Security, SecureRoute, LoginCallback } from \"@okta/okta-react\";\r\nimport { OktaAuth } from \"@okta/okta-auth-js\";\r\n// import OktaApp from './OktaApp';\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport GroundPending from \"./pages/GroundPending/GroundPending\";\r\nimport GroundPending1 from \"./pages/GroundPending/GroundPending1\";\r\nimport GroundPending2 from \"./pages/GroundPending/GroundPending2\";\r\nimport { Grounded, Grounded1, LastChance, Purchased } from \"./pages/Grounded\";\r\nimport \"../src/assets/WebFont/ToyotaType-Book.ttf\";\r\nimport \"../src/sass/main.scss\";\r\nimport VINSearch from \"./pages/GroundPending/VINSearch\";\r\nimport ConditionReport from \"./pages/ConditionReport\";\r\nimport AdminHome from \"./pages/AdminHome\";\r\nimport AdminVehicleSearch from \"./components/AdminVehicleSearch\";\r\nimport ConditionReportRequests from \"./pages/ConditionReportRequests\";\r\nimport InventoryRequestsTabs from \"./components/InventoryRequestsTabs\";\r\nimport Login2 from \"./pages/Login2\";\r\nimport Login3 from \"./pages/Login3\";\r\nimport Login from \"./components/Login\";\r\nfunction App() {\r\n  const history = useHistory();\r\n  // let { path, url } = useRouteMatch();\r\n\r\n  const onAuthRequired = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const [stateUpdate, setStateUpdate] = useState(1);\r\n  const [selectedDealersData, setSelectedDealersData] = useState([]);\r\n  const oktaAuth = new OktaAuth({\r\n    issuer: \"https://tfs.oktapreview.com/oauth2/ausredslpqIsIjQfz0h7\",\r\n    // clientId: \"0oazqm6unew4ySMR80h7\",\r\n    clientId:'0oa10kchmc4Hjj6gD0h8',\r\n    redirectUri: 'https://asp-stage.mfindealerservices.com/login3',\r\n    // redirectUri: 'http://localhost:3000/login3',\r\n    restoreOriginalUri: \"http://localhost:3000/login\",\r\n\r\n    onAuthRequired: onAuthRequired,\r\n    pkce: false,\r\n  });\r\n  const fireEvents = () => {\r\n    setStateUpdate(stateUpdate + 1);\r\n  };\r\n  const selectedDealers = (data) => {\r\n    setSelectedDealersData(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Security\r\n          oktaAuth={oktaAuth}\r\n          restoreOriginalUri=\"http://localhost:3000\"\r\n        >\r\n          {/* <OktaApp /> */}\r\n          <Router>\r\n            <Header selectedDealers={selectedDealers}></Header>\r\n            <div>\r\n              <Sidebar stateUpdate={stateUpdate}>\r\n                <Switch>\r\n                  <Route\r\n                    path=\"/\"\r\n                    exact\r\n                    exact\r\n                    render={(props) => (\r\n                      <GroundPending {...props} fireEvents={fireEvents} />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path=\"/home\"\r\n                    exact\r\n                    render={(props) => <Home {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/adminSearch\"\r\n                    exact\r\n                    component={AdminVehicleSearch}\r\n                  />\r\n                  <Route\r\n                    path=\"/adminSearchResult\"\r\n                    exact\r\n                    component={AdminHome}\r\n                  />\r\n                  <Route path=\"/checkinvehicle\" exact component={VINSearch} />\r\n                  <Route\r\n                    path=\"/grounded\"\r\n                    exact\r\n                    render={(props) => (\r\n                      <GroundPending\r\n                        {...props}\r\n                        fireEvents={fireEvents}\r\n                        selectedDealersData={selectedDealersData}\r\n                      />\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    path=\"/passed\"\r\n                    exact\r\n                    render={(props) => <GroundPending1 {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/purchased\"\r\n                    exact\r\n                    render={(props) => <GroundPending2 {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/grounded/lastchance\"\r\n                    exact\r\n                    component={LastChance}\r\n                  />\r\n\r\n                  <Route\r\n                    path=\"/adminInventoryRequests\"\r\n                    exact\r\n                    component={InventoryRequestsTabs}\r\n                  />\r\n                  <Route\r\n                    path=\"/conditionreportRequests\"\r\n                    exact\r\n                    render={(props) => <ConditionReportRequests {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/conditionreport/:vin\"\r\n                    exact\r\n                    render={(props) => <ConditionReport {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/conditionreport\"\r\n                    exact\r\n                    render={(props) => <ConditionReport {...props} />}\r\n                  />\r\n                  <Route\r\n                    path=\"/login2\"\r\n                    exact\r\n                    render={(props) => (\r\n                      <Login2 {...props} fireEvents={fireEvents} />\r\n                    )}\r\n                  />\r\n                   <Route\r\n                    path=\"/login3\"\r\n                    exact\r\n                    render={(props) => (\r\n                      <Login3 {...props} fireEvents={fireEvents} />\r\n                    )}\r\n                  />\r\n                  <SecureRoute\r\n                    path=\"/login\"\r\n                    exact\r\n                    render={(props) => <Login {...props} />}\r\n                  />\r\n                  {/* <Route\r\n                  path=\"/login\" exact render={(props)=> <Login />}/> */}\r\n                  <Header selectedDealers={selectedDealers}></Header>\r\n                </Switch>\r\n              </Sidebar>\r\n            </div>\r\n          </Router>\r\n        </Security>\r\n      </div>\r\n      {/* <Router>\r\n        <AppWithRouterAccess />\r\n      </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js",["299","300"],"import React from 'react';\r\nimport Search from '../components/Search/Search';\r\nimport VehicleInformation from '../components/VehicleInformation';\r\n\r\n\r\nlet styles = {\r\n  homesearch: {\r\n    'width': '371px',\r\n    'height': '32px',\r\n    'margin': '3px 0 0',\r\n    'padding': '7px 9px 8px 12px',\r\n    'border-radius': '4px',\r\n    'border': 'solid 1px #dddbda',\r\n    'background-color': '#ffffff'\r\n\r\n  },\r\n}\r\nconst Home = () => {\r\n  return (\r\n    <VehicleInformation />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js",["301","302","303","304"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ManualPricing from './ManualPricing';\r\nimport RRMApproval from './RRMApproval';\r\nimport MileageDisc from './MileageDisc'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3} pt={16}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n}));\r\n\r\nexport default function InventoryRequestsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state && props.location.state.pageName === 'RRMApproval') {\r\n      setValue(1)\r\n    } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\r\n      setValue(0)\r\n    }\r\n    else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\r\n      setValue(2)\r\n    }\r\n  }, [props.location.state && props.location.state.pageName]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className='topBarAdmin'>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className='tabset'>\r\n          <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\r\n          <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\r\n          <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ManualPricing props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RRMApproval props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <MileageDisc props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <h2>No Inspections</h2>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js",["305","306"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n\r\nimport NewSidebar from './NewSideBar'\r\nimport \"./SideBar.scss\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginTop: 52,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    boxShadow: '0px 0px 3px grey',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'space-between',\r\n    fontSize: 18,\r\n    fontWeight: 600\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  closeIcon: {\r\n    border: '1px solid'\r\n  }\r\n\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const { children } = props\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} >\r\n          {open ? <div> Main Menu</div> : ''}\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {open ? <ChevronLeftIcon className={classes.closeIcon} /> : <ChevronRightIcon className={classes.closeIcon} />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {open ? <NewSidebar stateUpdate={props.stateUpdate}></NewSidebar> : \"\"}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Sidebar;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js",["307","308","309","310","311","312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminVehicleSearch from \"../components/AdminVehicleSearch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VehicleSearchTabs from \"../components/Tabs\";\r\nimport NotesSection from \"../components/NotesSection\";\r\nimport { getInspectionVehicleDetails, getGroundingDetailsByVin } from \"../service/api\";\r\nimport UpdateMileagePricing from \"../components/UpdateMileagePricing\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst AdminHome = (props) => {\r\n  const [vin, setVin] = useState(props?.location?.state?.vin);\r\n  const [inspectiondata, setinspectiondata] = useState(null);\r\n  const [hide, setHide] = useState(0);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});// inspectiondata\r\n\r\n  useEffect(() => {\r\n    // getGroundingDetailsDetails();\r\n  }, [vin]);\r\n\r\n  // async function getGroundingDetailsDetails() { \r\n  //   let apiResponse = await getGroundingDetailsByVin(vin);\r\n  //   console.log(\"getGroundingDetailsByVin==>\", apiResponse);\r\n  //   if(apiResponse && apiResponse.data && apiResponse.data.data){\r\n  //     setinspectiondata(apiResponse.data.data);\r\n  //   } \r\n  // }\r\n  // async function getConditionVehicleDetails() {\r\n  //   let apiResponse = await getInspectionVehicleDetails(vin);\r\n  //   console.log(\"getInspectionVehicleDetails==>\", apiResponse);\r\n  //   apiResponse && apiResponse.data && setinspectiondata(apiResponse.data);\r\n  // }\r\n\r\n  const hideShow = (value) => {\r\n    console.log(\"value\", value)\r\n    setHide(value);\r\n  };\r\n\r\n  const onGetConditionVehicleDetails = (event) =>{\r\n    setCondionVehicleDetails(event);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box display={\"flex\"} >\r\n        <Box width={'100%'}>\r\n          {vin && (\r\n            <VehicleSearchTabs\r\n              // inspectiondata={inspectiondata}\r\n              vin={vin}\r\n              hideShow={(hide) => {\r\n                hideShow(hide);\r\n              }}\r\n              onGetConditionVehicleDetails = {onGetConditionVehicleDetails}\r\n            />\r\n          )}\r\n        </Box>\r\n        <Box position={'relative'}>\r\n          {hide === 0 ? <NotesSection vin = {vin} />: \"\"}\r\n          {hide === 2 ? <UpdateMileagePricing vin = {vin} condionVehicleDetails={condionVehicleDetails} />: \"\"}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminHome;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js",["314"],"import React, { useState } from 'react';\r\nimport ListingPage from './groundedListPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage {...props}></ListingPage>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js",["315","316","317"],"import React, { useState } from \"react\";\r\nimport Separator from \"../Separator\";\r\nimport AdminSearchHeader from \"../AdminSearchHeader\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport { getDealerDropData } from \"../../service/api\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst Header = (props) => {\r\n  const [showDealer, setShowDealer] = useState(null);\r\n  const [dealerName, setDealerName] = useState(\"\");\r\n  const [dealerDrop, setDealerDrop] = useState([]);\r\n  const location = useLocation();\r\n\r\n  const toggleShowDealer = (event) => {\r\n    setShowDealer(event.currentTarget);\r\n  };\r\n  React.useEffect(() => {\r\n    setDealerName(localStorage.getItem(\"dealerName\"));\r\n  }, [localStorage.getItem(\"dealerName\")]);\r\n\r\n  React.useEffect(() => {\r\n    getDealerDrop();\r\n  }, [localStorage.getItem(\"ESGToken\")]);\r\n\r\n  async function getDealerDrop() {\r\n    let apiResponse = await getDealerDropData();\r\n    let dealerdata = apiResponse.data;\r\n    dealerdata.forEach((item) => {\r\n      item.checked = false;\r\n    });\r\n    setDealerDrop(dealerdata);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setShowDealer(null);\r\n  };\r\n  const handleSearch = (SearchText) => {\r\n    console.log(props);\r\n    //props.searchdetails(SearchText);\r\n    openConditionScreen(SearchText, \"\");\r\n  };\r\n\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    console.log(props);\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      vehicleDetails: vehicle,\r\n      results: true,\r\n    });\r\n  };\r\n\r\n  const handleChange = (ditem) => {\r\n    let dealerData = dealerDrop;\r\n    dealerData.forEach((x) => {\r\n      if (x.dealer_number === ditem.dealer_number) {\r\n        x.checked = !ditem.checked;\r\n      }\r\n    });\r\n    setDealerDrop([...dealerData]);\r\n    let selectedDealerData = dealerData.filter((x) => x.checked);\r\n    props.selectedDealers(selectedDealerData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"imageHolder\">\r\n        <img src=\"TMZ.png\" alt=\"logo\" width=\"213px\"  />\r\n        <Separator />\r\n        <div className=\"auctionSales\">Auction Sales Platform </div>\r\n      </div>\r\n      <AdminSearchHeader\r\n        searchdetails={(SearchText) => {\r\n          handleSearch(SearchText);\r\n        }}\r\n      />\r\n      <div className=\"dealerName\">\r\n        {dealerName ? dealerName : \"Dealer Name\"} &nbsp; &nbsp;\r\n        {(location.pathname === \"/\" ||\r\n        location.pathname === \"/grounded\" ||\r\n        location.pathname === \"/passed\" ||\r\n        location.pathname === \"/purchased\") ? (\r\n          <IconButton aria-label=\"dealer\" onClick={toggleShowDealer}>\r\n            <ArrowDropDownIcon />\r\n          </IconButton>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Menu\r\n        id=\"dealer-menu\"\r\n        anchorEl={showDealer}\r\n        keepMounted\r\n        open={Boolean(showDealer)}\r\n        onClose={handleClose}\r\n        className=\"dealermenu\"\r\n      >\r\n        {!dealerName &&\r\n          dealerDrop &&\r\n          dealerDrop.map((ditem, index) => (\r\n            <MenuItem key={index}>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={ditem.checked}\r\n                      onChange={() => {\r\n                        handleChange(ditem);\r\n                      }}\r\n                      value={ditem.dealer_number}\r\n                    />\r\n                  }\r\n                  label={ditem.dealer_name + \"(\" + ditem.dealer_number + \")\"}\r\n                />\r\n              </FormGroup>\r\n            </MenuItem>\r\n          ))}\r\n        {/* <MenuItem onClick={handleClose}>User Settings</MenuItem>\r\n        <MenuItem onClick={handleClose}>Help</MenuItem> */}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js",["318","319","320","321","322","323","324","325","326","327","328","329","330"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewDetailedReport from \"./ViewDetailedReport\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport PrintSharp from \"@material-ui/icons/PrintSharp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  getPassedList1,\r\n  getInspectionDamageDetailsApi,\r\n  getOEMBuildDetailsApi,\r\n  getPurchasedList,\r\n  postDealerActionPurchaseOnVehicle,\r\n  getInspectionVehicleDetails,\r\n  getInspectionAccessoryDetails,\r\n  getInspectionWheelTiresDetails,\r\n} from \"../service/api\";\r\nimport moment from \"moment\";\r\nimport PurchasedPricingSideBar from \"../components/PurchasedPricingSideBar\";\r\nimport TransactionModal from \"./TransactionModal\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport PassOnVehicle from \"./PassOnVehicle\";\r\nexport default function ConditionReport(props) {\r\n  let listOfItem = [\r\n    \"VIN\",\r\n    \"Engine\",\r\n    \"Door\",\r\n    \"Body Style\",\r\n    \"Transmission\",\r\n    \"Drive Train\",\r\n    \"Interior type\",\r\n    \"Interior Color\",\r\n    \"Keys\",\r\n    \"Interior Type\",\r\n    \"Odor\",\r\n    \"Grounding Mileage\",\r\n    \"Account Type\",\r\n  ];\r\n\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});\r\n  const [accessoryDetails, setAccessoryDetails] = React.useState([]);\r\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\r\n  const [vin, setVin] = React.useState(props?.location?.state?.vin);\r\n  const [purchaseSection, setPurchaseSection] = React.useState(\r\n    props?.location?.state?.purchaseSection\r\n  );\r\n  const [inspectionId, setInspectionId] = React.useState();\r\n  // const [VehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [value, setValue] = useState([])\r\n  const [DamageDetails, setDamageDetails] = useState([]);\r\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n  const [vehicleDetails, setvehicleDetails] = React.useState(\r\n    props?.location?.state?.vehicleDetails\r\n  );\r\n\r\n  const [openTransactionPopup, setOpenTransactionPopup] = useState(false);\r\n  const [transactionPopupType, setTransactionPopupType] = useState(\"confirm\");\r\n  const [transactionInfo, setTransactionInfo] = useState({});\r\n  const [isConfirmPurchase, setIsConfirmPurchase] = useState(false);\r\n\r\n  const [isPassVehicalPop, setIsPassVehicalPop] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"start condition report page\", new Date());\r\n\r\n    getOEMBuildDetails();\r\n    getConditionVehicleDetails();\r\n    // getVehicleDetails();\r\n    getInspectionAccessory(vin);\r\n\r\nconsole.log(\"vehicleDetails==>\",  props?.location?.state?.vehicleDetails)\r\n\r\n  }, [vin]);\r\n\r\n  async function getOEMBuildDetails() {\r\n    console.log(\"start condition report page getOEMBuildDetails\", new Date());\r\n\r\n    let apiResponse = await getOEMBuildDetailsApi(vin);\r\n    console.log(\"end condition report page getOEMBuildDetails\", new Date());\r\n\r\n    setOEMBuildDetailsData(apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionDamageDetails(inspection_Id) {\r\n    console.log(\r\n      \"start condition report page getInspectionDamageDetails\",\r\n      new Date()\r\n    );\r\n\r\n    let getInspectionDamageDetailsaApiResponse =\r\n      await getInspectionDamageDetailsApi(inspection_Id, vin);\r\n    console.log(\r\n      \"end condition report page getInspectionDamageDetails\",\r\n      new Date()\r\n    );\r\n\r\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\r\n  }\r\n\r\n  // async function getVehicleDetails() {\r\n  //   console.log(\"start condition report page getVehicleDetails\",new Date());\r\n\r\n  //   let apiResponse = await getPurchasedList(vin);\r\n  //   console.log(\"end condition report page getVehicleDetails\",new Date());\r\n\r\n  //   setVehicleResponse(apiResponse.data.data);\r\n  // }\r\n\r\n  const cloadDamageDetails = (inspection_Id) => {\r\n    getInspectionWheelTires(inspection_Id);\r\n    getInspectionDamageDetails(inspection_Id);\r\n  };\r\n\r\n  async function getConditionVehicleDetails() {\r\n    console.log(\r\n      \"start condition report page getConditionVehicleDetails\",\r\n      new Date()\r\n    );\r\n\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    console.log(\r\n      \"end condition report page getConditionVehicleDetails\",\r\n      new Date()\r\n    );\r\n\r\n    if (apiResponse && apiResponse.data) {\r\n      setCondionVehicleDetails(apiResponse.data);\r\n      if (apiResponse.data.inspection_id) {\r\n        setInspectionId(apiResponse.data.inspection_id);\r\n        cloadDamageDetails(apiResponse.data.inspection_id);\r\n      }\r\n    }\r\n  }\r\n\r\n  async function getInspectionAccessory(vin) {\r\n    let apiResponse = await getInspectionAccessoryDetails(vin);\r\n    setAccessoryDetails(apiResponse.data);\r\n    console.log(\"xxxxxxxxx\", apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionWheelTires(inspectionId) {\r\n    console.log(\r\n      \"start condition report page getInspectionWheelTires\",\r\n      new Date()\r\n    );\r\n\r\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\r\n    console.log(\r\n      \"end condition report page getInspectionWheelTires\",\r\n      new Date()\r\n    );\r\n\r\n    setWheelTiresDetails(apiResponse.data);\r\n    console.log(\"-------------xxxxxx\", inspectionId);\r\n  }\r\n\r\n  let kintoID = localStorage.getItem(\"kintoId\");\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleClosePassVehicle = () => {\r\n    setIsPassVehicalPop(!isPassVehicalPop);\r\n  };\r\n\r\n  const handlePurchaseVehical = (event) => {\r\n    setOpenTransactionPopup(true);\r\n    setTransactionInfo(event);\r\n    setTransactionPopupType(event.type);\r\n  };\r\n\r\n  const handleConfirmPurchase = () => {\r\n    setIsConfirmPurchase(true);\r\n  };\r\n  const handleContinue = async () => {\r\n    setOpenTransactionPopup(false);\r\n\r\n    // if (transactionPopupType == \"success\") {\r\n    //   let apiResponse = await postDealerActionPurchaseOnVehicle(\r\n    //     vin,\r\n    //     vehicleDetails?.groundingId\r\n    //   );\r\n    //   console.log(\"postDealerActionPurchaseOnVehicle==>\", apiResponse);\r\n    //   // window.location.replace(\"/grounded\");\r\n    //   window.location.reload();\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"myContainerLayout\">\r\n        <div className=\"conditionPageCard\">\r\n          <Grid>\r\n            <div className=\"conditionTopBar\">\r\n              {/* <Grid xs={12} className=\"conditionTopBarLayout\">\r\n                <PrintSharp />\r\n                <span className=\"conditionTopBarStyles\">Print Report</span>\r\n              </Grid> */}\r\n            </div>\r\n          </Grid>\r\n          {condionVehicleDetails?.inspection_date &&\r\n          condionVehicleDetails?.inspection_date ? (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <div className=\"codereportimggallery\">\r\n                    <MyGallery {...condionVehicleDetails} />\r\n                  </div>\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Exterior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.exteriorCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.exteriorCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Interior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.interiorCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.interiorCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Mechanical total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.mechanicalCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.mechanicalCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Box py={6} textAlign=\"center\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          className=\"detailedReport\"\r\n                          onClick={handleOpen}\r\n                          disabled={!condionVehicleDetails?.inspection_date}\r\n                        >\r\n                          View Full Damage Report\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: Damage estimates are included for reference\r\n                        and may not be reflective of the actual repair costs\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <div className=\"LabelTextTextArea\">Announcements</div>\r\n                  <TextareaAutosize\r\n                    disabled\r\n                    className=\"inputFieldTextArea\"\r\n                    aria-label=\"maximum height\"\r\n                    defaultValue={condionVehicleDetails?.inspection_notes}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Grid container spacing={1}>\r\n                    <div className=\"ConditionReportSection\">\r\n                      <Grid item>\r\n                        <div className=\"reportTitle\">\r\n                          <span>\r\n                            {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                          </span>\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        {condionVehicleDetails?.inspection_date && (\r\n                          <span className=\"ConditionReportInspection\">\r\n                            <span className=\"BadgeValue\">\r\n                              Inspection Complete\r\n                            </span>\r\n                          </span>\r\n                        )}\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.currentPayoffAmount ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails?.currentPayoffAmount\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails.totalOutstandingRemainingPayments &&\r\n                              condionVehicleDetails.residual ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails.residual +\r\n                                    condionVehicleDetails.totalOutstandingRemainingPayments\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Market Based</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.marketBasedPrice ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails?.marketBasedPrice\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                          <div className=\"smallCardBody\">\r\n                            {condionVehicleDetails?.condition_grade}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Inspection Mileage\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            {condionVehicleDetails &&\r\n                            condionVehicleDetails?.inspection_mileage ? (\r\n                              <CurrencyFormat\r\n                                value={condionVehicleDetails.inspection_mileage}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" MI\"}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                        <hr />\r\n                      </Typography>\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {moment(\r\n                                condionVehicleDetails?.inspection_date\r\n                              ).format(\"MM/DD/YYYY\")}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_name}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address2}\r\n                              {condionVehicleDetails?.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_state}-\r\n                              {condionVehicleDetails?.location_zip}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_phone}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.doors}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.driveTrain}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              Master: {condionVehicleDetails?.keys.keys}/ Valet:{\" \"}\r\n                              {condionVehicleDetails?.keys.valet}\r\n                            </span>\r\n                            <span className=\"textSize\">\r\n                              Smart Key: {condionVehicleDetails?.keys.smartKey}{\" \"}\r\n                              / Remotes:\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.grounding_mileage ? (\r\n                                <CurrencyFormat\r\n                                  value={\r\n                                    condionVehicleDetails.grounding_mileage\r\n                                  }\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" MI\"}\r\n                                />\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {\" \"}\r\n                              {condionVehicleDetails?.account_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.odor == \"true\"\r\n                                ? \"Yes\"\r\n                                : \"None\"}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <Box className=\"accessoriestextStyle\">\r\n                          {accessoryDetails.length > 0 &&\r\n                            accessoryDetails.map((list, index) => {\r\n                              return (\r\n                                <Box\r\n                                  className=\"accessoriestinlineextStyle\"\r\n                                  key={index}\r\n                                >\r\n                                  <Typography>\r\n                                    {list.description.toLowerCase()}\r\n                                  </Typography>\r\n                                </Box>\r\n                              );\r\n                            })}\r\n                        </Box>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                {/* <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell> */}\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"left\"> </TableCell> */}\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tires</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>Wheel</TableCell>\r\n                                <TableCell>Tread Depth </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    {/* <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell> */}\r\n                                    <TableCell align=\"left\">\r\n                                      {\r\n                                        list.inspectionWheelTiresId\r\n                                          .tire_location\r\n                                      }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.wheel}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <Grid>\r\n                    <div className=\"imageReportSection\">\r\n                      <img src=\"TMZ.png\" alt=\"Mazda Logo\" width=\"100%\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <div className=\"pendingReport\">\r\n                      <span>Pending Inspection Report</span>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Grid container spacing={1}>\r\n                    <div className=\"ConditionReportSection\">\r\n                      <Grid item xs={7}>\r\n                        <div className=\"reportTitle\">\r\n                          <span>\r\n                            {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                          </span>\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        <div className=\"inspectionStatusWarning\">\r\n                          <span className=\"BadgeValue\">Inspection pending</span>\r\n                        </div>\r\n                      </Grid>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.currentPayoffAmount ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails?.currentPayoffAmount\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails.totalOutstandingRemainingPayments &&\r\n                              condionVehicleDetails.residual ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails.residual +\r\n                                    condionVehicleDetails.totalOutstandingRemainingPayments\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                      </Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.grounding_mileage ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails.grounding_mileage\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" MI\"}\r\n                                />\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {\" \"}\r\n                              {condionVehicleDetails?.account_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n\r\n                        <span className=\"pendingReport\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                {/* <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell> */}\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"left\"> </TableCell> */}\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tires</Typography>\r\n                        <hr />\r\n                        <span className=\"pendingReport\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n          <ViewDetailedReport\r\n            DamageDetails={DamageDetails}\r\n            open={open}\r\n            close={handleClose}\r\n            {...condionVehicleDetails}\r\n          />\r\n        </div>\r\n        <div className=\"purchasesidebar\">\r\n          {purchaseSection ? (\r\n            <PurchasedPricingSideBar\r\n              onPurchaseVehical={handlePurchaseVehical}\r\n              closePassVehiclePop={handleClosePassVehicle}\r\n              isConfirmPurchase={isConfirmPurchase}\r\n              vin={vin}\r\n              groundingId={vehicleDetails?.groundingId}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Box>\r\n        <TransactionModal\r\n          transactionInfo={transactionInfo}\r\n          type={transactionPopupType}\r\n          open={openTransactionPopup}\r\n          onClose={() => {\r\n            setOpenTransactionPopup(false);\r\n          }}\r\n          confirmPurchase={handleConfirmPurchase}\r\n          handleContinue={handleContinue}\r\n        ></TransactionModal>\r\n      </Box>\r\n\r\n      <Box>\r\n        <PassOnVehicle\r\n          open={isPassVehicalPop}\r\n          close={handleClosePassVehicle}\r\n          vin={vin}\r\n          groundingId={vehicleDetails?.groundingId}\r\n          reload={() => {}}\r\n        />\r\n      </Box>\r\n      {/* reload={() => {\r\n          getVehicleDetails();\r\n          props.fireEvents();\r\n        }} */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js",["331"],"import React, { useState } from 'react';\r\nimport ListingPage2 from './purchasedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage2 {...props}></ListingPage2>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js",["332"],"import React, { useState } from 'react';\r\nimport ListingPage1 from './passedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage1 {...props}></ListingPage1>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login2.js",["333","334","335","336","337","338","339","340","341"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js",["342","343","344","345","346"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../../components/SearchText/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport GroundVehicleMFS from \"./GroundVehicleMFS\";\r\nimport GroundVehiclePLV from \"./GroundVehiclePLV\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { getAuthToken, getVehicleDetails } from \"../../service/api\";\r\n\r\nexport default function VINSearch(props) {\r\n  const placeholder = \"Enter last 6 digits of VIN\";\r\n  const [token, setToken] = useState(\"\");\r\n  const [vehicleResponse, setVehicleResponse] = useState({});\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [reasonForReturn, setreasonForReturn] = useState(\r\n    \"Ground_Vehicle_for_MFS\"\r\n  );\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getAuthToken();\r\n    setToken(tokenResponse.data?.access_token);\r\n  });\r\n  async function getVehDetails(value) {\r\n    let apiResponse = await getVehicleDetails(token, value);\r\n    setVehicleResponse(apiResponse.data);\r\n    if (apiResponse.data.vehicleInfo?.length > 0) {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    } else {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    }\r\n  }\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n\r\n    let value = e?.target?.value;\r\n    console.log(value);\r\n    getVehDetails(value);\r\n\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n  const handleReasonChange = (e) => {\r\n    console.log(e.target.value);\r\n    setreasonForReturn(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"grounding\">\r\n        <div className=\"searchLabelHeader\">Vehicle Grounding</div>\r\n        <div className=\"searchLabel\">Begin Vehicle Lease return process</div>\r\n        <Search\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n        {!validSearch && suggestions && (\r\n          <div className=\"noMatchesFrame\">\r\n            <div className=\"noMatches\">VIN not found/Inactive</div>\r\n          </div>\r\n        )}\r\n\r\n        {validSearch && (\r\n          <div>\r\n            <div className=\"carRecordFound\">\r\n              <div className=\"vehicleMakeModel\">\r\n                <span>\r\n                  {vehicleResponse?.vehicleInfo[0]?.brand}\r\n                  {\" & \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.model}\r\n                  {\" | \"}{\" \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.ext_color}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Customer Return date\r\n              </InputLabel>\r\n              <TextField\r\n                id=\"date\"\r\n                type=\"date\"\r\n                defaultValue=\"00/00/0000\"\r\n                className=\"customerReturnDate\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Reason for Return\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Reason for Return\"\r\n                value={reasonForReturn}\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"age\" }}\r\n                className=\"customerReturnDate\"\r\n                onChange={(event) => handleReasonChange(event)}\r\n              >\r\n                <MenuItem value={\"Purchase_Leased_Vehicle\"}>\r\n                  Purchase Leased Vehicle\r\n                </MenuItem>\r\n                <MenuItem value={\"Ground_Vehicle_for_MFS\"}>\r\n                  Ground Vehicle for MFS\r\n                </MenuItem>\r\n                <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\r\n              </Select>\r\n            </div>\r\n            {reasonForReturn === \"Ground_Vehicle_for_MFS\" && (\r\n              <>\r\n                {\" \"}\r\n                <GroundVehicleMFS />\r\n                <div className=\"odometerBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Odometer Reading\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Enter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Renter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"keysReturnedBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Number of Keys Returned\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Master Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Valet Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                </div>\r\n                <div className=\"vehicleCondition\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Vehicle Condition\r\n                  </InputLabel>\r\n                  <div className=\"Rectangle-3\">\r\n                    <FormControlLabel control={<Radio />} label=\"Drivable\" />\r\n                  </div>\r\n                  <div className=\"Rectangle-3\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Not Drivable\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"pickUpLocation\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Pick Up Location\r\n                  </InputLabel>\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 2\"\r\n                    />\r\n                  </div>\r\n                </div>{\" \"}\r\n              </>\r\n            )}\r\n\r\n            {(reasonForReturn === \"Purchase_Leased_Vehicle\" ||\r\n              reasonForReturn === \"Trade_In\") && (\r\n              <>\r\n                <GroundVehiclePLV />\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js",["347","348","349","350","351","352","353","354","355","356"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewDetailedReport from \"./ViewDetailedReport\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  getPassedList1,\r\n  getInspectionDamageDetailsApi,\r\n  getOEMBuildDetailsApi,\r\n} from \"../service/api\";\r\nimport {\r\n  getInspectionVehicleDetails,\r\n  getInspectionAccessoryDetails,\r\n  getInspectionWheelTiresDetails,\r\n} from \"../service/api\";\r\nimport ManualPricingSideBar from \"../components/ManualPricingSideBar\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport TransactionModal from \"./TransactionModal\";\r\n\r\nexport default function ConditionReportRequests(props) {\r\n  let listOfItem = [\r\n    \"VIN\",\r\n    \"Engine\",\r\n    \"Door\",\r\n    \"Body Style\",\r\n    \"Transmission\",\r\n    \"Drive Train\",\r\n    \"Interior type\",\r\n    \"Interior Color\",\r\n    \"Keys\",\r\n    \"Interior Type\",\r\n    \"Odor\",\r\n    \"Grounding Mileage\",\r\n    \"Account Type\",\r\n  ];\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});\r\n  const [accessoryDetails, setAccessoryDetails] = React.useState({});\r\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\r\n  const [vin, setVin] = React.useState(props?.match?.params?.vin);\r\n  const [pageName, setPageName] = React.useState(\r\n    props?.location?.state?.pageName\r\n  );\r\n  const [inspectionId, setInspectionId] = React.useState([]);\r\n  const [VehicleResponse, setVehicleResponse] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const [DamageDetails, setDamageDetails] = useState([]);\r\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n\r\n  // const [openTransactionPopup, setOpenTransactionPopup] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getOEMBuildDetails();\r\n    getConditionVehicleDetails();\r\n    getVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getOEMBuildDetails() {\r\n    let apiResponse = await getOEMBuildDetailsApi(vin);\r\n    setOEMBuildDetailsData(apiResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionDamageDetails();\r\n  }, []);\r\n\r\n  async function getInspectionDamageDetails() {\r\n    let getInspectionDamageDetailsaApiResponse =\r\n      await getInspectionDamageDetailsApi(inspectionId, vin);\r\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\r\n  }\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPassedList1();\r\n    setVehicleResponse(apiResponse.data.data);\r\n    console.log(VehicleResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionAccessory(inspectionId);\r\n    getInspectionWheelTires(inspectionId);\r\n  }, [inspectionId]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n    setInspectionId(apiResponse.data.inspection_id);\r\n  }\r\n\r\n  async function getInspectionAccessory(inspectionId) {\r\n    let apiResponse = await getInspectionAccessoryDetails(inspectionId);\r\n    setAccessoryDetails(apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionWheelTires(inspectionId) {\r\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\r\n    setWheelTiresDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"conditionTopBar\">\r\n        <Box p={1} textAlign=\"right\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/adminInventoryRequests\",\r\n              state: { pageName: pageName },\r\n            }}\r\n          >\r\n            {pageName}\r\n          </Link>\r\n        </Box>\r\n      </div>\r\n      <Box p={2} pt={14}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4}>\r\n            <MyGallery {...condionVehicleDetails}/>\r\n            <Grid container className=\"ConditionCardBody\">\r\n              <div className=\"damageTitle\">\r\n                <span>Damage Report</span>\r\n              </div>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Exterior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.exteriorCost\r\n                        ? DamageDetails.exteriorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Interior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.interiorCost\r\n                        ? DamageDetails.interiorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Mechanical total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.maintainenceCost\r\n                        ? DamageDetails.maintainenceCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className=\"detailedReport\"\r\n                  onClick={handleOpen}\r\n                >\r\n                  View Full Detailed Report\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className=\"disclaimer\">\r\n                  Disclaimer: Damage estimates are included for reference and\r\n                  may not be reflective of the actual repair costs\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"LabelTextTextArea\">Announcements</div>\r\n            <TextareaAutosize\r\n              className=\"inputFieldTextArea\"\r\n              aria-label=\"maximum height\"\r\n              placeholder=\"Maximum 4 rows\"\r\n              defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" py={2}>\r\n              <div className=\"reportTitle\">\r\n                <span>MAZDA SD 2019 </span>\r\n              </div>\r\n              <span className=\"ConditionReportInspection\">\r\n                <span className=\"BadgeValue\">Inspection Complete</span>\r\n              </span>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Payoff</div>\r\n                    <div className=\"smallCardBody\">$12,000.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle1\">Residual + Remaining</div>\r\n                    <div className=\"smallCardBody\">$11,250.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Market Based</div>\r\n                    <div className=\"smallCardBody\">$10,500.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.condition_grade}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Odometer</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.inspection_mileage}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={12}>\r\n                <Box mt={2}>\r\n                  <Card>\r\n                    <Box p={2}>\r\n                      <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.inspection_date}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address2}\r\n                              {condionVehicleDetails.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_code}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">9,000 MI</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableBody>\r\n                              <TableRow key=\"10074\">\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {accessoryDetails.item_id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  {accessoryDetails.description}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell align=\"right\">Brand</TableCell>\r\n                                <TableCell align=\"right\">Size</TableCell>\r\n                                <TableCell align=\"right\">Wheel</TableCell>\r\n                                <TableCell align=\"right\">Tread Depth</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {wheelTiresDetails?.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"right\">Description</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  Package Details\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {[\"1\"].map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"> </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Box>\r\n                  </Card>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ManualPricingSideBar />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <ViewDetailedReport\r\n          DamageDetails={DamageDetails}\r\n          open={open}\r\n          close={handleClose}\r\n        />\r\n      </Box>\r\n\r\n      {/* <Box>\r\n        <TransactionModal\r\n        type={'confirm'}\r\n          open={openTransactionPopup}\r\n          onClose={() => {\r\n            setOpenTransactionPopup(false);\r\n          }}\r\n        ></TransactionModal>\r\n      </Box> */}\r\n\r\n\r\n\r\n      {/* <div className='conditionPageCardReports'>\r\n                <Grid item xs={12}>\r\n                    <div className='conditionTopBar'>\r\n                        <Grid xs={12} className='conditionTopBarLayout'>\r\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                    <Grid item xs={5}>\r\n                        <MyGallery />\r\n                        <Grid container className=\"ConditionCardBody\">\r\n                            <div className='damageTitle'>\r\n                                <span>Damage Report</span>\r\n                            </div>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Exterior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.exteriorCost ? DamageDetails.exteriorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Interior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.interiorCost ? DamageDetails.interiorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Mechanical total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.maintainenceCost ? DamageDetails.maintainenceCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\r\n                                    View Full Detailed Report\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <div className=\"disclaimer\">\r\n                                    Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"LabelTextTextArea\">Announcements</div>\r\n                        <TextareaAutosize\r\n                            className=\"inputFieldTextArea\"\r\n                            aria-label=\"maximum height\"\r\n                            placeholder=\"Maximum 4 rows\"\r\n                            defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                        <div className='ConditionReportSection'>\r\n                            <div className='reportTitle'>\r\n                                <span>MAZDA SD 2019 </span>\r\n                            </div>\r\n                            <span className='ConditionReportInspection'>\r\n                                <span className='BadgeValue'>Inspection Complete</span>\r\n                            </span>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Payoff\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $12,000.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\" >\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle1\">\r\n                                            Residual + Remaining\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $11,250.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Market Based\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $10,500.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Inspection Grade\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.condition_grade}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Odometer\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.inspection_mileage}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>\r\n                            <Card className=\"vehicleSectionCR\">\r\n                                <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                                <hr />\r\n                                <CardContent>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  VIN  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{vin}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Date  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.inspection_date}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Location  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span >\r\n                                                    .\r\n                                                </span>\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span > .   </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Consignor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Engine  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Door  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Body Style  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Transmission  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Drive Train  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Exterior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Keys  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Grounding Mileage  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">9,000 miles</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Account Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Odor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n\r\n                                </CardContent>\r\n\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Accessories</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableBody>\r\n                                                <TableRow key=\"10074\">\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {accessoryDetails.item_id}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\r\n                                             \r\n                                                </TableRow>\r\n                                               \r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Location</TableCell>\r\n                                                    <TableCell align=\"right\">Brand</TableCell>\r\n                                                    <TableCell align=\"right\">Size</TableCell>\r\n                                                    <TableCell align=\"right\">Wheel</TableCell>\r\n                                                    <TableCell align=\"right\">Tread Depth</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {wheelTiresDetails?.map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{list.tire_location}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.manufracturer}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.size}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Build Data</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Code</TableCell>\r\n                                                    <TableCell align=\"right\">Description</TableCell>\r\n                                                    <TableCell align=\"right\">Package Details</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {['1'].map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {list}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\"></TableCell>\r\n                                                            <TableCell align=\"right\"> </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n\r\n                                </CardContent>\r\n                                <div className=\"disclaimerVRS\">\r\n                                    Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\r\n                                </div>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\r\n            </div>\r\n            <ManualPricingSideBar /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js",["357","358","359","360","361","362","363"],"import React, { useState } from \"react\";\r\nimport Search from \"./Search/Search\";\r\n\r\nlet styles = {\r\n  container: {\r\n    width: \"371px\",\r\n    height: \"270px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n\r\n  VehicleMakeModel: {\r\n    width: \"271px\",\r\n    height: \"24px\",\r\n    margin: \"0 69px 0 0\",\r\n    \"font-family\": \"SalesforceSans\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"bold\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#080707\",\r\n  },\r\n  line: {\r\n    width: \"350px\",\r\n    height: \"2px\",\r\n    margin: \"4px 2px 11px 2px\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n\r\n  label: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  value: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n    \"font-weight\": \"normal\",\r\n  },\r\n\r\n  imagebox: {\r\n    width: \"180px\",\r\n    height: \"160px\",\r\n    margin: \"0px 1px 2px 2px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n  search: {\r\n    width: \"371px\",\r\n    height: \"32px\",\r\n    \"margin-top\": \"10px\",\r\n    padding: \" 0 0 0px\",\r\n    \"border-radius\": \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"flex\",\r\n    \"flex-direction\": \"row\",\r\n  },\r\n  noMatchesFrame: {\r\n    width: \"371px\",\r\n    height: \"76px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"block\",\r\n    margin: \"1% 0 0 40%\",\r\n  },\r\n  noMatches: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  searchSuggestionFrame: {\r\n    width: \"371px\",\r\n    height: \"200px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  searchSuggestion: {\r\n    width: \"350px\",\r\n    height: \"35px\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n  searchLabel: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  imageContainer: {\r\n    width: \"371px\",\r\n    height: \"160px\",\r\n    margin: \"48px 54px 16px\",\r\n    //\"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  imageContainer1: {\r\n    display: \"block\",\r\n    \"margin-left\": \"40%\",\r\n  },\r\n  alighnCenterItems: {\r\n    background: \"#f3f2f2\",\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    right: \"0px\",\r\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  centerSection: {\r\n    marginTop: \"12%\",\r\n  },\r\n};\r\nconst VehicleInformation = (props) => {\r\n  const searchBox = styles.search;\r\n  const placeholder = \"Enter VIN\";\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const accountInformation = props.accountInformation;\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //      //need to filter search data based on the backend data\r\n  //   });\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n    let value = e?.target?.value;\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.alighnCenterItems}>\r\n      <div style={styles.centerSection}>\r\n        <img\r\n          src=\"car.png\"\r\n          width=\"371px\"\r\n          height=\"160px\"\r\n          style={styles.imageContainer1}\r\n        ></img>\r\n      </div>\r\n      <div style={{ marginLeft: \"40%\" }}>\r\n        <div style={styles.searchLabel}>Search Vehicles</div>\r\n        <Search\r\n          searchBox={searchBox}\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n      </div>\r\n      {validSearch && (\r\n        <div style={styles.container}>\r\n          <div style={styles.VehicleMakeModel}>\r\n            {\" \"}\r\n            Vehicle Make & Model Name | Year{\" \"}\r\n          </div>\r\n          <div style={styles.line}></div>\r\n          <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n            <div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Maturity Date </div>{\" \"}\r\n                <div style={styles.value}> 00/00/0000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name</div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Name </div>{\" \"}\r\n                <div style={styles.value}> Lease Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Number </div>{\" \"}\r\n                <div style={styles.value}> 00000000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Ream Payments </div>{\" \"}\r\n                <div style={styles.value}> $000.00 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Color </div>{\" \"}\r\n                <div style={styles.value}> Color Name </div>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.imagebox}>\r\n              <img />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!validSearch && !suggestions && (\r\n        <div style={styles.noMatchesFrame}>\r\n          <div style={styles.noMatches}>No Matches Available</div>\r\n        </div>\r\n      )}\r\n      {suggestions && (\r\n        <div style={styles.searchSuggestionFrame}>\r\n          {searchSuggestions.map((name, index) => (\r\n            <div\r\n              key={index}\r\n              style={styles.searchSuggestion}\r\n              onClick={() => setSearchData(index)}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default VehicleInformation;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SwipableFilter from \"./SwipableFilter\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { awaitManualPricing } from \"../service/api\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeadFont: {\r\n    fontWeight: 600,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  Grounding_Region,\r\n  Inspection_Date,\r\n  Inspection_Status,\r\n  Action_Code\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    Grounding_Region,\r\n    Inspection_Date,\r\n    Inspection_Status,\r\n    Action_Code,\r\n  };\r\n}\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n];\r\n\r\nexport default function ManualPricing(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [vehicleList, setVehicleList] = useState(rows);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n  const [manualPricingList, setManualPricingList] = useState([]);\r\n  const [manualPricingListRows, setManualPricingListRows] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n\r\n  useEffect(() => {\r\n    getManualPricingDetails();\r\n  }, []);\r\n  async function getManualPricingDetails() {\r\n    let apiResponse = await awaitManualPricing();\r\n    console.log(\"ManualPricing------->\", apiResponse.data);\r\n    setManualPricingListRows(apiResponse.data);\r\n  }\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Manual Pricing\",\r\n    });\r\n  };\r\n\r\n  const fetchDataBasedOnSearchValue = (searchText) => {\r\n    const vehicleListCopy = [...rows];\r\n    if (searchText) {\r\n      const filteredList = vehicleListCopy.filter((row) => {\r\n        return row.VIN.indexOf(searchText) !== -1;\r\n      });\r\n      setVehicleList(filteredList);\r\n    } else {\r\n      setVehicleList(rows);\r\n    }\r\n  };\r\n\r\n  const fetchDataBasedOnFilters = (filterInput) => {\r\n    let vehicleListCopy = [...rows];\r\n    if (filterInput.vin) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.VIN.indexOf(filterInput.vin) !== -1 ||\r\n          (row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo)\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.yearFrom && filterInput.yearTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.make) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Make.indexOf(filterInput.make) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionStatus) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.groundingRegion) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.auctionCode) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        const dateTs = Date.parse(row.Inspection_Date);\r\n        return (\r\n          dateTs >= Date.parse(filterInput.inspectionDateFrom) &&\r\n          dateTs <= Date.parse(filterInput.inspectionDateTo)\r\n        );\r\n      });\r\n    }\r\n    setVehicleList(vehicleListCopy);\r\n  };\r\n\r\n  const resetFilterList = () => {\r\n    setVehicleList(rows);\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    console.log(\"data\", data);\r\n    setManualPricingList(data);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilter\r\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\r\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\r\n          resetFilterList={resetFilterList}\r\n        />\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Grounding Region\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Date\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Status\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Action Code\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {manualPricingList?.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.vin}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\r\n                  <TableCell align=\"center\">{row.make}</TableCell>\r\n                  <TableCell align=\"center\">{row.model}</TableCell>\r\n                  <TableCell align=\"center\">{row.groundingRegion}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionStatus}</TableCell>\r\n                  <TableCell align=\"center\">{row.actionCode}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {manualPricingListRows.length != 0 ? (\r\n          <Paginator\r\n            label=\"Result per page\"\r\n            showItemsPerPage={10}\r\n            pages={[10, 20, 30, 40]}\r\n            data={manualPricingListRows}\r\n            onChangePage={onChangePage}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"import React, { useState ,useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport SwipableFilterRRM from \"./SwipableFilterRRM\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport {RRMList} from \"../service/api\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  auction,\r\n  mmr,\r\n  mmb,\r\n  percent,\r\n  priced_rate,\r\n  priced_by,\r\n  approve\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    auction,\r\n    mmr,\r\n    mmb,\r\n    percent,\r\n    priced_rate,\r\n    priced_by,\r\n    approve,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0000000000000001\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000002\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000003\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000004\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000005\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000006\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000007\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000008\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000009\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000010\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000011\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000012\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000013\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000014\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000015\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000016\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000017\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000018\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000019\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000020\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000021\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000022\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000023\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000024\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000025\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000026\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000027\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000028\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000029\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000030\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000031\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000032\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000033\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000034\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000035\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000036\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000037\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000038\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000039\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000040\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000041\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000042\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000043\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000044\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000045\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000046\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000047\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000048\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000049\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000050\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000051\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000052\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000053\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000054\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000055\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000056\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000057\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000058\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000059\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000060\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000061\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000062\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000063\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000064\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000065\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000066\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000067\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000068\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000069\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000070\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000071\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000072\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n];\r\n\r\nexport default function RRMApproval(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [rrmList, setRrmList] = useState([]);\r\n  const [rrmListRows, setRrmListRows] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n\r\n  useEffect(() => {\r\n    getRRMApprovalDetails();\r\n  }, []);\r\n  async function getRRMApprovalDetails() {\r\n    let apiResponse = await RRMList();\r\n    console.log('RRMList------->', apiResponse)\r\n    setRrmListRows(apiResponse.data);\r\n  }\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"RRMApproval\",\r\n    });\r\n  };\r\n  const onChangePage = (data) => {\r\n    setRrmList(data);\r\n  };\r\n\r\n  const onChangeApprove = (row) => {\r\n    // let updatedRowsPerPage = rrmList.map((item) => {\r\n    //   if (item.vin === row.vin) {\r\n    //     item.approve = !item.approve;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // setRrmList(updatedRowsPerPage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilterRRM />\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Auction\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MMR\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MBP\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    %\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced rate\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced By\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  Approve\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rrmList?.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.vin}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\r\n                  <TableCell align=\"center\">{row.make}</TableCell>\r\n                  <TableCell align=\"center\">{row.model}</TableCell>\r\n                  <TableCell align=\"center\">{row.auction}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmr}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmb}</TableCell>\r\n                  <TableCell align=\"center\">{row.percent}</TableCell>\r\n                  <TableCell align=\"center\">{row.pricedDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.pricedBy}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {/* {row.approve} */}\r\n                   <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={false}\r\n                          onChange={() => onChangeApprove(row)}\r\n                          checkedIcon={<Check className={classes.checkedIcon} />}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n       {rrmListRows.length != 0? <Paginator\r\n          label=\"Result per page\"\r\n          showItemsPerPage={10}\r\n          pages={[10, 20, 30, 40]}\r\n          data={rrmListRows}\r\n          onChangePage={onChangePage}\r\n        /> : null }\r\n      </div>\r\n    </>\r\n  );\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SwipableFilterMileage from \"./SwipableFilterMileage\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { getMileageDiscList } from \"../service/api\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\n// function createVehicleData(\r\n//   VIN,\r\n//   Year,\r\n//   Make,\r\n//   Model_Trim,\r\n//   region,\r\n//   ground_mileage,\r\n//   inspection_mileage,\r\n//   difference\r\n// ) {\r\n//   return {\r\n//     VIN,\r\n//     Year,\r\n//     Make,\r\n//     Model_Trim,\r\n//     region,\r\n//     ground_mileage,\r\n//     inspection_mileage,\r\n//     difference,\r\n//   };\r\n// }\r\n\r\n// const rows = [\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n//   createVehicleData(\r\n//     \"0000000000000000\",\r\n//     \"2021\",\r\n//     \"Make Name\",\r\n//     \"Model/Trim\",\r\n//     \"Region Label\",\r\n//     \"00,0000\",\r\n//     \"00,0000\",\r\n//     \"00/00/000\"\r\n//   ),\r\n// ];\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function MileageDisc(props) {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n  const [mdList, setMdList] = useState([]);\r\n  const [mdListRows, setMdListRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMdList();\r\n  }, []);\r\n  async function getMdList() {\r\n    let apiResponse = await getMileageDiscList();\r\n    console.log(\"RRMList------->\", apiResponse);\r\n    setMdListRows(apiResponse.data);\r\n  }\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Mileage Discrepencies\",\r\n    });\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    setMdList(data);\r\n  };\r\n  return (\r\n    <>\r\n      <SwipableFilterMileage />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className={classes.tableHeaderRow}>\r\n            <TableRow className={classes.tableHeadFont}>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  VIN\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Year\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Make\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Model/Trim\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Region\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Grounding Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Inspection Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Differnence\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {mdList.map((row) => (\r\n              <TableRow key={row.model} className={classes.tableRow}>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"textStyle\">\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={() => openConditionReport(row.vin)}\r\n                    >\r\n                      {\" \"}\r\n                      {row.vin}\r\n                    </a>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.modelyear}</TableCell>\r\n                <TableCell align=\"center\">{row.make}</TableCell>\r\n                <TableCell align=\"center\">{row.model}</TableCell>\r\n                <TableCell align=\"center\">{row.region}</TableCell>\r\n                <TableCell align=\"center\">{row.inspectionmileage}</TableCell>\r\n                <TableCell align=\"center\">{row.groundingmileage}</TableCell>\r\n                <TableCell align=\"center\">{row.mileagediff}</TableCell>\r\n              </TableRow>\r\n           ))}\r\n          </TableBody>\r\n        </Table>\r\n        {mdListRows.length != 0 ? (\r\n          <Paginator\r\n            label=\"Result per page\"\r\n            showItemsPerPage={10}\r\n            pages={[10, 20, 30, 40]}\r\n            data={mdListRows}\r\n            onChangePage={onChangePage}\r\n          />\r\n        ) : null}\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getDealerVehicleCount } from \"../service/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"0px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"1px\",\r\n  },\r\n  activeNavLink: {\r\n    background: \"#e7f3fd\",\r\n    borderLeft: \"3px solid #407ed2\",\r\n  },\r\n  activeNavdrop: {\r\n    border: \"1px solid #407ed2\",\r\n  },\r\n}));\r\n\r\nlet sidebarItems = [\r\n  {\r\n    label: \"Grounded\",\r\n    open: true,\r\n    childs: [\r\n      {\r\n        label: \"Grounded\",\r\n        link: \"/grounded\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Passed\",\r\n        link: \"/passed\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Purchased\",\r\n        link: \"/purchased\",\r\n        badge: null,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Admin\",\r\n    open: true,\r\n    childs: [\r\n      {\r\n        label: \"Vehicle Search\",\r\n        link: \"/adminSearch\",\r\n        badge: null,\r\n      },\r\n      {\r\n        label: \"Inventory Requests\",\r\n        link: \"/adminInventoryRequests\",\r\n        badge: null,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function NewSidebar(props) {\r\n  const location = useLocation();\r\n  const [list, setList] = React.useState([]);\r\n  const [open, setOpen] = React.useState([]);\r\n  const [activeChild, setActiveChild] = React.useState(location.pathname);\r\n  const classes = useStyles();\r\n\r\n  useEffect(async () => {\r\n    setActiveChild(location.pathname);\r\n    let DealerVehicleCountRes = await getDealerVehicleCount();\r\n    sidebarItems.map((item) => {\r\n      item.childs.map((child) => {\r\n        if (activeChild == child.link) {\r\n          item.open = true;\r\n        }\r\n\r\n        if (child.link == \"/grounded\") {\r\n          child.badge = DealerVehicleCountRes?.data.data.groundedVehicleCount;\r\n        }\r\n        if (child.link == \"/passed\") {\r\n          child.badge = DealerVehicleCountRes?.data.data.passedVehicleCount;\r\n        }\r\n        if (child.link == \"/purchased\") {\r\n          child.badge = DealerVehicleCountRes?.data.data.purchasedVehicleCount;\r\n          localStorage.setItem(\"purchaseCount\", DealerVehicleCountRes?.data.data.purchasedVehicleCount);\r\n        }\r\n      });\r\n    });\r\n    if (localStorage.getItem(\"dealerCode\")) {\r\n      console.log(\"dealerCode\");\r\n\r\n      sidebarItems = sidebarItems.filter((row) => row.label != \"Admin\");\r\n    }\r\n    setList([...sidebarItems]);\r\n  }, [props.stateUpdate]);\r\n\r\n  const handleClick = (item) => {\r\n    let updatedList = list.map((litem) => {\r\n      if (litem.label === item.label) {\r\n        litem.open ? (litem.open = false) : (litem.open = true);\r\n      }\r\n      return litem;\r\n    });\r\n    setList(updatedList);\r\n  };\r\n\r\n  const handleClickMakeActive = (child) => {\r\n    console.log('start grounding page', new Date())\r\n    setActiveChild(child.link);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.sideBarCSS}>\r\n      {list &&\r\n        list.map((item, index) => (\r\n          <List\r\n            key={index}\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n          >\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                handleClick(item);\r\n              }}\r\n              // className={`${item.open ? classes.activeNavdrop : ''}`}\r\n            >\r\n              {item.open ? <ExpandLess /> : <ExpandMore />}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n            <Collapse in={item.open} timeout=\"auto\" unmountOnExit>\r\n              <List\r\n                component=\"div\"\r\n                disablePadding\r\n                // className={classes.sideBarCSS}\r\n              >\r\n                {item.childs.map((child) => (\r\n                  <ListItem\r\n                    component={Link}\r\n                    to={child.link}\r\n                    key={child.link}\r\n                    className={`\r\n                     ${\r\n                       activeChild == child.link ? classes.activeNavLink : \"\"\r\n                     }   \r\n                     ${\r\n                       activeChild == \"/\"\r\n                         ? child.link == \"/grounded\"\r\n                           ? classes.activeNavLink\r\n                           : \"\"\r\n                         : \"\"\r\n                     }\r\n                    `}\r\n                    onClick={() => {\r\n                      handleClickMakeActive(child);\r\n                    }}\r\n                  >\r\n                    <ListItemText primary={child.label} />\r\n                    {child.badge ? (\r\n                      <Chip className={classes.root} label={child.badge}></Chip>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Collapse>\r\n          </List>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js",["430","431","432"],"import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CustomizedInputBase from \"./CustomisedInput\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Divider } from \"@material-ui/core\";\r\n// import SearchText from './SearchText/Search';\r\n\r\nconst AdminVehicleSearch = (props) => {\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n\r\n  const handleSearch = (text) => {\r\n    setSearchText(text);\r\n  };\r\n\r\n  const handleSubmitbtn = () => {\r\n    if (searchText) {\r\n      props.history.push(\"/adminSearchResult\", {\r\n        vin: searchText\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"adminSearchCard\">\r\n      <CardContent className=\"adminSearcheader\">\r\n        <img className=\"cover\" src=\"searchCar.jpeg\" />\r\n        <div className=\"adminSearcheaderColor\">\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            Vehicle Search\r\n          </Typography>\r\n          <Typography variant=\"p\" component=\"p\">\r\n            Search for a vehicle, or start with any of the menu items on the\r\n            left.\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent className=\"adminSearchCardBody\">\r\n        <CustomizedInputBase\r\n          searchdetails={(SearchText) => handleSearch(SearchText)}\r\n        />\r\n        <Button variant=\"contained\" onClick={handleSubmitbtn} color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\nexport default AdminVehicleSearch;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js",["433","434","435","436"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AdminDetailedReport from \"../pages/AdminDetailedReport\";\r\nimport StatusHistory from \"./StatusHistory\";\r\nimport UpdateMileage from \"./UpdateMileage\";\r\nimport MileagePricingSideBar from \"./MileagePricingSideBar\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function VehicleSearchTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [vin, setVin] = React.useState(props.vin);\r\n  // const { inspectiondata } = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className=\"topBarAdmin\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          style={{ marginLeft: \"35%\" }}\r\n        >\r\n          <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\r\n          <Tab label=\"Status History\" {...a11yProps(1)} />\r\n          <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n       {vin &&  \r\n       <AdminDetailedReport\r\n          // inspectiondata={inspectiondata}\r\n          vin={vin}\r\n          value={props.hideShow(value)}\r\n        />\r\n    }\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <div className=\"adminTabsSection\">\r\n          <StatusHistory \r\n          //  inspectiondata={inspectiondata}\r\n           value={props.hideShow(value)}\r\n           vin={vin}\r\n           />\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Box  className=\"adminTabsSection\">\r\n          <UpdateMileage \r\n          //  inspectiondata={inspectiondata}\r\n        onGetConditionVehicleDetails = {props.onGetConditionVehicleDetails}\r\n        value={props.hideShow(value)} vin={vin}  />\r\n        </Box>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js",["437","438","439","440"],"import React, { useEffect, useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getNotes, insertNotes } from \"../service/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\nexport default function NotesSection(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const [listOfNotes, setListOfNotes] = useState([]);\r\n  const [noteval, setNoteVal] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getNotesByVin();\r\n  }, [props.vin]);\r\n\r\n  async function getNotesByVin() {\r\n    let apiResponse = await getNotes(props.vin);\r\n    console.log(\"getNotes==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setListOfNotes(apiResponse.data);\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (noteval) {\r\n      insertNotes({ vin: props.vin, notes: noteval }).then((res) => {\r\n        if (res.data === \"Success\") {\r\n          getNotesByVin();\r\n          setNoteVal(\"\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notesSection\">\r\n      <ListItem className=\"notesSectionHeader\">NotesSection</ListItem>\r\n      <Box p={2}>\r\n        <ListItem>\r\n          <TextareaAutosize\r\n            className=\"notesText notesTextContent\"\r\n            placeholder=\"Notes...\"\r\n            value={noteval}\r\n            onChange={(e) => {\r\n              setNoteVal(e.target.value);\r\n            }}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <Box ml=\"auto\">\r\n            <Button\r\n              onClick={handleClick}\r\n              className=\"closeButton\"\r\n              color=\"secondary\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Box>\r\n        </ListItem>\r\n        <Box py={2}>\r\n          <Divider variant=\"middle\" className=\"deviderred\" />\r\n        </Box>\r\n\r\n        {listOfNotes &&\r\n          listOfNotes.map((item, index) => (\r\n            <ListItem key={index}>\r\n              <p className=\"notesSectionContent\">{item.notes}</p>\r\n            </ListItem>\r\n          ))}\r\n\r\n        {/* <ListItem>\r\n          <p className=\"notesSectionContent\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </ListItem>\r\n        <ListItem>\r\n          <p className=\"notesSectionContent\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n          </p>\r\n        </ListItem> */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js",["441","442","443","444","445","446"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper , Box} from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 300,\r\n        height: 35,\r\n        margin: '7px 8px',\r\n        border: \"1px solid #ccc\",\r\n        borderRadius:\"4px\"\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: '14px',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function AdminSearchHeader(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n    const handleSearchText = (value) => {\r\n        console.log(props)\r\n        props.searchdetails(value);\r\n        setSearchtext(value)\r\n        \r\n    }\r\n    if(!localStorage.getItem('dealerCode')){\r\n    return (\r\n        <Box component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" >\r\n                <SearchIcon color=\"disabled\" fontSize=\"small\" />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Global Search by VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => props.searchdetails(evt.target.value)}\r\n            />\r\n        </Box>\r\n    );\r\n    }\r\n    else \r\n    return (  \r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js",["447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js",["467","468","469","470","471","472","473","474","475","476","477"],"import React, { useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\nconst BlueTooltip = withStyles({\r\n  tooltip: {\r\n    width: \"185px\",\r\n    height: \"68px\",\r\n    fontSize: \"12px\",\r\n    lineHeight: 1.6,\r\n    color: \"#080707\",\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0 2px 3px 0 rgba(0, 0, 0, 0.16)\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n})(Tooltip);\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n// let DamageDetails = {\r\n//   damageDetails: [\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Windshield\",\r\n//       partlabor_hours: 0,\r\n//       total: \"285.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"true\",\r\n//       paint_hours: 0,\r\n//       part_cost: 200,\r\n//       damage_type: \"X\",\r\n//       damage_description:\r\n//         'w/s glass mazda w/o wiper deicer w/o smart city br - 1X2.0\" Cracked (Replace)',\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Front Bumper\",\r\n//       partlabor_hours: 0,\r\n//       total: \"221.60\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"true\",\r\n//       paint_hours: 2,\r\n//       part_cost: 0,\r\n//       damage_type: \"X\",\r\n//       damage_description:\r\n//         'bmpr cvr w/parking sensors hiroshima plant - 1X8.0\" Cracked (Repair)',\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Right Fender\",\r\n//       partlabor_hours: 0,\r\n//       total: \"0.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 0,\r\n//       part_cost: 0,\r\n//       damage_type: \"X\",\r\n//       damage_description: \"Fndr pnl -  Previous repair (REPORT)\",\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Right Front Door\",\r\n//       partlabor_hours: 0,\r\n//       total: \"0.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 0,\r\n//       part_cost: 0,\r\n//       damage_type: \"X\",\r\n//       damage_description: \"Door shell -  SSR-Dirt in Paint (REPORT)\",\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Left 1/4 Panel\",\r\n//       partlabor_hours: 0,\r\n//       total: \"169.20\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 2,\r\n//       part_cost: 0,\r\n//       damage_type: \"X\",\r\n//       damage_description:\r\n//         'Otr 1/4 pnl - 1X3.0\" Dented / dinged - paint broken (Repair)',\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Left Rear Door\",\r\n//       partlabor_hours: 0,\r\n//       total: \"55.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 0,\r\n//       part_cost: 55,\r\n//       damage_type: \"X\",\r\n//       damage_description:\r\n//         'Door shell - 1X1.5\" Dented / dinged - paint not broken (Repair)',\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Front Left Tire\",\r\n//       partlabor_hours: 0,\r\n//       total: \"200.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"true\",\r\n//       paint_hours: 0,\r\n//       part_cost: 200,\r\n//       damage_type: \"X\",\r\n//       damage_description: '19 Inch Tire - 1X3.0\" Cut (Replace)',\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Warning Light\",\r\n//       partlabor_hours: 0,\r\n//       total: \"34.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 0,\r\n//       part_cost: 0,\r\n//       damage_type: \"M\",\r\n//       damage_description:\r\n//         \"Check engine warning light -  Stays on (FurtherDiagnosis)\",\r\n//     },\r\n//     {\r\n//       inspection_id: 232211,\r\n//       vin: \"JM3KFADM6L0797974\",\r\n//       damage_location_detail: \"Rear Left Wheel/Cover\",\r\n//       partlabor_hours: 0,\r\n//       total: \"100.00\",\r\n//       paint_rate: 46,\r\n//       chargeable_flag: \"false\",\r\n//       paint_hours: 0,\r\n//       part_cost: 100,\r\n//       damage_type: \"X\",\r\n//       damage_description:\r\n//         'aly whl 19\" type 1 dicastal brand - 1X2.0\" Scratched (Repair)',\r\n//     },\r\n//   ],\r\n//   interiorCost: 0,\r\n//   exteriorCost: 1030.8,\r\n//   mechanicalCost: 34,\r\n//   excessiveWandT: 706.6,\r\n//   normal: 358.2,\r\n//   inspectionPaintRate: 50,\r\n//   inspectionLaborRate: 60,\r\n// };\r\nexport default function ViewDetailedReport(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [interior, setInterior] = React.useState([]);\r\n  const [exterior, setExterior] = React.useState([]);\r\n  const [mechanical, setMechanical] = React.useState([]);\r\n  const [finalTotal, setFinalTotal] = React.useState([]);\r\n  const [damagedesc, setDamagedesc] = React.useState(\"\");\r\n\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\"];\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.close();\r\n  };\r\n\r\n  const { DamageDetails } = props;\r\n  const handleSeperation = () => {\r\n    let interior = [];\r\n    let exterior = [];\r\n    let mechanical = [];\r\n    let total = 0;\r\n    if (DamageDetails?.damageDetails?.length > 0) {\r\n      DamageDetails?.damageDetails?.map((row, index) => {\r\n        if (row.damage_type == \"X\") {\r\n          exterior.push(row);\r\n        } else if (row.damage_type == \"I\") {\r\n          interior.push(row);\r\n        } else if (row.damage_type == \"M\") {\r\n          mechanical.push(row);\r\n        }\r\n        total = total + (row.total ? parseFloat(row.total) : \"$0\");\r\n      });\r\n      console.log(exterior, \"iiiiiiii\");\r\n      console.log(interior, \"iiiiiiii\");\r\n      console.log(mechanical, \"iiiiiiii\");\r\n      setExterior(exterior);\r\n      setInterior(interior);\r\n      setMechanical(mechanical);\r\n      setFinalTotal(total);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleSeperation();\r\n  }, [props.DamageDetails]);\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={\"lg\"}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        open={props.open}\r\n      >\r\n        <DialogTitle\r\n          className=\"viewReportHeader\"\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Damage Report\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid item xs={6} className=\"galleryView\">\r\n              <MyGallery\r\n                getDamageDesc={(e) => {\r\n                  e ? setDamagedesc(e) : setDamagedesc(\"\");\r\n                }}\r\n                {...props}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid xs={6}>\r\n              <div className=\"viewReportCenter\">\r\n                Estimated Damage Repair Totals\r\n                <div className=\"hrLine\" />\r\n              </div>\r\n\r\n              <Grid container className=\"experiorSpacing\">\r\n                <Grid item xs={12}>\r\n                  <List>\r\n                    <ListItem>\r\n                      <ListItemText className=\"smallCardTitle\">\r\n                        <span className=\"textBold alignleft\">Interior</span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction className=\"smallCardBody \">\r\n                        {DamageDetails.interiorCost ? (\r\n                          <CurrencyFormat\r\n                            value={parseFloat(\r\n                              DamageDetails.interiorCost\r\n                            ).toFixed(2)}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"$\"}\r\n                          />\r\n                        ) : (\r\n                          \"$0.0\"\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText className=\"smallCardTitle\">\r\n                        <span className=\"textBold alignleft\">Exterior</span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction className=\"smallCardBody \">\r\n                        {DamageDetails.exteriorCost ? (\r\n                          <CurrencyFormat\r\n                            value={parseFloat(\r\n                              DamageDetails.exteriorCost\r\n                            ).toFixed(2)}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"$\"}\r\n                          />\r\n                        ) : (\r\n                          \"$0.0\"\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText className=\"smallCardTitle\">\r\n                        <span className=\"textBold alignleft\">\r\n                          Mechanical total\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction className=\"smallCardBody \">\r\n                        {DamageDetails.maintainenceCost ? (\r\n                          <CurrencyFormat\r\n                            value={parseFloat(\r\n                              DamageDetails.maintainenceCost\r\n                            ).toFixed(2)}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"$\"}\r\n                          />\r\n                        ) : (\r\n                          \"$0.0\"\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText className=\"smallCardTitle\">\r\n                        <span className=\"textBold alignleft\">Normal W&T</span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction className=\"smallCardBody \">\r\n                        {DamageDetails.normal ? (\r\n                          <CurrencyFormat\r\n                            value={parseFloat(DamageDetails.normal).toFixed(2)}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"$\"}\r\n                          />\r\n                        ) : (\r\n                          \"$0.0\"\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText className=\"smallCardTitle\">\r\n                        <span className=\"textBold alignleft \">\r\n                          Excessive W&T\r\n                          <BlueTooltip\r\n                            title={`Excessive W&T charges are those that may be billed to the lessee on their lease end invoice`}\r\n                          >\r\n                            <div className=\"icontooltip\">\r\n                              <IconButton color=\"#005fb2\">\r\n                                <InfoIcon\r\n                                  style={{ width: \"16px\" }}\r\n                                  color=\"#005fb2\"\r\n                                />\r\n                              </IconButton>\r\n                            </div>\r\n                          </BlueTooltip>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction className=\"smallCardBody \">\r\n                        {DamageDetails.excessiveWandT ? (\r\n                          <CurrencyFormat\r\n                            value={parseFloat(\r\n                              DamageDetails.excessiveWandT\r\n                            ).toFixed(2)}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix={\"$\"}\r\n                          />\r\n                        ) : (\r\n                          \"$0.0\"\r\n                        )}\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"LabelTextTextAreaDamage\">\r\n                    Damage Area Description\r\n                  </div>\r\n                  <TextareaAutosize\r\n                    className=\"inputFieldTextAreaDamage\"\r\n                    aria-label=\"maximum height\"\r\n                    defaultValue={damagedesc}\r\n                    value={damagedesc}\r\n                    disabled\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} align=\"right\">\r\n            <div className=\"detailedReportRates\">\r\n              <span>\r\n                Labor Rate :{\" \"}\r\n                {DamageDetails.inspectionLaborRate\r\n                  ? `$${DamageDetails.inspectionLaborRate} /hr`\r\n                  : \"$000.00/hr\"}\r\n              </span>\r\n              <span>\r\n                {\" \"}\r\n                | Paint Rate:{\" \"}\r\n                {DamageDetails.inspectionPaintRate\r\n                  ? `$${DamageDetails.inspectionPaintRate} /hr`\r\n                  : \"$000.00/hr\"}\r\n              </span>\r\n            </div>\r\n          </Grid>\r\n          <TableContainer component={Paper}>\r\n            <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Damaged Area</TableCell>\r\n                  <TableCell align=\"left\" className=\"textWidth\">\r\n                    Wear & Tear\r\n                  </TableCell>\r\n                  <TableCell align=\"left\" className=\"textWidth\">\r\n                    Labor Hours\r\n                  </TableCell>\r\n                  <TableCell align=\"left\" className=\"textWidth\">\r\n                    Paint Hours\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" className=\"textWidth\">\r\n                    Part Cost\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" className=\"textWidth\">\r\n                    Estimate\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={6}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className=\"textBold alignleft paddingTop\"\r\n                  >\r\n                    Interior\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                    <hr />\r\n                  </TableCell>\r\n                </TableRow>\r\n                {/* <TableRow >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].damage_area : 'N/A'}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ?DamageDetails.damageDetails[0].damage_type : 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].partlabor_hours: 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].paint_hours? DamageDetails.damageDetails[0].paint_hours:0: 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].part_cost ? DamageDetails.damageDetails[0].part_cost : 0: 'N/A'}</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[0].total ? DamageDetails.damageDetails[0].total : 0: 'N/A'}</TableCell>\r\n                                </TableRow> */}\r\n                {interior.map((inter, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? `${inter.damage_location_detail} - ${inter.damage_description}`\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 150 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? inter.chargeable_flag == \"true\"\r\n                            ? \"E\"\r\n                            : \"N\"\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 150 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? inter.partlabor_hours\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 150 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? inter.paint_hours\r\n                            ? inter.paint_hours\r\n                            : 0\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 150 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          inter.part_cost ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(inter.part_cost).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell astyle={{ width: 150 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          inter.total ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(inter.total).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={6}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className=\"textBold alignleft paddingTop\"\r\n                  >\r\n                    Exterior\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                    <hr />\r\n                  </TableCell>\r\n                </TableRow>\r\n                {/* <TableRow >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].damage_area : 'N/A'}\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ?DamageDetails.damageDetails[1].damage_type : 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].partlabor_hours: 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].paint_hours? DamageDetails.damageDetails[0].paint_hours:0: 'N/A'}</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].part_cost ? DamageDetails.damageDetails[0].part_cost : 0: 'N/A'}</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">{DamageDetails?.damageDetails?.length > 0 ? DamageDetails.damageDetails[1].total ? DamageDetails.damageDetails[0].total : 0: 'N/A'}</TableCell>\r\n                                </TableRow> */}\r\n                {exterior.map((exter, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? `${exter.damage_location_detail} - ${exter.damage_description}`\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? exter.chargeable_flag == \"true\"\r\n                            ? \"E\"\r\n                            : \"N\"\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? exter.partlabor_hours\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? exter.paint_hours\r\n                            ? exter.paint_hours\r\n                            : 0\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          exter.part_cost ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(exter.part_cost).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell astyle={{ width: 90 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          exter.total ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(exter.total).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={6}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className=\"textBold alignleft paddingTop\"\r\n                  >\r\n                    Mechanical\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                    <hr />\r\n                  </TableCell>\r\n                </TableRow>\r\n                {mechanical.map((mech, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? `${mech.damage_location_detail} - ${mech.damage_description} `\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? mech.chargeable_flag == \"true\"\r\n                            ? \"E\"\r\n                            : \"N\"\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? mech.partlabor_hours\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"left\">\r\n                        {DamageDetails?.damageDetails?.length > 0\r\n                          ? mech.paint_hours\r\n                            ? mech.paint_hours\r\n                            : 0\r\n                          : \"N/A\"}\r\n                      </TableCell>\r\n                      <TableCell style={{ width: 90 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          mech.part_cost ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(mech.part_cost).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell astyle={{ width: 90 }} align=\"right\">\r\n                        {DamageDetails?.damageDetails?.length > 0 ? (\r\n                          mech.total ? (\r\n                            <CurrencyFormat\r\n                              value={parseFloat(mech.total).toFixed(2)}\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              prefix={\"$\"}\r\n                            />\r\n                          ) : (\r\n                            \"$0.0\"\r\n                          )\r\n                        ) : (\r\n                          \"N/A\"\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n\r\n                {/* {wheelTyrelistOfItem.map(list => {\r\n                                    return (\r\n                                        <TableRow key={list}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                Damage area name and description\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                                } */}\r\n                <TableRow>\r\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\r\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                    <hr />\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\r\n                  <TableCell\r\n                    colSpan={1}\r\n                    style={{ width: 90 }}\r\n                    align=\"left\"\r\n                    className=\"align_right\"\r\n                  >\r\n                    Total\r\n                  </TableCell>\r\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\r\n                  <TableCell\r\n                    style={{ width: 90, float: \"right\", fontWeight: \"900\" }}\r\n                    align=\"left\"\r\n                    className=\"align_right11\"\r\n                  >\r\n                    <CurrencyFormat\r\n                      value={parseFloat(finalTotal).toFixed(2)}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\r\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                    <hr />\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell colSpan={2} component=\"th\" scope=\"row\"></TableCell>\r\n                  <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                    <div className=\"disclaimerVRS\">\r\n                      Disclaimer: Damage estimates are included for reference\r\n                      and may not be reflective of the actual repair costs\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions className=\"reportFooter\">\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            className=\"closeButton\"\r\n            color=\"secondary\"\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js",["478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493"],"import React, { useEffect, useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Box, Select } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport {\r\n  getDealerPaymentsData,\r\n  getPurchaseDetails,\r\n  onSubmitPayment,\r\n} from \"../service/api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"96%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dividerColor: {\r\n    backgroundColor: \"#df6060\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\nexport default function PurchasedPricingSideBar(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n\r\n  const [accountName, setAccountName] = React.useState(\"\");\r\n  const [accountInfo, setAccountInfo] = React.useState({});\r\n  const [paymentMethods, SetPaymentMethods] = React.useState([]);\r\n  const [accountMaskNumber, setAccountMaskNumber] = React.useState(null);\r\n  const [purchasedData, setPurchasedData] = React.useState({});\r\n\r\n  // const [value, setValue] = React.useState(\"\");\r\n  const [paymentType, setPaymentType] = React.useState(\"\");\r\n  const [paymentTypeName, setPaymentTypeName] = React.useState(\"\");\r\n  const [paymentTypeFee, setPaymentTypeFee] = React.useState(0);\r\n  const [additionalPaymentTypeName, setAdditionalPaymentTypeName] =\r\n    React.useState(\"\");\r\n  const [additionalPaymentTypeFee, setAdditionalPaymentTypeFee] =\r\n    React.useState(0);\r\n  const [totalFee, setTotalFee] = React.useState(0);\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n\r\n  useEffect(async () => {\r\n    console.log(\"start condition report page  PurchasedPricingSideBar \",new Date());\r\n\r\n    let getPurchaseDetailsRes = await getPurchaseDetails(props.vin);\r\n    setPurchasedData(getPurchaseDetailsRes.data.data);\r\n    console.log(\r\n      \"getPurchaseDetailsRes.data.data\",\r\n      getPurchaseDetailsRes.data.data\r\n    );\r\n\r\n    let getDealerPaymentsRes = await getDealerPaymentsData();\r\n    console.log(\"getDealerPaymentsData==>\", getDealerPaymentsRes);\r\n    getDealerPaymentsRes &&\r\n      getDealerPaymentsRes.data &&\r\n      getDealerPaymentsRes.data.PaymentMethod &&\r\n      SetPaymentMethods(getDealerPaymentsRes.data.PaymentMethod);\r\n\r\n    // let reqObj = {\r\n    //   \"accountId\": \"8adc9a4170c2d2f80170c56d9be24c8f\",\r\n    //   \"accountNumber\": \"t002-51690\",\r\n    //   \"achAbaCode\": \"111111111\",\r\n    //   \"achAccountNumberMask\": \"**************************2222\",\r\n    //   \"achAccountType\": \"Checking\",\r\n    //   \"paymentDetails\": [\r\n    //     {\r\n    //       \"amount\": 200,\r\n    //       \"paymentCategory\": \"Payoff\",\r\n    //       \"priceType\": \"Price\"\r\n    //     },\r\n    //     {\r\n    //       \"amount\": 300,\r\n    //       \"paymentCategory\": \"Residual\",\r\n    //       \"priceType\": \"Price\"\r\n    //     }\r\n    //   ],\r\n    //   \"paymentMethodId\": \"8adcd9eb74353a7101744ee82b2e0cdd\",\r\n    //   \"paymentMethodType\": \"ACH\",\r\n    //   \"tenantId\": \"t002\",\r\n    //   \"vin\": \"JM1GL1XY6L1513120\",\r\n    //   // \"vin\": \"KM3KFADM0L0797963\",\r\n\r\n    // }\r\n    // let submitPaymentRes = await onSubmitPayment(reqObj);\r\n    // console.log(\"submitPaymentRes:::\", submitPaymentRes);\r\n    console.log(\"start condition report page  PurchasedPricingSideBar \",new Date());\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"start condition report page  PurchasedPricingSideBar paymentTypeFee\",new Date());\r\n\r\n    setTotalFee(paymentTypeFee);\r\n    if (additionalPaymentTypeFee) {\r\n      setTotalFee(parseFloat(paymentTypeFee + additionalPaymentTypeFee).toFixed(2));\r\n    }\r\n    console.log(\"end condition report page  PurchasedPricingSideBar paymentTypeFee\",new Date());\r\n\r\n  }, [paymentTypeFee, additionalPaymentTypeFee]);\r\n\r\n  const handleChangeAccountName = (event) => {\r\n    setAccountName(event.target.value);\r\n    paymentMethods.forEach((item) => {\r\n      if (item.achAccountName == event.target.value) {\r\n        console.log(item);\r\n        setAccountInfo(item);\r\n        setAccountMaskNumber(item.achAccountNumberMask);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // setValue(event.target.value);\r\n    setPaymentType(event.target.value);\r\n    getMakePatmentDetails(event.target.value);\r\n  };\r\n\r\n  const getMakePatmentDetails = (paymentTypeVal) => {\r\n    let makepaymentdetails = [];\r\n\r\n    if (paymentTypeVal == \"1\") {\r\n      let payment = {\r\n        amount: purchasedData.payOffAmount,\r\n        paymentCategory: \"Payoff\",\r\n        priceType: \"Price\",\r\n      };\r\n      makepaymentdetails.push(payment);\r\n      setPaymentTypeFee(purchasedData.payOffAmount || 0);\r\n      setPaymentTypeName(\"Payoff\");\r\n      setAdditionalPaymentTypeFee(null);\r\n      setAdditionalPaymentTypeName(\"\");\r\n    } else if (paymentTypeVal == \"2\") {\r\n      let payment = [\r\n        {\r\n          amount: purchasedData.remainingPmts,\r\n          paymentCategory: \"RemainingPayments\",\r\n          priceType: \"Price\",\r\n        },\r\n        {\r\n          amount: purchasedData.residualAmount,\r\n          paymentCategory: \"Residual\",\r\n\r\n          priceType: \"Price\",\r\n        },\r\n      ];\r\n      makepaymentdetails = payment;\r\n\r\n      setPaymentTypeFee(purchasedData.residualAmount);\r\n      setPaymentTypeName(\"Residual\");\r\n      setAdditionalPaymentTypeFee(purchasedData.remainingPmts);\r\n      setAdditionalPaymentTypeName(\"Remaining Payments\");\r\n    } else if (paymentTypeVal == \"3\") {\r\n      let payment = {\r\n        amount: purchasedData.vehiclePrice,\r\n        paymentCategory: \"Market\",\r\n        priceType: \"Price\",\r\n      };\r\n      makepaymentdetails.push(payment);\r\n      setPaymentTypeFee(purchasedData.vehiclePrice || 0);\r\n      setPaymentTypeName(\"Market\");\r\n      setAdditionalPaymentTypeFee(null);\r\n      setAdditionalPaymentTypeName(\"\");\r\n    } else if (paymentTypeVal == \"4\") {\r\n      let payment = [\r\n        {\r\n          amount: purchasedData.vehiclePrice,\r\n          paymentCategory: \"Market\",\r\n          priceType: \"Price\",\r\n        },\r\n        {\r\n          amount: purchasedData.remainingPmts,\r\n          paymentCategory: \"RemainingPayments\", //\"remainingPmts\",\r\n          priceType: \"Price\",\r\n        },\r\n      ];\r\n      makepaymentdetails = payment;\r\n      setPaymentTypeFee(purchasedData.vehiclePrice);\r\n      setPaymentTypeName(\"Market\");\r\n      setAdditionalPaymentTypeFee(purchasedData.remainingPmts);\r\n      setAdditionalPaymentTypeName(\"Remaining Payments\");\r\n    }\r\n\r\n    return makepaymentdetails;\r\n  };\r\n\r\n  const purchaseVehical = async () => {\r\n    // let makepaymentdetails = getMakePatmentDetails(paymentType);\r\n    // let reqObj = {\r\n    //   accountId: accountInfo?.accountId,\r\n    //   accountNumber: localStorage.getItem(\"KintoID\")\r\n    //     ? localStorage.getItem(\"KintoID\")\r\n    //     : null,\r\n    //   achAbaCode: \"111111111\",\r\n    //   achAccountNumberMask: accountInfo?.achAccountNumberMask,\r\n    //   achAccountType: accountInfo?.achAccountType,\r\n    //   paymentDetails: makepaymentdetails,\r\n    //   paymentMethodId: accountInfo?.id,\r\n    //   paymentMethodType: accountInfo?.type,\r\n    //   tenantId: \"t002\",\r\n    //   vin: props.vin,\r\n    //   // \"vin\": \"KM3KFADM0L0797963\",\r\n    // };\r\n    // let submitPaymentRes = await onSubmitPayment(reqObj);\r\n    // console.log(\"submitPaymentRes:::\", submitPaymentRes);\r\n\r\n    // if (submitPaymentRes.data.success) {\r\n    let transactionDetailsObj = {\r\n      type: \"confirm\",\r\n      totalFee,\r\n      paymentTypeName,\r\n      paymentTypeFee,\r\n      vin: props.vin,\r\n      accountInfo: accountInfo,\r\n    };\r\n    props.onPurchaseVehical(transactionDetailsObj);\r\n    // }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (props.isConfirmPurchase) {\r\n      let makepaymentdetails = getMakePatmentDetails(paymentType);\r\n      let reqObj = {\r\n        accountId: accountInfo?.accountId,\r\n        accountNumber: localStorage.getItem(\"KintoID\")\r\n          ? localStorage.getItem(\"KintoID\")\r\n          : null,\r\n        achAbaCode: \"111111111\",\r\n        achAccountNumberMask: accountInfo?.achAccountNumberMask,\r\n        achAccountType: accountInfo?.achAccountType,\r\n        paymentDetails: makepaymentdetails,\r\n        paymentMethodId: accountInfo?.id,\r\n        paymentMethodType: accountInfo?.type,\r\n        tenantId: \"t002\",\r\n        vin: props.vin,\r\n        groundingId: props.groundingId,\r\n        // \"vin\": \"KM3KFADM0L0797963\",\r\n      };\r\n      let submitPaymentRes = await onSubmitPayment(reqObj);\r\n      console.log(\"submitPaymentRes:::\", submitPaymentRes);\r\n\r\n      if (\r\n        submitPaymentRes &&\r\n        submitPaymentRes.data &&\r\n        submitPaymentRes.data.success\r\n      ) {\r\n        let transactionDetailsObj = {\r\n          type: \"success\",\r\n          totalFee,\r\n          paymentTypeName,\r\n          paymentTypeFee,\r\n          vin: props.vin,\r\n          accountInfo: accountInfo,\r\n        };\r\n        props.onPurchaseVehical(transactionDetailsObj);\r\n      } else {\r\n        let transactionDetailsObj = {\r\n          type: \"failed\",\r\n          totalFee,\r\n          paymentTypeName,\r\n          paymentTypeFee,\r\n          vin: props.vin,\r\n          accountInfo: accountInfo,\r\n        };\r\n        props.onPurchaseVehical(transactionDetailsObj);\r\n      }\r\n    }\r\n  }, [props.isConfirmPurchase]);\r\n\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Purchase Page</ListItem>\r\n      <ListItem>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Vehicle Pricing Options</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"gender1\"\r\n            value={paymentType}\r\n            onChange={handleChange}\r\n          >\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value={\"1\"}\r\n                control={<Radio />}\r\n                label=\"Payoff\"\r\n                disabled = {purchasedData.payOffAmount ? false : true}\r\n              />\r\n              <p>\r\n                {purchasedData.payOffAmount ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(purchasedData.payOffAmount).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value={\"2\"}\r\n                control={<Radio />}\r\n                label=\"Residual + Remaining Payments\"\r\n                disabled = {(purchasedData.remainingPmts + purchasedData.residualAmount) ? false : true}\r\n              />\r\n              <p>\r\n                {purchasedData.remainingPmts + purchasedData.residualAmount ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(\r\n                      purchasedData.remainingPmts + purchasedData.residualAmount\r\n                    ).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value={\"3\"}\r\n                control={<Radio />}\r\n                label=\"Market\"\r\n                disabled = {purchasedData.vehiclePrice ? false : true}\r\n              />\r\n              <p>\r\n                {purchasedData.vehiclePrice ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(purchasedData.vehiclePrice).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </p>\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value={\"4\"}\r\n                control={<Radio />}\r\n                label=\"Market + Remaining Payments \"\r\n                disabled = {purchasedData.vehiclePrice + purchasedData.remainingPmts ? false : true}\r\n              />\r\n              <p>\r\n                {purchasedData.vehiclePrice + purchasedData.remainingPmts ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(\r\n                      purchasedData.vehiclePrice + purchasedData.remainingPmts\r\n                    ).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </p>\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      {paymentTypeName && (\r\n        <>\r\n          <ListItem>\r\n            <ListItemText className=\"manualPricing\">\r\n              {paymentTypeName} :\r\n            </ListItemText>\r\n            <ListItemText className=\"manualPricing\">\r\n              <Box textAlign={\"end\"}>\r\n                {paymentTypeFee ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(paymentTypeFee).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </Box>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </>\r\n      )}\r\n      {additionalPaymentTypeName && (\r\n        <>\r\n          <ListItem>\r\n            <ListItemText className=\"manualPricing\">\r\n              {additionalPaymentTypeName} :\r\n            </ListItemText>\r\n            <ListItemText className=\"manualPricing\">\r\n              <Box textAlign={\"end\"}>\r\n                {additionalPaymentTypeFee ? (\r\n                  <CurrencyFormat\r\n                    value={parseFloat(additionalPaymentTypeFee).toFixed(2)}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"$\"}\r\n                  />\r\n                ) : (\r\n                  \"$0.0\"\r\n                )}\r\n              </Box>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </>\r\n      )}\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Admin Fee:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box textAlign={\"end\"}>Waived</Box>\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Total:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box textAlign={\"end\"}>\r\n            {totalFee ? (\r\n              <CurrencyFormat\r\n                value={parseFloat(totalFee).toFixed(2)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n              />\r\n            ) : (\r\n              \"$0.0\"\r\n            )}\r\n          </Box>\r\n        </ListItemText>\r\n      </ListItem>\r\n      {paymentType && (\r\n        <>\r\n          <Divider variant=\"middle\" className={classes.dividerColor} />\r\n          <ListItem>\r\n            <ListItemText className=\"manualPricing\"> \r\n              <Box>Account Nick Name</Box>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                {/* <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel> */}\r\n                <Select\r\n                  style={{ lineHeight: \"2.1em\" }}\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={accountName}\r\n                  onChange={handleChangeAccountName}\r\n                >\r\n                  {/* <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem> */}\r\n                  {paymentMethods &&\r\n                    paymentMethods.map((opt, index) => (\r\n                      <MenuItem key={index} value={opt.achAccountName}>\r\n                        {opt.achAccountName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  {/* <MenuItem value={20}>BOFA</MenuItem>\r\n              <MenuItem value={30}>CHASE</MenuItem> */}\r\n                </Select>\r\n              </FormControl>\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText className=\"manualPricing\">\r\n              <Box px={1} mb={2}>\r\n                <Box color={\"gray\"}>Dealers bank account number </Box>\r\n                <Box\r\n                  color={\"black\"}\r\n                  p={1}\r\n                  bgcolor={\"lightgray\"}\r\n                  borderRadius={4}\r\n                >\r\n                  {accountMaskNumber || \"****0000\"}\r\n                </Box>\r\n              </Box>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </>\r\n      )}\r\n      <List className=\"purchasePassBtn\">\r\n        <Button\r\n          className=\"passButton\"\r\n          color=\"primary\"\r\n          onClick={props.closePassVehiclePop}\r\n        >\r\n          Pass on Vehicle\r\n        </Button>\r\n        <Button\r\n          disabled={!accountName || !paymentType}\r\n          className=\"purchaseButton\"\r\n          color=\"secondary\"\r\n          // onClick={props.onPurchaseVehical}\r\n          onClick={purchaseVehical}\r\n        >\r\n          Purchase Vehicle\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\TransactionModal.js",["494","495","496"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport confirmmark from \"../assets/images/confirm.svg\";\r\nimport Checkmark from \"../assets/images/success.svg\";\r\nimport Crossmark from \"../assets/images/failure.svg\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    width: 400,\r\n    //   padding: theme.spacing(2, 4, 3),\r\n    borderRadius: 5,\r\n  },\r\n  btntext: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n  redText: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nfunction TransactionModal(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.open}>\r\n          <div className={classes.paper}>\r\n            <Box\r\n              display=\"flex\"\r\n              borderBottom={1}\r\n              borderColor={\"grey.500\"}\r\n              id=\"transition-modal-title\"\r\n              alignItems={\"center\"}\r\n            >\r\n              <Box\r\n                borderRight={1}\r\n                borderColor={\"grey.500\"}\r\n                width={70}\r\n                textAlign={\"center\"}\r\n              >\r\n                {props.type === \"confirm\" ? (\r\n                  <img src={confirmmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <img src={Checkmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <img src={Crossmark} width=\"50px\" />\r\n                ) : null}\r\n              </Box>\r\n              <Box width={330} py={1} px={2}>\r\n                {props.type === \"confirm\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Confirm Purchase </Box>\r\n                    <small> Verify your purchase details </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Success! </Box>\r\n                    <small> Vehical purchased </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Transaction Failed </Box>\r\n                    <small className={classes.redText}>\r\n                      {\" \"}\r\n                      Unable to complete payment, Please try again{\" \"}\r\n                    </small>\r\n                  </Box>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n            <Box p={2} id=\"transition-modal-description\">\r\n              <Box component={\"h4\"}>\r\n                2019 Mazda Mazda6 Grand Touring, Machine Gray Metallic\r\n              </Box>\r\n              <small> VIN {props.transactionInfo && props.transactionInfo.vin}</small>\r\n              <Box p={2} my={2} borderRadius={5} bgcolor={\"#e6e6e6\"}>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    {props.transactionInfo?.paymentTypeName}\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>\r\n                  <CurrencyFormat\r\n                  value={\r\n                    props.transactionInfo?.paymentTypeFee || 0\r\n                  }\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                  </Box>\r\n                </Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    Admin Fee\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>Waived</Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor={\"error.main\"} my={1}></Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box fontWeight={\"fontWeightBold\"}>Total</Box>\r\n                  <Box fontWeight={\"fontWeightBold\"}>\r\n                  <CurrencyFormat\r\n                  value={\r\n                    props.transactionInfo?.totalFee || 0\r\n                  }\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display={\"flex\"} justifyContent={\"space-between\"} px={1}>\r\n                <Box fontWeight={500}>Bank Account</Box>\r\n                <Box fontWeight={500}>{props.transactionInfo?.accountInfo?.achAccountNumberMask}</Box>\r\n              </Box>\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  px={1}\r\n                  mt={1}\r\n                >\r\n                  <Box fontWeight={500}>Transaction Number</Box>\r\n                  {props.type === \"success\" ? (\r\n                    <Box fontWeight={500}>00000000000</Box>\r\n                  ) : null}\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box p={1} my={2} borderRadius={5} bgcolor={\"#faffbd\"}>\r\n                  <Box fontSize={12}>\r\n                    Purchanse transaction may be completed, but the funds will\r\n                    be pulled from your bank account in 2-3 days.\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type === \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box mr={2}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      className={classes.btntext}\r\n                      onClick={props.onClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                      onClick={props.confirmPurchase}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                      onClick={props.handleContinue}\r\n                    >\r\n                      Continue\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n            </Box>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionModal;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js",["497","498","499"],"import ImageGallery from \"react-image-gallery\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport { getCarXml, getImageData } from \"../service/api\";\r\nimport Loaderpage from \"./LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\n// const parseString = require(\"xml2js\").parseString;\r\n// const images = [\r\n//   {\r\n//     original: \"car.jpg\",\r\n//     thumbnail: \"car.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car.jpg\",\r\n//     thumbnail: \"car.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car1.jpg\",\r\n//     thumbnail: \"car1.jpg\",\r\n//   },\r\n//   {\r\n//     original: \"car2.jpg\",\r\n//     thumbnail: \"car2.jpg\",\r\n//   },\r\n// ];\r\n\r\nexport default function MyGallery(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [imagesTemp, setImagesTemp] = useState([]);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"inspection_id\", props);\r\n    console.log(\r\n      \"start condition report page get images in my gallery\",\r\n      new Date()\r\n    );\r\n    getImages();\r\n  }, []);\r\n\r\n  const getImages = async () => {\r\n    let reqObj = {\r\n      inspectionId: props.inspection_id,\r\n      paramForImage: \"ALL\",\r\n      tenantId: localStorage.getItem(\"tenantId\")\r\n        ? localStorage.getItem(\"tenantId\")\r\n        : \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n    console.log(\"get image data::\", getimagesRes);\r\n\r\n    if (getimagesRes && getimagesRes.data ) {\r\n      setImagesTemp(getimagesRes?.data);\r\n\r\n      console.log(\"start get single image\", new Date());\r\n      const singleImage = getImage(getimagesRes?.data[0]);\r\n      singleImage.then((res) => {\r\n        arrangeImages(getimagesRes?.data, 0, res.image_bin_value);\r\n        console.log(\"end get single image\", new Date());\r\n      });\r\n\r\n      setLoader(false);\r\n      console.log(\r\n        \"end condition report page get images in my gallery\",\r\n        new Date()\r\n      );\r\n    }\r\n  };\r\n\r\n  const getImage = async (item) => {\r\n    let reqObj = {\r\n      fileName: item.file_name,\r\n      inspectionId: props.inspection_id,\r\n      paramForImage: \"ALL\",\r\n      tenantId: localStorage.getItem(\"tenantId\")\r\n        ? localStorage.getItem(\"tenantId\")\r\n        : \"t002\",\r\n    };\r\n    let getimagesRes = await getImageData(reqObj);\r\n    if (getimagesRes && getimagesRes.data && getimagesRes.data) {\r\n      const singleImage = getimagesRes.data[0];\r\n      return singleImage;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const arrangeImages = (images, index, imgurl) => {\r\n    let imagesdata = [];\r\n    for (let img of images) {\r\n      let imgobj = {\r\n        original: \"data:image/jpeg;base64,\" + img.image_bin_value,\r\n        thumbnail: \"data:image/jpeg;base64,\" + img.image_bin_value,\r\n        damageDescription: img.damage_description,\r\n      };\r\n      imagesdata.push(imgobj);\r\n    }\r\n    if (imgurl) {\r\n      imagesdata[index].original = \"data:image/jpeg;base64,\" + imgurl;\r\n    }\r\n    setStartIndex(index);\r\n    setImages([...imagesdata]);\r\n    props.getDamageDesc &&\r\n      props.getDamageDesc(imagesdata[index].damageDescription);\r\n  };\r\n\r\n  const onSlideGetIndex = (index) => {\r\n    console.log(\"start get single image\", new Date());\r\n    const singleImage = getImage(imagesTemp[index]);\r\n    singleImage.then((res) => {\r\n      arrangeImages(imagesTemp, index, res.image_bin_value);\r\n      console.log(\"end get single image\", new Date());\r\n    });\r\n    // props.getDamageDesc &&\r\n    //   props.getDamageDesc(imagesTemp[index].damageDescription);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <ImageGallery\r\n          {...props}\r\n          items={images}\r\n          showFullscreenButton={false}\r\n          showPlayButton={false}\r\n          onSlide={onSlideGetIndex}\r\n        /> */}\r\n\r\n      {images && images.length != 0 ? (\r\n        <ImageGallery\r\n          {...props}\r\n          items={[...images]}\r\n          startIndex={startIndex}\r\n          showFullscreenButton={false}\r\n          showPlayButton={false}\r\n          onSlide={onSlideGetIndex}\r\n        />\r\n      ) : (\r\n        <div>\r\n          {loader ? (\r\n            <Box\r\n              height={\"350px\"}\r\n              display={\"flex\"}\r\n              justifyContent={\"center\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <div>\r\n                <Loaderpage />\r\n                <span className=\"loaderText\">Loading...</span>\r\n              </div>\r\n            </Box>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport {\r\n  getAccessTokenEndpoint,\r\n  getPurchasedList,\r\n  getUserInfoToken,\r\n  getImageData,\r\n} from \"../../service/api\";\r\nimport Loaderpage from \"../LoaderPage\";\r\nimport { Box, useForkRef } from \"@material-ui/core\";\r\nimport Pagination from \"../../components/PaginationDealerView\";\r\n\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFBDM0K1698372\",\r\n    },\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFADM3K1586305\",\r\n    },\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    groundingDetails: {\r\n      vin: \"3MZBPBCM4LM125760\",\r\n    },\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFABM2L0748452\",\r\n    },\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\n\r\nexport default function ListingPage2(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n  // const [images, setImages] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails(1);\r\n    // getImages();\r\n  }, [value]);\r\n  async function getVehicleDetails(index) {\r\n    console.log(\"start Purchased page\",new Date());\r\n\r\n    let apiResponse = await getPurchasedList(index);\r\n    setVehicleResponse(apiResponse?.data.data);\r\n    console.log(vehicleResponse);\r\n    // console.log(apiResponse?.data.data);\r\n    setLoader(false);\r\n    console.log(\"end Purchased page\",new Date());\r\n\r\n  }\r\n\r\n  // const getImages = async () => {\r\n  //   let reqObj = {\r\n  //     inspectionId: 18734078,\r\n  //     paramForImage: \"Inspection_Front_Page\",\r\n  //     tenantId: \"t002\",\r\n  //   };\r\n  //   let getimagesRes = await getImageData(reqObj);\r\n  //   console.log(\"get image data::\", getimagesRes);\r\n\r\n  //   getimagesRes &&\r\n  //     getimagesRes.data &&\r\n  //     getimagesRes.data.imageDetails.map((item) => {\r\n  //       item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\r\n  //     });\r\n  //   setImages(getimagesRes.data.imageDetails);\r\n  // };\r\n\r\n  function getPurchasetype(list) {\r\n    let price = \"\";\r\n    if (list.length != 0) {\r\n      list.forEach((x, index) => {\r\n        if (x.price_category) {\r\n          if (index == list.length - 1) {\r\n            price = price += x.price_category;\r\n          } else {\r\n            price = price += x.price_category + \" + \";\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return price;\r\n  }\r\n  function getTotprice(list) {\r\n    let price = 0;\r\n    if (list.length != 0) {\r\n      list.forEach((x, index) => {\r\n        if (x.sale_amount) {\r\n          price = price += x.sale_amount;\r\n        }\r\n      });\r\n    }\r\n    return price;\r\n  }\r\n\r\n  const openConditionReport = (VINumber, vehicle) => {\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      //purchaseSection: true,\r\n      vehicleDetails: vehicle,\r\n    });\r\n  };\r\n  const onChangePage = (data, index) => {\r\n    console.log(\"data\", data);\r\n    getVehicleDetails(index);\r\n    // setVehicleResponse(data);\r\n  };\r\n\r\n  return vehicleResponse?.length > 0 ? (\r\n  <div>\r\n\r\n\r\n    \r\n   { vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              {/* <SwipeableTextMobileStepper /> */}\r\n              {vehicle?.groundingImage ? (\r\n                <SwipeableTextMobileStepper\r\n                  vehical={vehicle}\r\n                  images={vehicle?.groundingImage}\r\n                />\r\n              ) : (\r\n                <div className=\"pendingImgBlock\">\r\n                  <img\r\n                    className=\"pendingImg\"\r\n                    src=\"inspection_pending.png\"\r\n                    alt=\"pending\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                    {vehicle?.model_year} {vehicle?.brand} {vehicle?.model}\r\n                    {vehicle?.ext_color}\r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={() => openConditionReport(vehicle?.vin, vehicle)}\r\n                    >\r\n                      {vehicle?.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Date :</span>\r\n                    { vehicle?.sale_date && moment(vehicle?.sale_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  {/* <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Mileage:</span>\r\n                    <CurrencyFormat\r\n                      value={vehicle.odometer_reading}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                    />\r\n                    miles\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Inspection Mileage:</span>\r\n                    Pending\r\n                  </span> */}\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Type:</span>\r\n                    {/* {vehicle.purchase_type ? vehicle.purchase_type : \"\"} */}\r\n                    {getPurchasetype(vehicle?.priceCategoryList)}\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Vehicle-Price-Option\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>Vehicle Cost </span>\r\n                </div>\r\n                <List>\r\n                  {vehicle?.priceCategoryList && vehicle?.priceCategoryList.map((priceitem, index)=>\r\n                  <span key={index} className=\"textStyle priceOptions\">\r\n                  <span className=\"textBold\"> {priceitem?.price_category} {priceitem?.price_type} </span>\r\n                  <span className=\"\">\r\n                    <CurrencyFormat\r\n                      value={\r\n                        priceitem &&\r\n                        parseFloat(\r\n                          priceitem?.sale_amount\r\n                        ).toFixed(2)\r\n                      }\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"$\"}\r\n                    />\r\n                  </span>\r\n                </span>\r\n                  )\r\n\r\n                  }\r\n                  \r\n                  {/* <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Rem.Payments</span>\r\n                    <span className=\"margin__space5\">\r\n                      <CurrencyFormat\r\n                        value={\r\n                          vehicle.priceCategoryList[1] &&\r\n                          parseFloat(\r\n                            vehicle.priceCategoryList[1].sale_amount\r\n                          ).toFixed(2)\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span> */}\r\n                  <span className=\"textStyle priceOptions\">\r\n                    <span className=\"textBold\"> Admin Fee</span>\r\n                    <span className=\"\">\r\n                     {vehicle?.admin_fee ?  <CurrencyFormat\r\n                        value={vehicle?.admin_fee}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      /> : \"Waived\"}\r\n                    </span>\r\n                  </span>\r\n                  <div className=\"purchasedScreenTotal\" />\r\n                  <span className=\"textStyle priceOptions\">\r\n                    <span className=\"textStyleTotalFee\"> Total Price</span>\r\n                    <span className=\"totalFeeSum\">\r\n                      <CurrencyFormat\r\n                        value={parseFloat(\r\n                          getTotprice(vehicle.priceCategoryList)\r\n                        ).toFixed(2)}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        \r\n        </div>\r\n      );\r\n      \r\n\r\n      \r\n\r\n    })\r\n  \r\n}\r\n{vehicleResponse.length != 0 ? (\r\n        <Pagination\r\n          showItemsPerPage={20}\r\n          // pages={[20, 40, 60, 80]}\r\n          data={vehicleResponse}\r\n          onChangePage={onChangePage}\r\n        />\r\n      ) : null}\r\n</div>  \r\n        \r\n  ) : (\r\n    <div>\r\n      {loader ? (\r\n        <Box\r\n          height={\"90vh\"}\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <div>\r\n            <Loaderpage />\r\n            <span className=\"loaderText\">Loading...</span>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <div className=\"listingPageCardNoData\">\r\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\r\n          <span className=\"nodataText\">No Vehicles found</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js",["515"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehiclePLV\">\r\n      <p>\r\n        Dealer is responsible for paying off the vehicle and customer will not\r\n        recieve any lease-end charges.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js",["516"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehicleMFS\">\r\n      <p>\r\n        By grounding this vehicle, dealer will have multiple purchase options\r\n        and customer will be invoiced asa lease return.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js",["517","518","519","520","521","522"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getPassedList,\r\n  getImageData,\r\n  getTransportationDetails,\r\n} from \"../../service/api\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport VerticalVehicleStepper from \"../../components/Stepper/VerticalStepper\";\r\nimport Loaderpage from \"../LoaderPage\";\r\nimport { Box } from \"@material-ui/core\";\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    vin: \"JM3KFBDM0K1698372\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\nexport default function ListingPage1(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n  // const [images, setImages] = React.useState([]);\r\n  const [transport, setTransport] = useState({});\r\n  const [loader, setLoader] = React.useState(true);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n    // getImages();\r\n  }, [value]);\r\n  async function getVehicleDetails() {\r\n    console.log(\"start passed page\",new Date());\r\n    let apiResponse = await getPassedList();\r\n    getTransportDetails(apiResponse?.data.data);\r\n  }\r\n\r\n  async function getTransportDetails(data) {\r\n    if (data.length !== 0) {\r\n      let vinlistqueryparams = \"\";\r\n      data.forEach((item, index) => {\r\n        if (data.length - 1 === index) {\r\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin;\r\n        } else {\r\n          vinlistqueryparams = vinlistqueryparams + \"vinList=\" + item.vin + \"&\";\r\n        }\r\n      });\r\n\r\n      // console.log(\"vinlistqueryparams\", vinlistqueryparams);\r\n\r\n      let apiResponse = await getTransportationDetails(vinlistqueryparams);\r\n      setTransport(apiResponse.data);\r\n      setVehicleResponse(data);\r\n\r\n      setLoader(false);\r\n     console.log(\"end passed page\",new Date());\r\n      \r\n    }\r\n  }\r\n\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      //purchaseSection: true,\r\n      vehicleDetails: vehicle,\r\n    });\r\n  };\r\n\r\n  // const getImages = async () => {\r\n  //   let reqObj = {\r\n  //     inspectionId: 18734078,\r\n  //     paramForImage: \"Inspection_Front_Page\",\r\n  //     tenantId: \"t002\",\r\n  //   };\r\n  //   let getimagesRes = await getImageData(reqObj);\r\n  //   console.log(\"get image data::\", getimagesRes);\r\n\r\n  //   getimagesRes &&\r\n  //     getimagesRes.data &&\r\n  //     getimagesRes.data.imageDetails.map((item) => {\r\n  //       item.binImageArray = \"data:image/jpeg;base64,\" + item.binImageArray;\r\n  //     });\r\n  //   setImages(getimagesRes?.data?.imageDetails);\r\n  // };\r\n\r\n  return <>\r\n  {vehicleResponse.length > 0 ? (\r\n    vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              {vehicle.inspection_mileage > 0 ? (\r\n                <SwipeableTextMobileStepper vehical={vehicle} images={vehicle.groundingImage} />\r\n              ) : (\r\n                <div className=\"pendingImgBlock\">\r\n                <img\r\n                  className=\"pendingImg\"\r\n                  src=\"inspection_pending.png\"\r\n                  alt=\"pending\"\r\n                />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col-details\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                  {vehicle.model_year} {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                \r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={openConditionScreen.bind(\r\n                        this,\r\n                        vehicle.vin,\r\n                        vehicle\r\n                      )}\r\n                    >\r\n                      {\" \"}\r\n                      {vehicle.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Date:</span>{\" \"}\r\n                    {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\r\n                    <CurrencyFormat\r\n                      value={vehicle.odometer_reading}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\"  MI\"}\r\n                    />\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\r\n                    {vehicle.inspection_mileage ? \r\n                     <CurrencyFormat\r\n                     value={vehicle.inspection_mileage}\r\n                     displayType={\"text\"}\r\n                     thousandSeparator={true}\r\n                     suffix={\"  MI\"}\r\n                   />\r\n                    : \"Pending\"}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Account Type: </span>{\" \"}\r\n                    {vehicle.account_type}\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"VehicleStepper\">\r\n                <VerticalVehicleStepper\r\n                  vin={vehicle.vin}\r\n                  transportData={transport}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (\r\n    <div>\r\n      {loader ? (\r\n        <Box\r\n          height={\"90vh\"}\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <div>\r\n            <Loaderpage />\r\n            <span className=\"loaderText\">Loading...</span>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <div className=\"listingPageCardNoData\">\r\n          <img src=\"noDataFound.jpeg\" className=\"nodataImage\" />\r\n          <span className=\"nodataText\">No Vehicles found</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )}\r\n  </>\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js",["523","524","525","526","527","528","529","530"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function ManualPricingSideBar() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"EntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"reEntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js",["531","532","533","534"],"import React, { useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst Search = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div style={serachBoxEntire}>\r\n      {showSearchLeft && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n      <input\r\n        value={props?.searchValue}\r\n        className=\"searchInput\"\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n        placeholder={placeholder}\r\n      />\r\n      {showSearchRight && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js",["535","536","537","538","539"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js",["540","541","542","543","544","545","546"],"import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst SearchText = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        value={props?.searchValue}\r\n        maxlength=\"18\"\r\n        className=\"searchInput\"\r\n        fullWidth\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <CloseIcon />\r\n      </IconButton>\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchText;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js",["547","548","549","550","551","552"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Box, TableSortLabel } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { getVehicalStatusHistory } from \"../service/api\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n    backgroundColor: \"#f7f7f8\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\n\r\nexport default function StatusHistory(props) {\r\n  const classes = useStyles();\r\n  const [vin, setVin] = useState(props.vin);\r\n  const [statusHistoryData, setStatusHistoryData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getStatusHistory();\r\n  }, [vin]);\r\n\r\n  async function getStatusHistory() {\r\n    let apiResponse = await getVehicalStatusHistory(vin);\r\n    console.log(\"getVehicalStatusHistory==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setStatusHistoryData(apiResponse.data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display={\"flex\"} alignItems={\"center\"} mb={2}>\r\n        <Box className=\"resultForVin\">\r\n          Results for VIN: {vin}\r\n        </Box>\r\n        <Box pl={2} pt={1}>\r\n          <ClearIcon color=\"secondary\" fontSize=\"small\" />\r\n        </Box>\r\n      </Box>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className={classes.tableheaders}>\r\n            <TableRow>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Status\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  User/ID\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Date\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell>\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Time\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {statusHistoryData &&\r\n              statusHistoryData.map((row, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row?.status}\r\n                  </TableCell>\r\n                  <TableCell>{row?.account}</TableCell>\r\n                  <TableCell>\r\n                    {row?.transactiondate &&\r\n                      moment(row?.transactiondate).format(\"MM/DD/YYYY\")}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row?.transactiondate &&\r\n                      moment(row?.transactiondate).format(\"hh:mm\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\LoaderPage.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js",["553","554","555","556"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport {\r\n  getGroundingDetailsByVin,\r\n  getInspectionVehicleDetails,\r\n  getVehicleSaleInfoByVin,\r\n} from \"../service/api\";\r\nimport moment from \"moment\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nexport default function AdminDetailedReport(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [vin, setVin] = useState(props.vin);\r\n  const [groundingDetails, setGroundingDetails] = useState({});\r\n  const [inspectionVehicleDetails, setInspectionVehicleDetails] = useState({});\r\n  const [vehicleSalesInfo, setVehicleSalesInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    getGroundingDetailsDetails();\r\n    getInspectionVehicleDeta();\r\n    getVehicleSaleInformation();\r\n  }, [vin]);\r\n\r\n  async function getGroundingDetailsDetails() {\r\n    let apiResponse = await getGroundingDetailsByVin(vin);\r\n    console.log(\"getGroundingDetailsByVin==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data && apiResponse.data.data) {\r\n      setGroundingDetails(apiResponse.data.data);\r\n    }\r\n  }\r\n\r\n  async function getInspectionVehicleDeta() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getInspectionVehicleDeta==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setInspectionVehicleDetails(apiResponse.data);\r\n    }\r\n  }\r\n\r\n  async function getVehicleSaleInformation() {\r\n    let apiResponse = await getVehicleSaleInfoByVin(vin);\r\n    console.log(\"getVehicleSaleInfoByVin==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setVehicleSalesInfo(apiResponse.data);\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <div className=\"conditionPageCard\">\r\n      <Box pt={5}>\r\n        <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n          <Grid item md={12}>\r\n            <Box display={\"flex\"} alignItems={\"center\"}>\r\n              <Box className=\"resultForVin\">Results for VIN: {vin}</Box>\r\n              <Box pl={2} pt={1}>\r\n                {\" \"}\r\n                <ClearIcon color=\"secondary\" fontSize=\"small\" />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className=\"codereportimggallery\">\r\n              {inspectionVehicleDetails &&\r\n                inspectionVehicleDetails?.inspection_id && (\r\n                  <MyGallery {...inspectionVehicleDetails} />\r\n                )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <div className=\"ConditionReportSection\">\r\n              <div className=\"reportTitle\">\r\n                <span>Year Make Model Color</span>\r\n              </div>\r\n              {inspectionVehicleDetails && (\r\n                <div>\r\n                  {\" \"}\r\n                  {inspectionVehicleDetails?.inspection_date ? (\r\n                    <span className=\"ConditionReportInspection\">\r\n                      <span className=\"BadgeValue\">Inspection Complete</span>\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"ConditionReportInspectionPending\">\r\n                      <span className=\"BadgeValue\">Inspection Pending</span>\r\n                    </span>\r\n                  )}{\" \"}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <Grid container spacing={3}>\r\n              <Card className=\"vehicleSectionCR\">\r\n                <Typography variant=\"h6\">Grounding Details</Typography>\r\n                <hr />\r\n                <CardContent>\r\n                  {/* {Object.entries(groundingDetails).map(([key, value]) => {\r\n                    return (\r\n                      <List className=\"paddingCSS\" key={key}>\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\"> {key} </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">{value}</span>\r\n                        </ListItemSecondaryAction>\r\n                      </List>\r\n                    );\r\n                  })} */}\r\n\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Account Number </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {\" \"}\r\n                        {groundingDetails?.accountNumber}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Current Status </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {\" \"}\r\n                        {groundingDetails?.currentStatus}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Customer Return Date </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.customerReturnDate &&\r\n                          moment(groundingDetails?.customerReturnDate).format(\r\n                            \"MM/DD/YYYY\"\r\n                          )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Grounding Dealer Number\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.groundingDealerNumber}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Grounding Dealer Name</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.groundingDealerName}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Grounding Date</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.groundingDate &&\r\n                          moment(groundingDetails?.groundingDate).format(\r\n                            \"MM/DD/YYYY\"\r\n                          )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Grounding Mileage </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails.groundingMileage && (\r\n                          <CurrencyFormat\r\n                            value={groundingDetails.groundingMileage}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            suffix={\" MI\"}\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Transportation Order Date\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.transportationOrderedDate &&\r\n                          moment(\r\n                            groundingDetails?.transportationOrderedDate\r\n                          ).format(\"MM/DD/YYYY\")}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Transportation Company</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.transportationCompany}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Bankruptcy Code </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.bankruptcyCode}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Term Code </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.termCode}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Dealer Exclusivity Expire Date\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.dealerExclusivityExpireDate &&\r\n                          moment(\r\n                            groundingDetails?.dealerExclusivityExpireDate\r\n                          ).format(\"MM/DD/YYYY\")}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Type </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">{groundingDetails.type}</span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Residual </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.residual}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Current Payoff Amount</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.currentPayoffAmount}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Grounding Dealer Auction\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.groundingDealerAuction}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Total Outstanding Remaining Payments\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.totalOutstandingRemainingPayments}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Guaranteed Payments </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.guaranteedPayments}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Payment Guarantee </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.paymentGuarantee}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          10-Day Rule No Charge Amount\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.tenDayRuleNotChargeAmount}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Payoff at Grounding </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.payoffAtGrounding}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Market Based Price </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.marketBasedPrice}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Remaining Payments at Grounding\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {groundingDetails?.remainingPaymentsAtGrounding}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                </CardContent>\r\n\r\n                <Typography variant=\"h6\">Inspection Details</Typography>\r\n                <hr />\r\n                <CardContent>\r\n                  {/* {Object.entries(inspectionDetails).map(([key, value]) => {\r\n                    return (\r\n                      <List className=\"paddingCSS\" key={key}>\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\"> {key} </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">{value}</span>\r\n                        </ListItemSecondaryAction>\r\n                      </List>\r\n                    );\r\n                  })} */}\r\n\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Inspection Scheduled Date\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.inspection_req_date &&\r\n                          moment(\r\n                            inspectionVehicleDetails?.inspection_req_date\r\n                          ).format(\"MM/DD/YYYY\")}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Inspection Date </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.inspection_date &&\r\n                          moment(\r\n                            inspectionVehicleDetails?.inspection_date\r\n                          ).format(\"MM/DD/YYYY\")}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Inspection Status </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.inspection_status}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Inspection Mileage </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.inspection_mileage && (\r\n                          <CurrencyFormat\r\n                            value={inspectionVehicleDetails?.inspection_mileage}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            suffix={\" MI\"}\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Master Keys Returned </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.keys?.keys}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Value Keys Returned </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.keys?.valet}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\"> Inspection Type </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.inspection_type}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Excess Wear & Tear Amount\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {inspectionVehicleDetails?.ewu && (\r\n                          <CurrencyFormat\r\n                            value={inspectionVehicleDetails?.ewu}\r\n                            displayType={\"text\"}\r\n                            thousandSeparator={true}\r\n                            prefix=\"$\"\r\n                            suffix={\".00\"}\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                </CardContent>\r\n                <Typography variant=\"h6\">Purchase Details</Typography>\r\n                <hr />\r\n                <CardContent>\r\n                  {/* {Object.entries(purchaseDetails).map(([key, value]) => {\r\n                    return (\r\n                      <List className=\"paddingCSS\" key={key}>\r\n                        <ListItemText>\r\n                          <span className=\"textStyle\">\r\n                            <span className=\"textBold\"> {key} </span>\r\n                          </span>\r\n                        </ListItemText>\r\n                        <ListItemSecondaryAction>\r\n                          <span className=\"textSize\">{value}</span>\r\n                        </ListItemSecondaryAction>\r\n                      </List>\r\n                    );\r\n                  })} */}\r\n\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Sold Date</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.sale_date &&\r\n                          moment(vehicleSalesInfo?.sale_date).format(\r\n                            \"MM/DD/YYYY\"\r\n                          )}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Purchasing Dealer</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.dealer_name}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Purchase Dealer Number</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.dealer_number}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Purchase Type</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.sale_process_stage}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">Gross Purchase Amount</span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.total_sale_amount}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                  <List className=\"paddingCSS\">\r\n                    <ListItemText>\r\n                      <span className=\"textStyle\">\r\n                        <span className=\"textBold\">\r\n                          Purchasing Dealer Legal Name\r\n                        </span>\r\n                      </span>\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <span className=\"textSize\">\r\n                        {vehicleSalesInfo?.dealer_legal_name}\r\n                      </span>\r\n                    </ListItemSecondaryAction>\r\n                  </List>\r\n                </CardContent>\r\n                <div className=\"disclaimerVRS\">\r\n                  Disclaimer: The parts, equipment, accessories, and other\r\n                  information listed above are based on equipment/configuration\r\n                  at the time vehicle was sold by Mazda Motor Corporation to a\r\n                  dealer and does not mean that this vehicle is still so\r\n                  equipped.\r\n                </div>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js",["557","558","559","560","561","562","563","564","565","566","567"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { Paper, Button } from \"@material-ui/core\";\r\n\r\nimport { getImageData } from \"../../service/api\";\r\n// import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nconst tutorialSteps = [\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n  {\r\n    imgPath: \"car.png\",\r\n  },\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n  {\r\n    imgPath: \"maz.png\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n    // border: \"solid 1px #dddbda\",\r\n    margin: \"20px\",\r\n    borderRadius: \"4px\",\r\n    // boxShadow: \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 255,\r\n    display: \"block\",\r\n    maxWidth: 400,\r\n    overflow: \"hidden\",\r\n    width: \"80%\",\r\n  },\r\n  card: {\r\n    boxShadow: \"unset !important\",\r\n    // border: \"1px solid gray\",\r\n  },\r\n  Carousel: {\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nconst Item = ({ small_image_bin_value, file_name }) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <img\r\n        className=\"img\"\r\n        src={\"data:image/jpeg;base64,\" + small_image_bin_value}\r\n        alt={file_name}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nfunction SwipeableTextMobileStepper(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  useEffect(() => {\r\n    console.log(\" props.images\", props.images);\r\n  }, []);\r\n\r\n  //   const handleNext = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  //   };\r\n\r\n  //   const handleBack = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  //   };\r\n\r\n  //   const handleStepChange = (step) => {\r\n  //     setActiveStep(step);\r\n  //   };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Carousel\r\n        className={classes.Carousel}\r\n        navButtonsAlwaysVisible={true}\r\n        autoPlay={false}\r\n        navButtonsProps={{\r\n          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\r\n          style: {\r\n            backgroundColor: \"white\",\r\n            color: \"gray\",\r\n          },\r\n        }}\r\n        indicators={{style:{fontSize:\"11px\"}}}\r\n        indicatorIconButtonProps={{\r\n          style: {\r\n            padding: \"5px\", // 1\r\n            border: \"1px solid #ccc\",\r\n            margin: \"0px 3px\",\r\n            color:\"white\", \r\n            width: \"12px\",\r\n            height: \"12px\"\r\n          },\r\n        }}\r\n        activeIndicatorIconButtonProps={{\r\n          style: {\r\n            color: \"#1589ee\",\r\n            background:\"#1589ee\"\r\n          },\r\n        }}\r\n        \r\n      >\r\n        {props.images &&\r\n          props.images.map((item, i) => <Item key={i} {...item} />)}\r\n      </Carousel>\r\n\r\n      {/* <img className=\"img\" src={tutorialSteps[0].imgPath} alt={tutorialSteps[0].imgPath} /> */}\r\n\r\n      {/* <img className=\"img\" src={tutorialSteps[activeStep].imgPath} alt={tutorialSteps[activeStep].label} />\r\n            <MobileStepper\r\n                steps={maxSteps}\r\n                position=\"static\"\r\n                activeStep={activeStep}\r\n                nextButton={\r\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                    </Button>\r\n                }\r\n                backButton={\r\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n\r\n                    </Button>\r\n                }\r\n            /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js",["568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React, { useEffect } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport Block from \"@material-ui/icons/Block\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport { getTransportationDetails } from \"../../service/api\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nconst QontoConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 10,\r\n    left: \"calc(-50% + 16px)\",\r\n    right: \"calc(50% + 16px)\",\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      borderColor: \"#784af4\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      borderColor: \"#784af4\",\r\n    },\r\n  },\r\n  line: {\r\n    borderColor: \"#eaeaf0\",\r\n    borderTopWidth: 3,\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: \"#eaeaf0\",\r\n    display: \"flex\",\r\n    height: 22,\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    color: \"#0091ff\",\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"currentColor\",\r\n  },\r\n  completed: {\r\n    //color: '#0091ff',\r\n    color: \"#c23934\",\r\n    zIndex: 1,\r\n    fontSize: 22,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Block className={classes.completed} />\r\n      ) : (\r\n        <RadioButtonCheckedIcon />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\nfunction getSteps() {\r\n  return [\r\n    \"Transportation Ordered\",\r\n    \"Transportation Scheduled\",\r\n    \"Transportation Enroute\",\r\n    \"Vehicle Picked Up\",\r\n  ];\r\n}\r\nlet transportMetaData = [\r\n  \"Transportation Ordered\",\r\n  \"Transportation Scheduled\",\r\n  \"Transportation Enroute\",\r\n  \"Vehicle Picked Up\",\r\n];\r\nexport default function VerticalVehicleStepper(props) {\r\n  const classes = useStyles();\r\n  // const [activeStep, setActiveStep] = React.useState(null);\r\n  const [completed, setCompleted] = React.useState([]);\r\n\r\n  const steps = getSteps();\r\n\r\n  const [transportDetails, setTransportDetails] = React.useState(\r\n    props.transportData\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTransportInformation();\r\n\r\n    console.log(\"startpassed verticle stepped\", new Date());\r\n  }, [props.transportData]);\r\n\r\n  const handleComplete = (completedSteps) => {\r\n    let completedsteps = [];\r\n    for (let i = 0; i <= completedSteps; i++) {\r\n      completedsteps.push(true);\r\n    }\r\n    setCompleted(completedsteps);\r\n  };\r\n\r\n  // const handleNext = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  // };\r\n\r\n  // const handleBack = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  // };\r\n\r\n  const handleReset = () => {\r\n    // setActiveStep(0);\r\n    setCompleted([]);\r\n  };\r\n\r\n  const setTransportInformation = () => {\r\n    transportDetails?.data.length > 0 &&\r\n      transportDetails?.data.map((row) => {\r\n        if (row.vin == props.vin) {\r\n          transportMetaData.map((trp, index) => {\r\n            if (trp == row.derivedStatus) {\r\n              handleComplete(index);\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n    console.log(\"startpassed verticle stepped\", new Date());\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear orientation=\"vertical\">\r\n        {steps.map((label, index) => {\r\n          return (\r\n            <Step key={label} active={completed[index]}>\r\n              <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\ExclusivityPeriod.js",["581","582","583","584","585"],"import React, { useState, useEffect } from \"react\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport * as moment from \"moment\";\r\nimport Moment from \"react-moment\";\r\n// import {\r\n//   getGroundingList,\r\n//   getAuthTokenSSO,\r\n//   getAccessTokenEndpoint,\r\n//   getUserInfo,\r\n//   getImageData,\r\n//   // getCarXml,\r\n// } from \"../../service/api\";\r\n\r\nexport default function ExclusivityPeriod(props) {\r\n  // const [starttime, setStartTime] = React.useState(\r\n  //   moment(props.vehicle.start_date).format()\r\n  // );\r\n  const [endtime, setEndTime] = React.useState(\r\n    moment(props.vehicle.end_date).format()\r\n  );\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [duration, setDuration] = React.useState(null);\r\n  const [time, setTime] = React.useState(null);\r\n\r\n  useEffect(() => {\r\n    if (moment(endtime).isAfter(moment(Date.now()))) {\r\n      setInterval(() => {\r\n        let TotalDuration = moment.duration(\r\n          moment(props.vehicle.end_date).diff(moment(props.vehicle.start_date))\r\n        );\r\n        let CompletedDuration = moment.duration(\r\n          moment(Date.now()).diff(moment(props.vehicle.start_date))\r\n        );\r\n\r\n        if (\r\n          parseInt(TotalDuration.asMilliseconds()) &&\r\n          parseInt(CompletedDuration.asMilliseconds())\r\n        ) {\r\n          const completedPercentage =\r\n            (parseInt(CompletedDuration.asMilliseconds()) * 100) /\r\n            parseInt(TotalDuration.asMilliseconds());\r\n\r\n          setProgress(parseInt(completedPercentage));\r\n        }\r\n      }, 5000);\r\n\r\n      setInterval(() => {\r\n        setTime(\r\n          <Moment\r\n            date={endtime}\r\n            format=\"hh:mm:ss\"\r\n            trim\r\n            // durationFromNow={true}\r\n            duration={Date.now()}\r\n            interval={1000}\r\n            utc\r\n          />\r\n        );\r\n      }, 1000);\r\n    }\r\n    console.log(\"start ExclusivityPeriod\",new Date())\r\n\r\n  }, [endtime]);\r\n\r\n  return (\r\n    <>\r\n      <span className=\"textStyle\">\r\n        <span className=\"textBold\">\r\n          Exclusivity Period  &nbsp;\r\n          {/* {props.vehicle.groundingId} */}\r\n        </span>\r\n        :  &nbsp;\r\n        <span className=\"textStyleWarning\">\r\n          {moment(endtime).isAfter(moment(Date.now())) ? (\r\n            <span>\r\n              {time}\r\n              <span> Remaining </span>\r\n            </span>\r\n          ) : (\r\n            \"00:00\"\r\n          )}\r\n        </span>\r\n      </span>\r\n      <span className=\"progressStyle\">\r\n        {progress ? (\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={progress}\r\n            color=\"secondary\"\r\n          />\r\n        ) : (\r\n          <LinearProgress variant=\"determinate\" value={0} color=\"secondary\" />\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js",["586","587","588","589","590","591"],"import React, { useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { postDealerActionPassOnVehicle } from \"../service/api\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function PassOnVehicle(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [noCall, setnoCall] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.close();\r\n  };\r\n\r\n  const handleProceed = () => {\r\n    setOpen(false);\r\n    // setnoCall(true);\r\n    getPassOnDetails();\r\n    props.close();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     getPassOnDetails();\r\n  // }, [noCall]);\r\n\r\n  async function getPassOnDetails() {\r\n    let apiResponse = await postDealerActionPassOnVehicle(props.vin, props.groundingId, props.dealerName);\r\n    \r\n    props.reload();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        open={props.open}\r\n      >\r\n        <DialogTitle\r\n          className=\"viewReportHeader\"\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Pass On vehicle\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid xs={12}>\r\n              <div className=\"viewReportCenter\">\r\n              You have passed on this vehicle, transportation will be ordered.\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions className=\"reportFooter\">\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleProceed}\r\n            className=\"closePassBtn\"\r\n            color=\"secondary\"\r\n          >\r\n            Proceed\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js",["592","593","594"],"import React, {useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 550,\r\n    marginRight: \"50px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n  const classes = useStyles();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const setSearchData = (value) => {\r\n    setSearchText(value);\r\n    props.searchdetails(value);\r\n  };\r\n\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        defaultValue={searchText}\r\n        className={classes.input}\r\n        placeholder=\"Search Vehicle By VIN\"\r\n        inputProps={{ \"aria-label\": \"search vehicle by VIN\" }}\r\n        onChange={(evt) => {\r\n          setSearchData(evt.target.value)\r\n        }}\r\n       \r\n      />\r\n      \r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js",["595","596","597","598","599"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterMileage() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js",["600","601","602","603","604"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Paginator(props) {\r\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\r\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\r\n  const [totalData, setTotalData] = useState(data);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [skipRecords, setSkipRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNoOfPages(Math.ceil(totalData.length / pageCount));\r\n    onChangePage(totalData.slice(skipRecords, pageCount));\r\n  }, [pageCount]);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    event.preventDefault();\r\n    event.target && event.target.value && setPageCount(event.target.value);\r\n  };\r\n\r\n  const onChangePageNumber = (event, page) => {\r\n    event.preventDefault();\r\n    let skip = (page - 1) * pageCount;\r\n    setSkipRecords(skip);\r\n    onChangePage(totalData.slice(skip, skip + pageCount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        className=\"custompagination\"\r\n      >\r\n        <Box pr={2}> {label} </Box>\r\n        <Box pr={2}>\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"demo-customized-select-label\"\r\n              id=\"demo-customized-select\"\r\n              value={pageCount}\r\n              onChange={handleChangePageCount}\r\n              input={<BootstrapInput />}\r\n            >\r\n              {pages &&\r\n                pages.map((menuitem, index) => (\r\n                  <MenuItem key={index} value={menuitem}>\r\n                    {\" \"}\r\n                    {menuitem}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Pagination\r\n          count={noOfPages}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={onChangePageNumber}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginator;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js",["605","606","607","608","609"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterRRM() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js",["610","611","612","613","614"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilter(props) {\r\n  const {\r\n    fetchDataBasedOnSearchValue,\r\n    fetchDataBasedOnFilters,\r\n    resetFilterList,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"CX-5\", text: \"CX-5\" },\r\n    { value: \"MX-5\", text: \"MX-5\" },\r\n    { value: \"Mazda3\", text: \"Mazda3\" },\r\n    { value: \"Mazda6\", text: \"Mazda6\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"Pending\", text: \"Pending\" },\r\n    { value: \"Completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"Texas\", text: \"Texas\" },\r\n    { value: \"Florida\", text: \"Florida\" },\r\n    { value: \"Indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const resetFilterInput = () => {\r\n    setFilterInput({\r\n      vin: \"\",\r\n      yearFrom: \"\",\r\n      yearTo: \"\",\r\n      make: \"\",\r\n      inspectionStatus: \"\",\r\n      inspectionDateFrom: \"\",\r\n      inspectionDateTo: \"\",\r\n      groundingRegion: \"\",\r\n      auctionCode: \"\",\r\n    });\r\n    resetFilterList();\r\n    setState({ ...state, [\"right\"]: false });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button\r\n          autoFocus\r\n          className={classes.cancelButton}\r\n          color=\"primary\"\r\n          onClick={() => resetFilterInput()}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={() => fetchDataBasedOnFilters(filterInput)}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          value={searchtext || \"\"}\r\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\UpdateMileage.js",["615","616","617","618","619","620","621","622","623","624","625","626","627","628"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewDetailedReport from \"../pages/ViewDetailedReport\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport MyGallery from \"../pages/ImageGallery\";\r\nimport PrintSharp from \"@material-ui/icons/PrintSharp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  getPassedList1,\r\n  getInspectionDamageDetailsApi,\r\n  getOEMBuildDetailsApi,\r\n  getPurchasedList,\r\n  getInspectionVehicleDetails,\r\n  getInspectionAccessoryDetails,\r\n  getInspectionWheelTiresDetails,\r\n} from \"../service/api\";\r\n\r\nimport moment from \"moment\";\r\nimport PurchasedPricingSideBar from \"../components/PurchasedPricingSideBar\";\r\nimport TransactionModal from \"../pages/TransactionModal\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport UpdateMileagePricing from \"./UpdateMileagePricing\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\nexport default function UpdateMileage(props) {\r\n  let listOfItem = [\r\n    \"VIN\",\r\n    \"Engine\",\r\n    \"Door\",\r\n    \"Body Style\",\r\n    \"Transmission\",\r\n    \"Drive Train\",\r\n    \"Interior type\",\r\n    \"Interior Color\",\r\n    \"Keys\",\r\n    \"Interior Type\",\r\n    \"Odor\",\r\n    \"Grounding Mileage\",\r\n    \"Account Type\",\r\n  ];\r\n\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});// inspectiondata\r\n  const [inspectionId, setInspectionId] = React.useState(props?.inspectiondata?.inspection_id);\r\n\r\n  const [vin, setVin] = React.useState(props?.vin);\r\n  const [accessoryDetails, setAccessoryDetails] = React.useState([]);\r\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\r\n  const [purchaseSection, setPurchaseSection] = React.useState(\r\n    props?.location?.state?.purchaseSection\r\n  );\r\n  const [VehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [value, setValue] = useState([])\r\n  const [DamageDetails, setDamageDetails] = useState([]);\r\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n  const [vehicleDetails, setvehicleDetails] = React.useState(\r\n    props?.location?.state?.vehicleDetails\r\n  );\r\n\r\n  const [openTransactionPopup, setOpenTransactionPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getOEMBuildDetails();\r\n    // getConditionVehicleDetails();\r\n    getVehicleDetails();\r\n    getInspectionAccessory(vin);\r\n    getConditionVehicleDetails();\r\n  }, [vin]);\r\n\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setCondionVehicleDetails(apiResponse.data);\r\n      if (apiResponse.data.inspection_id) { \r\n        setInspectionId(apiResponse.data.inspection_id);\r\n        props.onGetConditionVehicleDetails(apiResponse.data);\r\n        // cloadDamageDetails(apiResponse.data.inspection_id);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async function getOEMBuildDetails() {\r\n    let apiResponse = await getOEMBuildDetailsApi(vin);\r\n    setOEMBuildDetailsData(apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionDamageDetails() {\r\n    let getInspectionDamageDetailsaApiResponse =\r\n      await getInspectionDamageDetailsApi(inspectionId, vin);\r\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\r\n  }\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPurchasedList(vin);\r\n    setVehicleResponse(apiResponse.data.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionWheelTires(inspectionId);\r\n    getInspectionDamageDetails(inspectionId);\r\n  }, [inspectionId]);\r\n\r\n  // async function getConditionVehicleDetails() {\r\n  //   let apiResponse = await getInspectionVehicleDetails(vin);\r\n  //   console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n  //   apiResponse &&\r\n  //     apiResponse.data &&\r\n  //     setCondionVehicleDetails(apiResponse.data);\r\n  //   apiResponse &&\r\n  //     apiResponse.data &&\r\n  //     apiResponse.data.inspection_id &&\r\n  //     setInspectionId(apiResponse.data.inspection_id);\r\n  // }\r\n\r\n  async function getInspectionAccessory(vin) {\r\n    let apiResponse = await getInspectionAccessoryDetails(vin);\r\n    setAccessoryDetails(apiResponse.data);\r\n    console.log(\"xxxxxxxxx\", apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionWheelTires(inspectionId) {\r\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\r\n    setWheelTiresDetails(apiResponse.data);\r\n    console.log(\"-------------xxxxxx\", inspectionId);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Box display={\"flex\"} alignItems={\"center\"} mb={2}>\r\n        <Box className=\"resultForVin\">Results for VIN: {vin}</Box>\r\n        <Box pl={2} pt={1}>\r\n          <ClearIcon color=\"secondary\" fontSize=\"small\" />\r\n        </Box>\r\n      </Box> \r\n      \r\n      {/* <div className=\"myContainerLayout\"> */}\r\n      <div className=\"myContainerLayout\">\r\n          <Grid>\r\n            <div className=\"conditionTopBar\">\r\n              {/* <Grid xs={12} className=\"conditionTopBarLayout\">\r\n                <PrintSharp />\r\n                <span className=\"conditionTopBarStyles\">Print Report</span>\r\n              </Grid> */}\r\n            </div>\r\n          </Grid>\r\n          {condionVehicleDetails?.inspection_date &&\r\n          condionVehicleDetails?.inspection_date ? (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <div className=\"codereportimggallery\">\r\n                    <MyGallery {...condionVehicleDetails} />\r\n                  </div>\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Exterior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.exteriorCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.exteriorCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Interior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.interiorCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.interiorCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Mechanical total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails && DamageDetails.maintainenceCost ? (\r\n                              <CurrencyFormat\r\n                                value={parseFloat(\r\n                                  DamageDetails.maintainenceCost\r\n                                ).toFixed(2)}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Box py={6} textAlign=\"center\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          className=\"detailedReport\"\r\n                          onClick={handleOpen}\r\n                          disabled={!condionVehicleDetails?.inspection_date}\r\n                        >\r\n                          View Full Damage Report\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: Damage estimates are included for reference\r\n                        and may not be reflective of the actual repair costs\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <div className=\"LabelTextTextArea\">Announcements</div>\r\n                  <TextareaAutosize\r\n                    disabled\r\n                    className=\"inputFieldTextArea\"\r\n                    aria-label=\"maximum height\"\r\n                    defaultValue={condionVehicleDetails?.inspection_notes}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Grid container spacing={1}>\r\n                    <div className=\"ConditionReportSection\">\r\n                      <div>\r\n                        <div className=\"reportTitle\">\r\n                          <span>\r\n                            {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        {condionVehicleDetails?.inspection_date && (\r\n                          <span className=\"ConditionReportInspection\">\r\n                            <span className=\"BadgeValue\">\r\n                              Inspection Complete\r\n                            </span>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails && vehicleDetails.pay_off_amt ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    vehicleDetails.pay_off_amt\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails &&\r\n                              vehicleDetails.remaining_pmts &&\r\n                              vehicleDetails.residual_amt ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    vehicleDetails.residual_amt +\r\n                                      vehicleDetails.remaining_pmts\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Market Based</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails &&\r\n                              vehicleDetails.vehicle_price ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    vehicleDetails.vehicle_price\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                          <div className=\"smallCardBody\">\r\n                            {condionVehicleDetails?.condition_grade}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Inspection Mileage\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            {condionVehicleDetails &&\r\n                            condionVehicleDetails?.inspection_mileage ? (\r\n                              <CurrencyFormat\r\n                                value={condionVehicleDetails.inspection_mileage}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                suffix={\" MI\"}\r\n                              />\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                        <hr />\r\n                      </Typography>\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {moment(\r\n                                condionVehicleDetails?.inspection_date\r\n                              ).format(\"MM/DD/YYYY\")}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_name}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address2}\r\n                              {condionVehicleDetails?.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_state}-\r\n                              {condionVehicleDetails?.location_zip}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_phone}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.doors}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.driveTrain}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              Master: {condionVehicleDetails?.keys.keys}/ Valet:{\" \"}\r\n                              {condionVehicleDetails?.keys.valet}\r\n                            </span>\r\n                            <span className=\"textSize\">\r\n                              Smart Key: {condionVehicleDetails?.keys.smartKey}{\" \"}\r\n                              / Remotes:\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                Grounding Mileage\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.grounding_mileage ? (\r\n                                <CurrencyFormat\r\n                                  value={\r\n                                    condionVehicleDetails.grounding_mileage\r\n                                  }\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" MI\"}\r\n                                />\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {\" \"}\r\n                              {condionVehicleDetails?.account_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.odor == \"true\"\r\n                                ? \"Yes\"\r\n                                : \"None\"}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <Box className=\"accessoriestextStyle\">\r\n                          {accessoryDetails.length > 0 &&\r\n                            accessoryDetails.map((list, index) => {\r\n                              return (\r\n                                <Box\r\n                                  className=\"accessoriestinlineextStyle\"\r\n                                  key={index}\r\n                                >\r\n                                  <Typography>\r\n                                    {list.description.toLowerCase()}\r\n                                  </Typography>\r\n                                </Box>\r\n                              );\r\n                            })}\r\n                        </Box>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                {/* <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell> */}\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"left\"> </TableCell> */}\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tires</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>Wheel</TableCell>\r\n                                <TableCell>Tread Depth </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    {/* <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell> */}\r\n                                    <TableCell align=\"left\">\r\n                                      {\r\n                                        list.inspectionWheelTiresId\r\n                                          .tire_location\r\n                                      }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.wheel}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <Grid>\r\n                    <div className=\"imageReportSection\">\r\n                      <img src=\"TMZ.png\" alt=\"Mazda Logo\" width=\"100%\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <div className=\"pendingReport\">\r\n                      <span>Pending Inspection Report</span>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <Grid container spacing={1}>\r\n                    <div className=\"ConditionReportSection\">\r\n                      <div>\r\n                        <div className=\"reportTitle\">\r\n                          <span>\r\n                            {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                            {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"inspectionStatusWarning\">\r\n                          <span className=\"BadgeValue\">Inspection pending</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span>\r\n                              {vehicleDetails && vehicleDetails.pay_off_amt ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    vehicleDetails.pay_off_amt\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span>\r\n                              {vehicleDetails &&\r\n                              vehicleDetails.residual_amt &&\r\n                              vehicleDetails.remaining_pmts ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    vehicleDetails.residual_amt +\r\n                                      vehicleDetails.remaining_pmts\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                      </Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails &&\r\n                              condionVehicleDetails?.grounding_mileage ? (\r\n                                <CurrencyFormat\r\n                                  value={parseFloat(\r\n                                    condionVehicleDetails.grounding_mileage\r\n                                  ).toFixed(2)}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  suffix={\" MI\"}\r\n                                />\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {\" \"}\r\n                              {condionVehicleDetails?.account_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n\r\n                        <span className=\"pendingReport\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                {/* <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell> */}\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"left\"> </TableCell> */}\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tires</Typography>\r\n                        <hr />\r\n                        <span className=\"pendingReport\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n          <ViewDetailedReport\r\n            DamageDetails={DamageDetails}\r\n            open={open}\r\n            close={handleClose}\r\n            {...condionVehicleDetails}\r\n          />\r\n        </div>\r\n        {/* <div>\r\n          {condionVehicleDetails?.inspection_date &&\r\n          condionVehicleDetails?.inspection_date ? (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <div className=\"codereportimggallery\">\r\n                    <MyGallery {...condionVehicleDetails} />\r\n                  </div>\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Exterior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails.exteriorCost ? (\r\n                              <CurrencyFormat\r\n                                value={DamageDetails.exteriorCost}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                                suffix={\".00\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Interior total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails.interiorCost ? (\r\n                              <CurrencyFormat\r\n                                value={DamageDetails.interiorCost}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                                suffix={\".00\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Card className=\"ConditionCardDamage\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Mechanical total</div>\r\n                          <div className=\"smallCardBody warningColor\">\r\n                            {}\r\n                            {DamageDetails.maintainenceCost ? (\r\n                              <CurrencyFormat\r\n                                value={DamageDetails.maintainenceCost}\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                                suffix={\".00\"}\r\n                              />\r\n                            ) : (\r\n                              \"$0.0\"\r\n                            )}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Box py={4} display={'flex'} justifyContent={'center'}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className=\"detailedReport\"\r\n                        onClick={handleOpen}\r\n                        disabled={!condionVehicleDetails?.inspection_date}\r\n                      >\r\n                        View Full Damage Report\r\n                      </Button>\r\n                      </Box>\r\n                      \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: Damage estimates are included for reference\r\n                        and may not be reflective of the actual repair costs\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <div className=\"LabelTextTextArea\">Announcements</div>\r\n                  <TextareaAutosize\r\n                    className=\"inputFieldTextArea\"\r\n                    aria-label=\"maximum height\"\r\n                    placeholder=\"Maximum 4 rows\"\r\n                    defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <div className=\"ConditionReportSection\">\r\n                    <div className=\"reportTitle\">\r\n                      <span>\r\n                        {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                      </span>\r\n                    </div>\r\n                    {condionVehicleDetails?.inspection_date && (\r\n                      <span className=\"ConditionReportInspection\">\r\n                        <span className=\"BadgeValue\">Inspection Complete</span>\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails?.pay_off_amt ? (\r\n                                <CurrencyFormat\r\n                                  value={vehicleDetails?.pay_off_amt}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                  suffix=\".00\"\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle1\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails?.residual_amt ||\r\n                              vehicleDetails?.remaining_pmts ? (\r\n                                <CurrencyFormat\r\n                                  value={\r\n                                    vehicleDetails?.residual_amt +\r\n                                    vehicleDetails?.remaining_pmts\r\n                                  }\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                  suffix=\".00\"\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Market Based</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails?.vehicle_price ? (\r\n                                <CurrencyFormat\r\n                                  value={vehicleDetails?.vehicle_price}\r\n                                  displayType={\"text\"}\r\n                                  thousandSeparator={true}\r\n                                  prefix={\"$\"}\r\n                                  suffix=\".00\"\r\n                                />\r\n                              ) : (\r\n                                \"$0.0\"\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                          <div className=\"smallCardBody\">\r\n                            {condionVehicleDetails?.condition_grade}\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Odometer</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <CurrencyFormat\r\n                              value={\r\n                                condionVehicleDetails?.inspection_mileage\r\n                                  ? condionVehicleDetails.inspection_mileage\r\n                                  : \"\"\r\n                              }\r\n                              displayType={\"text\"}\r\n                              thousandSeparator={true}\r\n                              suffix={\"  MI\"}\r\n                            />\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                      </Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {moment(\r\n                                condionVehicleDetails?.inspection_date\r\n                              ).format(\"MM/DD/YYYY\")}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_name}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address2}\r\n                              {condionVehicleDetails?.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_state}-\r\n                              {condionVehicleDetails?.location_zip}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle1\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_phone}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.doors}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.driveTrain}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              Master: {condionVehicleDetails?.keys.keys}/ Valet:{\" \"}\r\n                              {condionVehicleDetails?.keys.valet}\r\n                            </span>\r\n                            <span className=\"textSize\">\r\n                              Smart Key: {condionVehicleDetails?.keys.smartKey}{\" \"}\r\n                              / Remotes:\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.odor == \"true\"\r\n                                ? \"Yes\"\r\n                                : \"None\"}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <Box className=\"accessoriestextStyle\">\r\n                          {accessoryDetails.length > 0 &&\r\n                            accessoryDetails.map((list, index) => {\r\n                              return (\r\n                                <Box key={index} className=\"accessoriestinlineextStyle\">\r\n                                  <Typography variant=\"span\">\r\n                                    {list.description.toLowerCase()}\r\n                                  </Typography>\r\n                                </Box>\r\n                              );\r\n                            })}\r\n                        </Box>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\"> </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell align=\"center\">Brand</TableCell>\r\n                                <TableCell align=\"center\">Size</TableCell>\r\n                                <TableCell align=\"center\">Wheel</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  Tread Depth\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                   \r\n                                    <TableCell align=\"center\">\r\n                                      {\r\n                                        list.inspectionWheelTiresId\r\n                                          .tire_location\r\n                                      }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {list.wheel}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ) : (\r\n            <Box px={2}>\r\n              <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                <Grid item xs={5}>\r\n                  <Grid item>\r\n                    <div className=\"imageReportSection\">\r\n                      <img src=\"TMZ.png\" alt=\"Mazda Logo\" width=\"100%\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid container className=\"ConditionCardBody\">\r\n                    <div className=\"damageTitle\">\r\n                      <span>Damage Report</span>\r\n                    </div>\r\n                    <div className=\"pendingReport\">\r\n                      <span>Pending Inspection Report</span>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={7}>\r\n                  <div className=\"ConditionReportSection\">\r\n                    <div className=\"reportTitle\">\r\n                      <span>\r\n                        {vehicleDetails && vehicleDetails.model_year}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.brand}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.model}{\" \"}\r\n                        {vehicleDetails && vehicleDetails.ext_color}{\" \"}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <span className=\"inspectionStatusWarning\">\r\n                      <span className=\"BadgeValue\">Inspection pending</span>\r\n                    </span>\r\n                  </div>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle\">Payoff</div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              {vehicleDetails?.pay_off_amt ? \r\n                               <CurrencyFormat\r\n                               value={\r\n                                 vehicleDetails?.pay_off_amt\r\n                               }\r\n                               displayType={\"text\"}\r\n                               thousandSeparator={true}\r\n                               prefix={\"$\"}\r\n                               suffix=\".00\"\r\n                             /> : \r\n                             \"$0.0\"\r\n                            }\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={4} className=\"ConditionCardMargin\">\r\n                      <Card className=\"ConditionCard\">\r\n                        <CardContent>\r\n                          <div className=\"smallCardTitle1\">\r\n                            Residual + Remaining\r\n                          </div>\r\n                          <div className=\"smallCardBody\">\r\n                            <span className=\"textSize\">\r\n                              <CurrencyFormat\r\n                                value={\r\n                                  vehicleDetails?.residual_amt +\r\n                                  vehicleDetails?.remaining_pmts\r\n                                }\r\n                                displayType={\"text\"}\r\n                                thousandSeparator={true}\r\n                                prefix={\"$\"}\r\n                              />\r\n                              .00\r\n                            </span>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container spacing={3}>\r\n                    <Card className=\"vehicleSectionCR\">\r\n                      <Typography variant=\"h6\" className=\"vehicleDetailsMargin\">\r\n                        Vehicle Details\r\n                      </Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.consignor}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n\r\n                        <span className=\"Pending-Inspection-R\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"left\">Description</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                  Package Details\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {OEMBuildDetailsData.map((list, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list.accessory_code}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                      {list.description}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\"> </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                        <hr />\r\n                        <span className=\"Pending-Inspection-R\">\r\n                          Pending Inspection Report\r\n                        </span>\r\n                      </CardContent>\r\n\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n          <ViewDetailedReport\r\n            DamageDetails={DamageDetails}\r\n            open={open}\r\n            close={handleClose}\r\n          />\r\n        </div> */} \r\n       \r\n      {/* </div> */}\r\n\r\n      <Box>\r\n        <TransactionModal\r\n          type={\"success\"}\r\n          open={openTransactionPopup}\r\n          onClose={() => {\r\n            setOpenTransactionPopup(false);\r\n          }}\r\n        ></TransactionModal>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\UpdateMileagePricing.js",["629","630","631","632","633","634","635"],"import React, { useEffect, useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { List, Box } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {\r\n  updateMileage,\r\n  updatePricingHistory,\r\n  getClearfaxStatusByVin,\r\n} from \"../service/api\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function UpdateMileagePricing(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(true);\r\n  const [vin, setVin] = useState(props?.vin);\r\n  const [clearFixStatus, setClearFixStatus] = useState(null);\r\n  const [updateStatus, setUpdateStatus] = useState(null);\r\n  const [updatePrisingStatus, setUpdatePrisingStatus] = useState(null);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({}); // inspectiondata\r\n\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  useEffect(() => {\r\n    getClearfaxStatus();\r\n  }, [vin]);\r\n\r\n  useEffect(() => {\r\n    setCondionVehicleDetails(props.condionVehicleDetails);\r\n  }, [props?.condionVehicleDetails]);\r\n\r\n  async function getClearfaxStatus() {\r\n    let apiResponse = await getClearfaxStatusByVin(vin);\r\n    console.log(\"getClearfaxStatusByVin==>\", apiResponse);\r\n    if (apiResponse && apiResponse.data) {\r\n      setClearFixStatus(apiResponse.data);\r\n    }\r\n  }\r\n\r\n  const [mileageForm, setMileageForm] = useState({\r\n    groundingMileage: null,\r\n    confirmGroundingMileage: null,\r\n    reasonForUpdate: \"\",\r\n    hasErr: false,\r\n  });\r\n  const [vehiclePriceForm, setVehiclePriceForm] = useState({\r\n    vehicle_price: \"\",\r\n    confirm_vehicle_price: \"\",\r\n    region: \"\",\r\n    hasErr: false,\r\n  });\r\n\r\n  const handleOnChangeMileage = (event) => {\r\n    if (event.target.name === \"confirmGroundingMileage\") {\r\n      setMileageForm({\r\n        ...mileageForm,\r\n        ...{ [event.target.name]: event.target.value, hasErr: true },\r\n      });\r\n    } else {\r\n      setMileageForm({\r\n        ...mileageForm,\r\n        ...{ [event.target.name]: event.target.value },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOnChangeVehiclePrice = (event) => {\r\n    if (event.target.name === \"confirm_vehicle_price\") {\r\n      setVehiclePriceForm({\r\n        ...vehiclePriceForm,\r\n        ...{ [event.target.name]: event.target.value, hasErr: true },\r\n      });\r\n    } else {\r\n      setVehiclePriceForm({\r\n        ...vehiclePriceForm,\r\n        ...{ [event.target.name]: event.target.value },\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateDetails = () => {\r\n    mileageForm.groundingMileage && doUpdateMileage();\r\n    vehiclePriceForm.vehicle_price && doUpdateVehiclePrice();\r\n    setTimeout(() => {\r\n      setUpdateStatus(null);\r\n      setUpdatePrisingStatus(null);\r\n    }, 4000);\r\n  };\r\n\r\n  const doUpdateMileage = () => {\r\n    if (mileageForm.groundingMileage === mileageForm.confirmGroundingMileage) {\r\n      var updateMileageType = {\r\n        adjustedBy: \"adjustedBy\",\r\n        dealerName: \"testdealer\",\r\n        groundingMileage: parseInt(mileageForm.groundingMileage),\r\n        reasonForUpdate: mileageForm.reasonForUpdate,\r\n        vin: vin,\r\n      };\r\n      updateMileage(updateMileageType).then((res) => {\r\n        console.log(\"updateMileage\", res);\r\n        if (res.data === \"Success\") {\r\n          setUpdateStatus(true);\r\n        } else {\r\n          setUpdateStatus(false);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\r\n        \"Grounding Mileage and Confirm Grounding Mileage is not match\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const doUpdateVehiclePrice = () => {\r\n    if (\r\n      vehiclePriceForm.vehicle_price === vehiclePriceForm.confirm_vehicle_price\r\n    ) {\r\n      var updatePricingHistoryType = {\r\n        priceMethod: \"Manual\",\r\n        providerName: \"test user\",\r\n        vehicle_price: vehiclePriceForm.vehicle_price,\r\n        region: vehiclePriceForm.region,\r\n        vin: vin,\r\n      };\r\n\r\n      updatePricingHistory(updatePricingHistoryType).then((res) => {\r\n        console.log(\"updatePricingHistory\", res);\r\n        if (res.data === \"Success\") {\r\n          setUpdatePrisingStatus(true);\r\n        } else {\r\n          setUpdatePrisingStatus(false);\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"Vehicle Price and Confirm Vehicle Price is not match\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"updatePricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Update Mileage/Pricing</ListItem>\r\n      <ListItem>\r\n        <div>\r\n          <h3>Mileage</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricing\">Original Grounding Mileage</div>\r\n        <div className=\"manualPricing\">\r\n          {condionVehicleDetails && condionVehicleDetails?.grounding_mileage ? (\r\n            <CurrencyFormat\r\n              value={condionVehicleDetails?.grounding_mileage}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              suffix={\" MI\"}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Inspection Mileage</p>\r\n        <p className=\"manualPricing\">\r\n          {condionVehicleDetails &&\r\n          condionVehicleDetails?.inspection_mileage ? (\r\n            <CurrencyFormat\r\n              value={condionVehicleDetails?.inspection_mileage}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              suffix={\" MI\"}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Update Grounding Mileage\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            onKeyPress={(e) => !/[0-9]/.test(e.key) && e.preventDefault()}\r\n            placeholder=\"Enter Grounding Mileage\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"groundingMileage\"\r\n            value={mileageForm.groundingMileage}\r\n            onChange={handleOnChangeMileage}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Confirm Grounding Mileage\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            onKeyPress={(e) => !/[0-9]/.test(e.key) && e.preventDefault()}\r\n            placeholder=\"Enter Confirm Grounding Mileage\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"confirmGroundingMileage\"\r\n            value={mileageForm.confirmGroundingMileage}\r\n            onChange={handleOnChangeMileage}\r\n            borderColor={\"red\"}\r\n          />\r\n          {mileageForm.hasErr &&\r\n          mileageForm.groundingMileage !==\r\n            mileageForm.confirmGroundingMileage ? (\r\n            <Box color={\"red\"} fontSize={12}>\r\n              Confirm grounding mileage is not matched!\r\n            </Box>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Reason for Update\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Reason for Update\"\r\n            id=\"vin-input\"\r\n            name=\"reasonForUpdate\"\r\n            value={mileageForm.reasonForUpdate}\r\n            onChange={handleOnChangeMileage}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div>\r\n          <h3>Pricing</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            onKeyPress={(e) => !/[0-9]/.test(e.key) && e.preventDefault()}\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"vehicle_price\"\r\n            value={vehiclePriceForm.vehicle_price}\r\n            onChange={handleOnChangeVehiclePrice}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            onKeyPress={(e) => !/[0-9]/.test(e.key) && e.preventDefault()}\r\n            placeholder=\"Enter Confirm Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"confirm_vehicle_price\"\r\n            value={vehiclePriceForm.confirm_vehicle_price}\r\n            onChange={handleOnChangeVehiclePrice}\r\n          />\r\n          {vehiclePriceForm.hasErr &&\r\n          vehiclePriceForm.vehicle_price !==\r\n            vehiclePriceForm.confirm_vehicle_price ? (\r\n            <Box color={\"red\"} fontSize={12}>\r\n              Confirm price is not matched!\r\n            </Box>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={vehiclePriceForm.reason}\r\n            onChange={handleOnChangeVehiclePrice}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <Box display={\"flex\"} alignItems={\"center\"} width={\"100%\"}>\r\n          <Box className=\"manualPricing\">TFS Carfax Alert Status:</Box>\r\n          <Box pt={1}>\r\n            <FiberManualRecordIcon\r\n              style={{\r\n                color: clearFixStatus === \"Green\" ? \"#4bca81\" : \"#cc0000\",\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </ListItem>\r\n     {/* // <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem> */}\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      {/* const [updateStatus, setUpdateStatus] = useState(false); const\r\n      [updatePrisingStatus, setUpdatePrisingStatus] = useState(false); */}\r\n      <ListItem>\r\n        {updateStatus === true && (\r\n          <Alert variant=\"outlined\" severity=\"success\">\r\n            Mileage updated successfully!\r\n          </Alert>\r\n        )}\r\n        {updateStatus === false && (\r\n          <Alert variant=\"outlined\" severity=\"error\">\r\n            Mileage updating failed!\r\n          </Alert>\r\n        )}\r\n      </ListItem>\r\n      <ListItem>\r\n        {updatePrisingStatus === true && (\r\n          <Alert variant=\"outlined\" severity=\"success\">\r\n            Price updated successfully!\r\n          </Alert>\r\n        )}\r\n\r\n        {updatePrisingStatus === false && (\r\n          <Alert variant=\"outlined\" severity=\"error\">\r\n            Price updating failed!\r\n          </Alert>\r\n        )}\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className=\"updateButton\"\r\n          color=\"secondary\"\r\n          onClick={updateDetails}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileagePricingSideBar.js",["636","637","638","639","640","641","642","643"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function MileagePricingSideBar() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"EntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"reEntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\headers.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Login.js",["644","645","646","647","648","649"],"import React, {useEffect} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { getOktaUserInfo } from '../service/api';\r\n\r\nconst Login = ({ config }) => {\r\n\r\n \r\n\r\n    const { oktaAuth, authState } = useOktaAuth();\r\n    let data1 = getParameterByName1(\"id_token\");\r\n    let data2 = getParameterByName(\"access_token\");\r\n    localStorage.setItem(\"okta_id_token\",data1);\r\n    localStorage.setItem(\"okta_access_token\",data2);\r\n    function getParameterByName(name, url = window.location.href) {\r\n      name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n          results = regex.exec(url);\r\n      if (!results) return null;\r\n      if (!results[2]) return '';\r\n      return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n    }\r\n    function getParameterByName1(name, url = window.location.href) {\r\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n        var regex = new RegExp('[#&]' + name + '(=([^&#]*)|&|#|$)'),\r\n            results = regex.exec(url);\r\n        if (!results) return null;\r\n        if (!results[2]) return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n      }\r\n     \r\n      useEffect(() => {\r\n        getToken();\r\n        // getUserAccessInfoToken();\r\n      });\r\n      async function getToken(){\r\n        let apiResponse = await getOktaUserInfo();\r\n        localStorage.setItem(\"dealerName\",apiResponse.name);\r\n      }\r\n      \r\n\r\n    const onSuccess = (tokens) => {\r\n        oktaAuth.handleLoginRedirect(tokens);\r\n    };\r\n\r\n    const onError = (err) => {\r\n        console.log('error logging in', err);\r\n    };\r\n\r\n    if (!authState) return null;\r\n\r\n    return authState.isAuthenticated ?\r\n        <Redirect to={{ pathname: '/adminSearch' }} /> : \r\n        // <OktaSignInWidget\r\n        //     config={config}\r\n        //     onSuccess={onSuccess}\r\n        //     onError={onError} />;\r\n        <Redirect to={{ pathname: 'https://tfs.oktapreview.com/login/default' }} />\r\n};\r\nexport default Login;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\OktaSignInWidget.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Login3.js",["650","651","652","653"],"import React, { useState, useEffect } from \"react\";\r\nimport { getOktaUserInfo } from \"../service/api\";\r\n\r\nfunction Login3(props) {\r\n    let data1 = getParameterByName1(\"id_token\");\r\n    let data2 = getParameterByName(\"access_token\");\r\n    function getParameterByName(name, url = window.location.href) {\r\n        name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n            results = regex.exec(url);\r\n        if (!results) return null;\r\n        if (!results[2]) return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n      }\r\n      function getParameterByName1(name, url = window.location.href) {\r\n          name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n          var regex = new RegExp('[#&]' + name + '(=([^&#]*)|&|#|$)'),\r\n              results = regex.exec(url);\r\n          if (!results) return null;\r\n          if (!results[2]) return '';\r\n          return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n        }\r\n\r\n  useEffect(() => {\r\n    setToken();\r\n  }, []);\r\n\r\n  async function setToken() {\r\n    localStorage.clear();\r\n    localStorage.setItem(\"ESGToken\",data1);\r\n    localStorage.setItem(\"okta_access_token\",data2);\r\n    let apiResponse1 = await getOktaUserInfo();\r\n    localStorage.setItem(\"dealerName\",apiResponse1.data.name);\r\n    props.history.push(\"/grounded\");\r\n   }\r\n\r\n\r\n  return <div></div>;\r\n}\r\n\r\nexport default Login3;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PaginationDealerView.js",["654","655","656","657","658","659","660","661","662","663"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Paginator(props) {\r\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\r\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\r\n  const [totalData, setTotalData] = useState(data);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [skipRecords, setSkipRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNoOfPages(Math.ceil(localStorage.getItem(\"purchaseCount\")/ pageCount));\r\n    onChangePage(totalData.slice(skipRecords, pageCount));\r\n  }, [pageCount]);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    event.preventDefault();\r\n    event.target && event.target.value && setPageCount(event.target.value);\r\n  }; \r\n\r\n  const onChangePageNumber = (event, page) => {\r\n    event.preventDefault();\r\n    let skip = (page - 1) * pageCount;\r\n    setSkipRecords(skip);\r\n\r\n    onChangePage(totalData.slice(skip, skip + pageCount),page);\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        className=\"custompagination1\"\r\n      >\r\n        <Box pr={2}> {label} </Box>\r\n        <Box pr={2}>\r\n          <FormControl>\r\n            {/* <Select\r\n              labelId=\"demo-customized-select-label\"\r\n              id=\"demo-customized-select\"\r\n              value={pageCount}\r\n              onChange={handleChangePageCount}\r\n              input={<BootstrapInput />}\r\n            >\r\n              {pages &&\r\n                pages.map((menuitem, index) => (\r\n                  <MenuItem key={index} value={menuitem}>\r\n                    {\" \"}\r\n                    {menuitem}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select> */}\r\n          </FormControl>\r\n        </Box>\r\n        <Pagination\r\n          count={noOfPages}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={onChangePageNumber}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginator;\r\n",{"ruleId":"664","replacedBy":"665"},{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","severity":1,"message":"669","line":5,"column":33,"nodeType":"670","messageId":"671","endLine":5,"endColumn":46},{"ruleId":"668","severity":1,"message":"672","line":14,"column":10,"nodeType":"670","messageId":"671","endLine":14,"endColumn":18},{"ruleId":"668","severity":1,"message":"673","line":14,"column":20,"nodeType":"670","messageId":"671","endLine":14,"endColumn":29},{"ruleId":"668","severity":1,"message":"674","line":14,"column":43,"nodeType":"670","messageId":"671","endLine":14,"endColumn":52},{"ruleId":"675","severity":1,"message":"676","line":69,"column":21,"nodeType":"677","messageId":"678","endLine":69,"endColumn":26},{"ruleId":"668","severity":1,"message":"679","line":2,"column":8,"nodeType":"670","messageId":"671","endLine":2,"endColumn":14},{"ruleId":"668","severity":1,"message":"680","line":6,"column":5,"nodeType":"670","messageId":"671","endLine":6,"endColumn":11},{"ruleId":"668","severity":1,"message":"681","line":7,"column":8,"nodeType":"670","messageId":"671","endLine":7,"endColumn":18},{"ruleId":"668","severity":1,"message":"682","line":53,"column":9,"nodeType":"670","messageId":"671","endLine":53,"endColumn":16},{"ruleId":"683","severity":1,"message":"684","line":65,"column":6,"nodeType":"685","endLine":65,"endColumn":61,"suggestions":"686"},{"ruleId":"683","severity":1,"message":"687","line":65,"column":7,"nodeType":"688","endLine":65,"endColumn":60},{"ruleId":"689","severity":1,"message":"690","line":80,"column":5,"nodeType":"691","messageId":"692","endLine":80,"endColumn":19},{"ruleId":"668","severity":1,"message":"693","line":96,"column":9,"nodeType":"670","messageId":"671","endLine":96,"endColumn":14},{"ruleId":"668","severity":1,"message":"694","line":2,"column":8,"nodeType":"670","messageId":"671","endLine":2,"endColumn":26},{"ruleId":"668","severity":1,"message":"695","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":12},{"ruleId":"668","severity":1,"message":"696","line":6,"column":10,"nodeType":"670","messageId":"671","endLine":6,"endColumn":37},{"ruleId":"668","severity":1,"message":"697","line":6,"column":39,"nodeType":"670","messageId":"671","endLine":6,"endColumn":63},{"ruleId":"668","severity":1,"message":"698","line":11,"column":15,"nodeType":"670","messageId":"671","endLine":11,"endColumn":21},{"ruleId":"668","severity":1,"message":"699","line":12,"column":10,"nodeType":"670","messageId":"671","endLine":12,"endColumn":24},{"ruleId":"668","severity":1,"message":"700","line":12,"column":26,"nodeType":"670","messageId":"671","endLine":12,"endColumn":43},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"702","line":6,"column":10,"nodeType":"670","messageId":"671","endLine":6,"endColumn":15},{"ruleId":"683","severity":1,"message":"703","line":26,"column":7,"nodeType":"704","endLine":26,"endColumn":41},{"ruleId":"683","severity":1,"message":"703","line":30,"column":7,"nodeType":"704","endLine":30,"endColumn":39},{"ruleId":"668","severity":1,"message":"705","line":20,"column":8,"nodeType":"670","messageId":"671","endLine":20,"endColumn":18},{"ruleId":"668","severity":1,"message":"706","line":23,"column":3,"nodeType":"670","messageId":"671","endLine":23,"endColumn":17},{"ruleId":"668","severity":1,"message":"707","line":26,"column":3,"nodeType":"670","messageId":"671","endLine":26,"endColumn":19},{"ruleId":"668","severity":1,"message":"708","line":27,"column":3,"nodeType":"670","messageId":"671","endLine":27,"endColumn":36},{"ruleId":"668","severity":1,"message":"709","line":38,"column":7,"nodeType":"670","messageId":"671","endLine":38,"endColumn":17},{"ruleId":"668","severity":1,"message":"710","line":54,"column":7,"nodeType":"670","messageId":"671","endLine":54,"endColumn":26},{"ruleId":"668","severity":1,"message":"698","line":59,"column":15,"nodeType":"670","messageId":"671","endLine":59,"endColumn":21},{"ruleId":"668","severity":1,"message":"711","line":60,"column":27,"nodeType":"670","messageId":"671","endLine":60,"endColumn":45},{"ruleId":"668","severity":1,"message":"712","line":63,"column":10,"nodeType":"670","messageId":"671","endLine":63,"endColumn":22},{"ruleId":"668","severity":1,"message":"713","line":68,"column":26,"nodeType":"670","messageId":"671","endLine":68,"endColumn":43},{"ruleId":"683","severity":1,"message":"714","line":89,"column":6,"nodeType":"685","endLine":89,"endColumn":11,"suggestions":"715"},{"ruleId":"668","severity":1,"message":"716","line":175,"column":7,"nodeType":"670","messageId":"671","endLine":175,"endColumn":14},{"ruleId":"717","severity":1,"message":"718","line":736,"column":60,"nodeType":"719","messageId":"692","endLine":736,"endColumn":62},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"720","line":6,"column":3,"nodeType":"670","messageId":"671","endLine":6,"endColumn":19},{"ruleId":"668","severity":1,"message":"721","line":9,"column":10,"nodeType":"670","messageId":"671","endLine":9,"endColumn":39},{"ruleId":"722","severity":1,"message":"723","line":14,"column":27,"nodeType":"724","messageId":"725","endLine":14,"endColumn":28,"suggestions":"726"},{"ruleId":"668","severity":1,"message":"727","line":21,"column":10,"nodeType":"670","messageId":"671","endLine":21,"endColumn":15},{"ruleId":"668","severity":1,"message":"728","line":21,"column":17,"nodeType":"670","messageId":"671","endLine":21,"endColumn":25},{"ruleId":"668","severity":1,"message":"729","line":22,"column":10,"nodeType":"670","messageId":"671","endLine":22,"endColumn":17},{"ruleId":"668","severity":1,"message":"730","line":22,"column":19,"nodeType":"670","messageId":"671","endLine":22,"endColumn":29},{"ruleId":"668","severity":1,"message":"731","line":23,"column":10,"nodeType":"670","messageId":"671","endLine":23,"endColumn":20},{"ruleId":"683","severity":1,"message":"732","line":30,"column":6,"nodeType":"685","endLine":30,"endColumn":8,"suggestions":"733"},{"ruleId":"683","severity":1,"message":"734","line":31,"column":3,"nodeType":"670","endLine":31,"endColumn":12,"suggestions":"735"},{"ruleId":"717","severity":1,"message":"718","line":58,"column":21,"nodeType":"719","messageId":"692","endLine":58,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":60,"column":33,"nodeType":"719","messageId":"692","endLine":60,"endColumn":35},{"ruleId":"717","severity":1,"message":"718","line":61,"column":27,"nodeType":"719","messageId":"692","endLine":61,"endColumn":29},{"ruleId":"668","severity":1,"message":"736","line":74,"column":9,"nodeType":"670","messageId":"671","endLine":74,"endColumn":22},{"ruleId":"668","severity":1,"message":"737","line":33,"column":8,"nodeType":"670","messageId":"671","endLine":33,"endColumn":24},{"ruleId":"668","severity":1,"message":"709","line":36,"column":7,"nodeType":"670","messageId":"671","endLine":36,"endColumn":17},{"ruleId":"668","severity":1,"message":"710","line":51,"column":7,"nodeType":"670","messageId":"671","endLine":51,"endColumn":26},{"ruleId":"668","severity":1,"message":"698","line":56,"column":15,"nodeType":"670","messageId":"671","endLine":56,"endColumn":21},{"ruleId":"668","severity":1,"message":"738","line":57,"column":20,"nodeType":"670","messageId":"671","endLine":57,"endColumn":31},{"ruleId":"668","severity":1,"message":"739","line":62,"column":10,"nodeType":"670","messageId":"671","endLine":62,"endColumn":15},{"ruleId":"668","severity":1,"message":"740","line":62,"column":17,"nodeType":"670","messageId":"671","endLine":62,"endColumn":25},{"ruleId":"668","severity":1,"message":"741","line":64,"column":10,"nodeType":"670","messageId":"671","endLine":64,"endColumn":29},{"ruleId":"683","severity":1,"message":"742","line":72,"column":6,"nodeType":"685","endLine":72,"endColumn":11,"suggestions":"743"},{"ruleId":"683","severity":1,"message":"744","line":81,"column":6,"nodeType":"685","endLine":81,"endColumn":8,"suggestions":"745"},{"ruleId":"689","severity":1,"message":"746","line":60,"column":5,"nodeType":"691","messageId":"692","endLine":60,"endColumn":18},{"ruleId":"668","severity":1,"message":"747","line":157,"column":9,"nodeType":"670","messageId":"671","endLine":157,"endColumn":27},{"ruleId":"717","severity":1,"message":"718","line":177,"column":21,"nodeType":"719","messageId":"692","endLine":177,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":179,"column":33,"nodeType":"719","messageId":"692","endLine":179,"endColumn":35},{"ruleId":"717","severity":1,"message":"718","line":180,"column":27,"nodeType":"719","messageId":"692","endLine":180,"endColumn":29},{"ruleId":"748","severity":1,"message":"749","line":202,"column":9,"nodeType":"750","endLine":207,"endColumn":10},{"ruleId":"748","severity":1,"message":"749","line":267,"column":15,"nodeType":"750","endLine":267,"endColumn":22},{"ruleId":"668","severity":1,"message":"751","line":693,"column":10,"nodeType":"670","messageId":"671","endLine":693,"endColumn":14},{"ruleId":"668","severity":1,"message":"752","line":694,"column":10,"nodeType":"670","messageId":"671","endLine":694,"endColumn":21},{"ruleId":"668","severity":1,"message":"753","line":694,"column":23,"nodeType":"670","messageId":"671","endLine":694,"endColumn":37},{"ruleId":"668","severity":1,"message":"754","line":695,"column":10,"nodeType":"670","messageId":"671","endLine":695,"endColumn":21},{"ruleId":"668","severity":1,"message":"755","line":696,"column":10,"nodeType":"670","messageId":"671","endLine":696,"endColumn":19},{"ruleId":"668","severity":1,"message":"756","line":721,"column":9,"nodeType":"670","messageId":"671","endLine":721,"endColumn":30},{"ruleId":"668","severity":1,"message":"757","line":724,"column":9,"nodeType":"670","messageId":"671","endLine":724,"endColumn":25},{"ruleId":"748","severity":1,"message":"749","line":827,"column":23,"nodeType":"750","endLine":827,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":839,"column":23,"nodeType":"750","endLine":839,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":851,"column":23,"nodeType":"750","endLine":851,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":863,"column":23,"nodeType":"750","endLine":863,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":875,"column":23,"nodeType":"750","endLine":875,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":887,"column":23,"nodeType":"750","endLine":887,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":899,"column":23,"nodeType":"750","endLine":899,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":911,"column":23,"nodeType":"750","endLine":911,"endColumn":71},{"ruleId":"758","severity":1,"message":"759","line":924,"column":23,"nodeType":"750","endLine":927,"endColumn":24},{"ruleId":"717","severity":1,"message":"760","line":945,"column":39,"nodeType":"719","messageId":"692","endLine":945,"endColumn":41},{"ruleId":"668","severity":1,"message":"761","line":66,"column":7,"nodeType":"670","messageId":"671","endLine":66,"endColumn":11},{"ruleId":"668","severity":1,"message":"751","line":1007,"column":10,"nodeType":"670","messageId":"671","endLine":1007,"endColumn":14},{"ruleId":"668","severity":1,"message":"762","line":1007,"column":16,"nodeType":"670","messageId":"671","endLine":1007,"endColumn":23},{"ruleId":"668","severity":1,"message":"752","line":1008,"column":10,"nodeType":"670","messageId":"671","endLine":1008,"endColumn":21},{"ruleId":"668","severity":1,"message":"753","line":1008,"column":23,"nodeType":"670","messageId":"671","endLine":1008,"endColumn":37},{"ruleId":"748","severity":1,"message":"749","line":1067,"column":23,"nodeType":"750","endLine":1067,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1079,"column":23,"nodeType":"750","endLine":1079,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1091,"column":23,"nodeType":"750","endLine":1091,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1103,"column":23,"nodeType":"750","endLine":1103,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1115,"column":23,"nodeType":"750","endLine":1115,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1127,"column":23,"nodeType":"750","endLine":1127,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1139,"column":23,"nodeType":"750","endLine":1139,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1151,"column":23,"nodeType":"750","endLine":1151,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1163,"column":23,"nodeType":"750","endLine":1163,"endColumn":71},{"ruleId":"748","severity":1,"message":"749","line":1175,"column":23,"nodeType":"750","endLine":1175,"endColumn":71},{"ruleId":"758","severity":1,"message":"759","line":1191,"column":23,"nodeType":"750","endLine":1194,"endColumn":24},{"ruleId":"717","severity":1,"message":"760","line":1227,"column":28,"nodeType":"719","messageId":"692","endLine":1227,"endColumn":30},{"ruleId":"668","severity":1,"message":"763","line":541,"column":7,"nodeType":"670","messageId":"671","endLine":541,"endColumn":21},{"ruleId":"668","severity":1,"message":"751","line":579,"column":10,"nodeType":"670","messageId":"671","endLine":579,"endColumn":14},{"ruleId":"668","severity":1,"message":"762","line":579,"column":16,"nodeType":"670","messageId":"671","endLine":579,"endColumn":23},{"ruleId":"668","severity":1,"message":"752","line":580,"column":10,"nodeType":"670","messageId":"671","endLine":580,"endColumn":21},{"ruleId":"668","severity":1,"message":"753","line":580,"column":23,"nodeType":"670","messageId":"671","endLine":580,"endColumn":37},{"ruleId":"668","severity":1,"message":"755","line":581,"column":10,"nodeType":"670","messageId":"671","endLine":581,"endColumn":19},{"ruleId":"668","severity":1,"message":"756","line":593,"column":9,"nodeType":"670","messageId":"671","endLine":593,"endColumn":30},{"ruleId":"748","severity":1,"message":"749","line":620,"column":21,"nodeType":"750","endLine":620,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":632,"column":21,"nodeType":"750","endLine":632,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":644,"column":21,"nodeType":"750","endLine":644,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":656,"column":21,"nodeType":"750","endLine":656,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":668,"column":21,"nodeType":"750","endLine":668,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":680,"column":21,"nodeType":"750","endLine":680,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":692,"column":21,"nodeType":"750","endLine":692,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":704,"column":21,"nodeType":"750","endLine":704,"endColumn":69},{"ruleId":"758","severity":1,"message":"759","line":717,"column":21,"nodeType":"750","endLine":720,"endColumn":22},{"ruleId":"717","severity":1,"message":"760","line":737,"column":28,"nodeType":"719","messageId":"692","endLine":737,"endColumn":30},{"ruleId":"668","severity":1,"message":"764","line":6,"column":8,"nodeType":"670","messageId":"671","endLine":6,"endColumn":20},{"ruleId":"668","severity":1,"message":"765","line":83,"column":10,"nodeType":"670","messageId":"671","endLine":83,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":83,"column":16,"nodeType":"670","messageId":"671","endLine":83,"endColumn":23},{"ruleId":"683","severity":1,"message":"767","line":87,"column":13,"nodeType":"768","endLine":114,"endColumn":4},{"ruleId":"769","severity":1,"message":"770","line":90,"column":29,"nodeType":"768","messageId":"771","endLine":90,"endColumn":31},{"ruleId":"769","severity":1,"message":"770","line":91,"column":31,"nodeType":"768","messageId":"771","endLine":91,"endColumn":33},{"ruleId":"717","severity":1,"message":"718","line":92,"column":25,"nodeType":"719","messageId":"692","endLine":92,"endColumn":27},{"ruleId":"717","severity":1,"message":"718","line":96,"column":24,"nodeType":"719","messageId":"692","endLine":96,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":99,"column":24,"nodeType":"719","messageId":"692","endLine":99,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":102,"column":24,"nodeType":"719","messageId":"692","endLine":102,"endColumn":26},{"ruleId":"717","severity":1,"message":"760","line":111,"column":61,"nodeType":"719","messageId":"692","endLine":111,"endColumn":63},{"ruleId":"683","severity":1,"message":"772","line":114,"column":6,"nodeType":"685","endLine":114,"endColumn":25,"suggestions":"773"},{"ruleId":"717","severity":1,"message":"718","line":163,"column":36,"nodeType":"719","messageId":"692","endLine":163,"endColumn":38},{"ruleId":"717","severity":1,"message":"718","line":166,"column":36,"nodeType":"719","messageId":"692","endLine":166,"endColumn":38},{"ruleId":"717","severity":1,"message":"718","line":167,"column":39,"nodeType":"719","messageId":"692","endLine":167,"endColumn":41},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"774","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":17},{"ruleId":"748","severity":1,"message":"749","line":29,"column":9,"nodeType":"750","endLine":29,"endColumn":55},{"ruleId":"668","severity":1,"message":"681","line":7,"column":8,"nodeType":"670","messageId":"671","endLine":7,"endColumn":18},{"ruleId":"668","severity":1,"message":"775","line":12,"column":8,"nodeType":"670","messageId":"671","endLine":12,"endColumn":29},{"ruleId":"668","severity":1,"message":"682","line":50,"column":9,"nodeType":"670","messageId":"671","endLine":50,"endColumn":16},{"ruleId":"668","severity":1,"message":"698","line":52,"column":15,"nodeType":"670","messageId":"671","endLine":52,"endColumn":21},{"ruleId":"668","severity":1,"message":"682","line":24,"column":9,"nodeType":"670","messageId":"671","endLine":24,"endColumn":16},{"ruleId":"668","severity":1,"message":"765","line":26,"column":10,"nodeType":"670","messageId":"671","endLine":26,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":26,"column":16,"nodeType":"670","messageId":"671","endLine":26,"endColumn":23},{"ruleId":"683","severity":1,"message":"776","line":32,"column":6,"nodeType":"685","endLine":32,"endColumn":17,"suggestions":"777"},{"ruleId":"668","severity":1,"message":"778","line":3,"column":9,"nodeType":"670","messageId":"671","endLine":3,"endColumn":14},{"ruleId":"668","severity":1,"message":"779","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":15},{"ruleId":"668","severity":1,"message":"780","line":7,"column":8,"nodeType":"670","messageId":"671","endLine":7,"endColumn":16},{"ruleId":"668","severity":1,"message":"781","line":9,"column":8,"nodeType":"670","messageId":"671","endLine":9,"endColumn":22},{"ruleId":"668","severity":1,"message":"782","line":38,"column":12,"nodeType":"670","messageId":"671","endLine":38,"endColumn":22},{"ruleId":"668","severity":1,"message":"783","line":40,"column":11,"nodeType":"670","messageId":"671","endLine":40,"endColumn":27},{"ruleId":"668","severity":1,"message":"784","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":14},{"ruleId":"668","severity":1,"message":"785","line":6,"column":8,"nodeType":"670","messageId":"671","endLine":6,"endColumn":22},{"ruleId":"668","severity":1,"message":"786","line":11,"column":3,"nodeType":"670","messageId":"671","endLine":11,"endColumn":18},{"ruleId":"668","severity":1,"message":"787","line":12,"column":3,"nodeType":"670","messageId":"671","endLine":12,"endColumn":25},{"ruleId":"668","severity":1,"message":"788","line":13,"column":3,"nodeType":"670","messageId":"671","endLine":13,"endColumn":14},{"ruleId":"668","severity":1,"message":"789","line":14,"column":3,"nodeType":"670","messageId":"671","endLine":14,"endColumn":15},{"ruleId":"668","severity":1,"message":"790","line":18,"column":8,"nodeType":"670","messageId":"671","endLine":18,"endColumn":16},{"ruleId":"668","severity":1,"message":"791","line":19,"column":8,"nodeType":"670","messageId":"671","endLine":19,"endColumn":31},{"ruleId":"668","severity":1,"message":"792","line":20,"column":8,"nodeType":"670","messageId":"671","endLine":20,"endColumn":20},{"ruleId":"668","severity":1,"message":"793","line":27,"column":5,"nodeType":"670","messageId":"671","endLine":27,"endColumn":9},{"ruleId":"668","severity":1,"message":"794","line":85,"column":10,"nodeType":"670","messageId":"671","endLine":85,"endColumn":17},{"ruleId":"668","severity":1,"message":"795","line":85,"column":19,"nodeType":"670","messageId":"671","endLine":85,"endColumn":29},{"ruleId":"668","severity":1,"message":"739","line":86,"column":10,"nodeType":"670","messageId":"671","endLine":86,"endColumn":15},{"ruleId":"668","severity":1,"message":"740","line":86,"column":17,"nodeType":"670","messageId":"671","endLine":86,"endColumn":25},{"ruleId":"668","severity":1,"message":"796","line":88,"column":10,"nodeType":"670","messageId":"671","endLine":88,"endColumn":14},{"ruleId":"717","severity":1,"message":"760","line":123,"column":71,"nodeType":"719","messageId":"692","endLine":123,"endColumn":73},{"ruleId":"683","severity":1,"message":"797","line":136,"column":6,"nodeType":"685","endLine":136,"endColumn":33,"suggestions":"798"},{"ruleId":"668","severity":1,"message":"799","line":208,"column":11,"nodeType":"670","messageId":"671","endLine":208,"endColumn":13},{"ruleId":"758","severity":1,"message":"759","line":294,"column":25,"nodeType":"750","endLine":301,"endColumn":26},{"ruleId":"748","severity":1,"message":"749","line":463,"column":15,"nodeType":"750","endLine":463,"endColumn":69},{"ruleId":"668","severity":1,"message":"765","line":218,"column":10,"nodeType":"670","messageId":"671","endLine":218,"endColumn":14},{"ruleId":"668","severity":1,"message":"710","line":225,"column":7,"nodeType":"670","messageId":"671","endLine":225,"endColumn":26},{"ruleId":"668","severity":1,"message":"800","line":226,"column":9,"nodeType":"670","messageId":"671","endLine":226,"endColumn":24},{"ruleId":"769","severity":1,"message":"770","line":241,"column":54,"nodeType":"768","messageId":"771","endLine":241,"endColumn":56},{"ruleId":"717","severity":1,"message":"718","line":242,"column":29,"nodeType":"719","messageId":"692","endLine":242,"endColumn":31},{"ruleId":"717","severity":1,"message":"718","line":244,"column":36,"nodeType":"719","messageId":"692","endLine":244,"endColumn":38},{"ruleId":"717","severity":1,"message":"718","line":246,"column":36,"nodeType":"719","messageId":"692","endLine":246,"endColumn":38},{"ruleId":"683","severity":1,"message":"801","line":262,"column":6,"nodeType":"685","endLine":262,"endColumn":27,"suggestions":"802"},{"ruleId":"717","severity":1,"message":"718","line":499,"column":51,"nodeType":"719","messageId":"692","endLine":499,"endColumn":53},{"ruleId":"717","severity":1,"message":"718","line":586,"column":51,"nodeType":"719","messageId":"692","endLine":586,"endColumn":53},{"ruleId":"717","severity":1,"message":"718","line":663,"column":50,"nodeType":"719","messageId":"692","endLine":663,"endColumn":52},{"ruleId":"668","severity":1,"message":"803","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":24},{"ruleId":"668","severity":1,"message":"804","line":9,"column":8,"nodeType":"670","messageId":"671","endLine":9,"endColumn":18},{"ruleId":"668","severity":1,"message":"763","line":51,"column":7,"nodeType":"670","messageId":"671","endLine":51,"endColumn":21},{"ruleId":"668","severity":1,"message":"765","line":72,"column":10,"nodeType":"670","messageId":"671","endLine":72,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":72,"column":16,"nodeType":"670","messageId":"671","endLine":72,"endColumn":23},{"ruleId":"683","severity":1,"message":"767","line":102,"column":13,"nodeType":"768","endLine":148,"endColumn":4},{"ruleId":"683","severity":1,"message":"805","line":148,"column":6,"nodeType":"685","endLine":148,"endColumn":8,"suggestions":"806"},{"ruleId":"717","severity":1,"message":"718","line":164,"column":31,"nodeType":"719","messageId":"692","endLine":164,"endColumn":33},{"ruleId":"668","severity":1,"message":"807","line":172,"column":9,"nodeType":"670","messageId":"671","endLine":172,"endColumn":20},{"ruleId":"668","severity":1,"message":"808","line":175,"column":9,"nodeType":"670","messageId":"671","endLine":175,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":191,"column":24,"nodeType":"719","messageId":"692","endLine":191,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":202,"column":31,"nodeType":"719","messageId":"692","endLine":202,"endColumn":33},{"ruleId":"717","severity":1,"message":"718","line":222,"column":31,"nodeType":"719","messageId":"692","endLine":222,"endColumn":33},{"ruleId":"717","severity":1,"message":"718","line":233,"column":31,"nodeType":"719","messageId":"692","endLine":233,"endColumn":33},{"ruleId":"683","severity":1,"message":"767","line":289,"column":13,"nodeType":"768","endLine":337,"endColumn":4},{"ruleId":"683","severity":1,"message":"809","line":337,"column":6,"nodeType":"685","endLine":337,"endColumn":31,"suggestions":"810"},{"ruleId":"748","severity":1,"message":"749","line":67,"column":19,"nodeType":"750","endLine":67,"endColumn":57},{"ruleId":"748","severity":1,"message":"749","line":70,"column":19,"nodeType":"750","endLine":70,"endColumn":55},{"ruleId":"748","severity":1,"message":"749","line":73,"column":19,"nodeType":"750","endLine":73,"endColumn":55},{"ruleId":"668","severity":1,"message":"811","line":4,"column":10,"nodeType":"670","messageId":"671","endLine":4,"endColumn":19},{"ruleId":"683","severity":1,"message":"812","line":56,"column":6,"nodeType":"685","endLine":56,"endColumn":8,"suggestions":"813"},{"ruleId":"717","severity":1,"message":"760","line":144,"column":32,"nodeType":"719","messageId":"692","endLine":144,"endColumn":34},{"ruleId":"668","severity":1,"message":"814","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":14},{"ruleId":"668","severity":1,"message":"785","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":22},{"ruleId":"668","severity":1,"message":"787","line":10,"column":3,"nodeType":"670","messageId":"671","endLine":10,"endColumn":25},{"ruleId":"668","severity":1,"message":"720","line":12,"column":3,"nodeType":"670","messageId":"671","endLine":12,"endColumn":19},{"ruleId":"668","severity":1,"message":"789","line":13,"column":3,"nodeType":"670","messageId":"671","endLine":13,"endColumn":15},{"ruleId":"668","severity":1,"message":"815","line":16,"column":15,"nodeType":"670","messageId":"671","endLine":16,"endColumn":25},{"ruleId":"668","severity":1,"message":"793","line":19,"column":5,"nodeType":"670","messageId":"671","endLine":19,"endColumn":9},{"ruleId":"668","severity":1,"message":"740","line":88,"column":17,"nodeType":"670","messageId":"671","endLine":88,"endColumn":25},{"ruleId":"683","severity":1,"message":"816","line":95,"column":6,"nodeType":"685","endLine":95,"endColumn":13,"suggestions":"817"},{"ruleId":"717","severity":1,"message":"760","line":127,"column":21,"nodeType":"719","messageId":"692","endLine":127,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":130,"column":21,"nodeType":"719","messageId":"692","endLine":130,"endColumn":23},{"ruleId":"717","severity":1,"message":"760","line":142,"column":21,"nodeType":"719","messageId":"692","endLine":142,"endColumn":23},{"ruleId":"758","severity":1,"message":"759","line":209,"column":21,"nodeType":"750","endLine":212,"endColumn":22},{"ruleId":"717","severity":1,"message":"760","line":324,"column":25,"nodeType":"719","messageId":"692","endLine":324,"endColumn":27},{"ruleId":"748","severity":1,"message":"749","line":350,"column":11,"nodeType":"750","endLine":350,"endColumn":65},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"789","line":8,"column":3,"nodeType":"670","messageId":"671","endLine":8,"endColumn":15},{"ruleId":"668","severity":1,"message":"793","line":15,"column":5,"nodeType":"670","messageId":"671","endLine":15,"endColumn":9},{"ruleId":"668","severity":1,"message":"740","line":72,"column":17,"nodeType":"670","messageId":"671","endLine":72,"endColumn":25},{"ruleId":"683","severity":1,"message":"816","line":80,"column":6,"nodeType":"685","endLine":80,"endColumn":13,"suggestions":"818"},{"ruleId":"758","severity":1,"message":"759","line":172,"column":21,"nodeType":"750","endLine":179,"endColumn":22},{"ruleId":"748","severity":1,"message":"749","line":244,"column":11,"nodeType":"750","endLine":244,"endColumn":65},{"ruleId":"668","severity":1,"message":"803","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":24},{"ruleId":"668","severity":1,"message":"778","line":11,"column":8,"nodeType":"670","messageId":"671","endLine":11,"endColumn":13},{"ruleId":"668","severity":1,"message":"819","line":12,"column":8,"nodeType":"670","messageId":"671","endLine":12,"endColumn":18},{"ruleId":"668","severity":1,"message":"820","line":13,"column":8,"nodeType":"670","messageId":"671","endLine":13,"endColumn":18},{"ruleId":"668","severity":1,"message":"765","line":52,"column":10,"nodeType":"670","messageId":"671","endLine":52,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":52,"column":16,"nodeType":"670","messageId":"671","endLine":52,"endColumn":23},{"ruleId":"668","severity":1,"message":"682","line":53,"column":9,"nodeType":"670","messageId":"671","endLine":53,"endColumn":16},{"ruleId":"668","severity":1,"message":"807","line":54,"column":9,"nodeType":"670","messageId":"671","endLine":54,"endColumn":20},{"ruleId":"668","severity":1,"message":"821","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":25},{"ruleId":"668","severity":1,"message":"822","line":5,"column":10,"nodeType":"670","messageId":"671","endLine":5,"endColumn":16},{"ruleId":"668","severity":1,"message":"823","line":5,"column":18,"nodeType":"670","messageId":"671","endLine":5,"endColumn":27},{"ruleId":"668","severity":1,"message":"824","line":6,"column":25,"nodeType":"670","messageId":"671","endLine":6,"endColumn":41},{"ruleId":"668","severity":1,"message":"825","line":23,"column":5,"nodeType":"670","messageId":"671","endLine":23,"endColumn":14},{"ruleId":"668","severity":1,"message":"826","line":145,"column":3,"nodeType":"670","messageId":"671","endLine":145,"endColumn":14},{"ruleId":"668","severity":1,"message":"827","line":351,"column":3,"nodeType":"670","messageId":"671","endLine":351,"endColumn":18},{"ruleId":"828","severity":1,"message":"829","line":449,"column":7,"nodeType":"670","messageId":"830","endLine":449,"endColumn":11},{"ruleId":"668","severity":1,"message":"831","line":867,"column":5,"nodeType":"670","messageId":"671","endLine":867,"endColumn":22},{"ruleId":"668","severity":1,"message":"822","line":7,"column":10,"nodeType":"670","messageId":"671","endLine":7,"endColumn":16},{"ruleId":"668","severity":1,"message":"823","line":7,"column":18,"nodeType":"670","messageId":"671","endLine":7,"endColumn":27},{"ruleId":"668","severity":1,"message":"824","line":8,"column":25,"nodeType":"670","messageId":"671","endLine":8,"endColumn":41},{"ruleId":"668","severity":1,"message":"832","line":10,"column":9,"nodeType":"670","messageId":"671","endLine":10,"endColumn":24},{"ruleId":"668","severity":1,"message":"833","line":11,"column":9,"nodeType":"670","messageId":"671","endLine":11,"endColumn":23},{"ruleId":"668","severity":1,"message":"834","line":12,"column":9,"nodeType":"670","messageId":"671","endLine":12,"endColumn":24},{"ruleId":"668","severity":1,"message":"835","line":13,"column":9,"nodeType":"670","messageId":"671","endLine":13,"endColumn":24},{"ruleId":"668","severity":1,"message":"698","line":39,"column":15,"nodeType":"670","messageId":"671","endLine":39,"endColumn":21},{"ruleId":"683","severity":1,"message":"836","line":44,"column":6,"nodeType":"685","endLine":44,"endColumn":11,"suggestions":"837"},{"ruleId":"748","severity":1,"message":"749","line":74,"column":21,"nodeType":"750","endLine":74,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":86,"column":21,"nodeType":"750","endLine":86,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":98,"column":21,"nodeType":"750","endLine":98,"endColumn":69},{"ruleId":"748","severity":1,"message":"749","line":110,"column":21,"nodeType":"750","endLine":110,"endColumn":69},{"ruleId":"668","severity":1,"message":"698","line":22,"column":15,"nodeType":"670","messageId":"671","endLine":22,"endColumn":21},{"ruleId":"683","severity":1,"message":"838","line":31,"column":6,"nodeType":"685","endLine":31,"endColumn":11,"suggestions":"839"},{"ruleId":"668","severity":1,"message":"840","line":57,"column":9,"nodeType":"670","messageId":"671","endLine":57,"endColumn":19},{"ruleId":"668","severity":1,"message":"841","line":60,"column":9,"nodeType":"670","messageId":"671","endLine":60,"endColumn":20},{"ruleId":"668","severity":1,"message":"701","line":1,"column":28,"nodeType":"670","messageId":"671","endLine":1,"endColumn":36},{"ruleId":"668","severity":1,"message":"842","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":21},{"ruleId":"668","severity":1,"message":"843","line":4,"column":8,"nodeType":"670","messageId":"671","endLine":4,"endColumn":25},{"ruleId":"668","severity":1,"message":"844","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":26},{"ruleId":"668","severity":1,"message":"814","line":8,"column":17,"nodeType":"670","messageId":"671","endLine":8,"endColumn":23},{"ruleId":"668","severity":1,"message":"789","line":10,"column":10,"nodeType":"670","messageId":"671","endLine":10,"endColumn":22},{"ruleId":"668","severity":1,"message":"845","line":62,"column":10,"nodeType":"670","messageId":"671","endLine":62,"endColumn":20},{"ruleId":"668","severity":1,"message":"846","line":62,"column":22,"nodeType":"670","messageId":"671","endLine":62,"endColumn":35},{"ruleId":"668","severity":1,"message":"693","line":76,"column":9,"nodeType":"670","messageId":"671","endLine":76,"endColumn":14},{"ruleId":"668","severity":1,"message":"847","line":77,"column":9,"nodeType":"670","messageId":"671","endLine":77,"endColumn":17},{"ruleId":"683","severity":1,"message":"848","line":81,"column":6,"nodeType":"685","endLine":81,"endColumn":8,"suggestions":"849"},{"ruleId":"668","severity":1,"message":"814","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":14},{"ruleId":"668","severity":1,"message":"778","line":6,"column":8,"nodeType":"670","messageId":"671","endLine":6,"endColumn":13},{"ruleId":"668","severity":1,"message":"681","line":7,"column":8,"nodeType":"670","messageId":"671","endLine":7,"endColumn":18},{"ruleId":"668","severity":1,"message":"850","line":11,"column":8,"nodeType":"670","messageId":"671","endLine":11,"endColumn":19},{"ruleId":"668","severity":1,"message":"851","line":15,"column":10,"nodeType":"670","messageId":"671","endLine":15,"endColumn":34},{"ruleId":"668","severity":1,"message":"852","line":31,"column":7,"nodeType":"670","messageId":"671","endLine":31,"endColumn":21},{"ruleId":"668","severity":1,"message":"853","line":128,"column":28,"nodeType":"670","messageId":"671","endLine":128,"endColumn":47},{"ruleId":"683","severity":1,"message":"854","line":136,"column":6,"nodeType":"685","endLine":136,"endColumn":27,"suggestions":"855"},{"ruleId":"668","severity":1,"message":"856","line":154,"column":9,"nodeType":"670","messageId":"671","endLine":154,"endColumn":20},{"ruleId":"769","severity":1,"message":"770","line":161,"column":40,"nodeType":"768","messageId":"771","endLine":161,"endColumn":42},{"ruleId":"717","severity":1,"message":"718","line":162,"column":21,"nodeType":"719","messageId":"692","endLine":162,"endColumn":23},{"ruleId":"769","severity":1,"message":"770","line":163,"column":46,"nodeType":"768","messageId":"771","endLine":163,"endColumn":48},{"ruleId":"717","severity":1,"message":"718","line":164,"column":21,"nodeType":"719","messageId":"692","endLine":164,"endColumn":23},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"668","severity":1,"message":"857","line":18,"column":19,"nodeType":"670","messageId":"671","endLine":18,"endColumn":29},{"ruleId":"668","severity":1,"message":"858","line":22,"column":10,"nodeType":"670","messageId":"671","endLine":22,"endColumn":18},{"ruleId":"668","severity":1,"message":"859","line":22,"column":20,"nodeType":"670","messageId":"671","endLine":22,"endColumn":31},{"ruleId":"683","severity":1,"message":"860","line":63,"column":6,"nodeType":"685","endLine":63,"endColumn":15,"suggestions":"861"},{"ruleId":"668","severity":1,"message":"862","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":26},{"ruleId":"668","severity":1,"message":"765","line":59,"column":10,"nodeType":"670","messageId":"671","endLine":59,"endColumn":14},{"ruleId":"668","severity":1,"message":"863","line":60,"column":10,"nodeType":"670","messageId":"671","endLine":60,"endColumn":16},{"ruleId":"668","severity":1,"message":"864","line":60,"column":18,"nodeType":"670","messageId":"671","endLine":60,"endColumn":27},{"ruleId":"668","severity":1,"message":"800","line":61,"column":9,"nodeType":"670","messageId":"671","endLine":61,"endColumn":24},{"ruleId":"668","severity":1,"message":"865","line":81,"column":9,"nodeType":"670","messageId":"671","endLine":81,"endColumn":20},{"ruleId":"668","severity":1,"message":"779","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":15},{"ruleId":"668","severity":1,"message":"780","line":7,"column":8,"nodeType":"670","messageId":"671","endLine":7,"endColumn":16},{"ruleId":"668","severity":1,"message":"781","line":9,"column":8,"nodeType":"670","messageId":"671","endLine":9,"endColumn":22},{"ruleId":"668","severity":1,"message":"862","line":1,"column":27,"nodeType":"670","messageId":"671","endLine":1,"endColumn":36},{"ruleId":"668","severity":1,"message":"866","line":173,"column":23,"nodeType":"670","messageId":"671","endLine":173,"endColumn":37},{"ruleId":"668","severity":1,"message":"867","line":178,"column":35,"nodeType":"670","messageId":"671","endLine":178,"endColumn":61},{"ruleId":"668","severity":1,"message":"868","line":182,"column":34,"nodeType":"670","messageId":"671","endLine":182,"endColumn":59},{"ruleId":"668","severity":1,"message":"782","line":187,"column":10,"nodeType":"670","messageId":"671","endLine":187,"endColumn":20},{"ruleId":"668","severity":1,"message":"869","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":20},{"ruleId":"668","severity":1,"message":"804","line":3,"column":28,"nodeType":"670","messageId":"671","endLine":3,"endColumn":38},{"ruleId":"668","severity":1,"message":"681","line":3,"column":40,"nodeType":"670","messageId":"671","endLine":3,"endColumn":50},{"ruleId":"668","severity":1,"message":"870","line":47,"column":21,"nodeType":"670","messageId":"671","endLine":47,"endColumn":33},{"ruleId":"683","severity":1,"message":"871","line":54,"column":6,"nodeType":"685","endLine":54,"endColumn":17,"suggestions":"872"},{"ruleId":"668","severity":1,"message":"862","line":1,"column":27,"nodeType":"670","messageId":"671","endLine":1,"endColumn":36},{"ruleId":"668","severity":1,"message":"866","line":173,"column":23,"nodeType":"670","messageId":"671","endLine":173,"endColumn":37},{"ruleId":"668","severity":1,"message":"867","line":178,"column":35,"nodeType":"670","messageId":"671","endLine":178,"endColumn":61},{"ruleId":"668","severity":1,"message":"868","line":182,"column":34,"nodeType":"670","messageId":"671","endLine":182,"endColumn":59},{"ruleId":"668","severity":1,"message":"782","line":187,"column":10,"nodeType":"670","messageId":"671","endLine":187,"endColumn":20},{"ruleId":"668","severity":1,"message":"862","line":1,"column":27,"nodeType":"670","messageId":"671","endLine":1,"endColumn":36},{"ruleId":"668","severity":1,"message":"866","line":178,"column":23,"nodeType":"670","messageId":"671","endLine":178,"endColumn":37},{"ruleId":"668","severity":1,"message":"867","line":184,"column":35,"nodeType":"670","messageId":"671","endLine":184,"endColumn":61},{"ruleId":"668","severity":1,"message":"868","line":188,"column":34,"nodeType":"670","messageId":"671","endLine":188,"endColumn":59},{"ruleId":"873","severity":1,"message":"874","line":226,"column":26,"nodeType":"875","messageId":"876","endLine":226,"endColumn":42,"fix":"877"},{"ruleId":"668","severity":1,"message":"705","line":20,"column":8,"nodeType":"670","messageId":"671","endLine":20,"endColumn":18},{"ruleId":"668","severity":1,"message":"706","line":23,"column":3,"nodeType":"670","messageId":"671","endLine":23,"endColumn":17},{"ruleId":"668","severity":1,"message":"878","line":33,"column":8,"nodeType":"670","messageId":"671","endLine":33,"endColumn":31},{"ruleId":"668","severity":1,"message":"879","line":36,"column":8,"nodeType":"670","messageId":"671","endLine":36,"endColumn":28},{"ruleId":"668","severity":1,"message":"709","line":40,"column":7,"nodeType":"670","messageId":"671","endLine":40,"endColumn":17},{"ruleId":"668","severity":1,"message":"710","line":56,"column":7,"nodeType":"670","messageId":"671","endLine":56,"endColumn":26},{"ruleId":"668","severity":1,"message":"698","line":62,"column":15,"nodeType":"670","messageId":"671","endLine":62,"endColumn":21},{"ruleId":"668","severity":1,"message":"880","line":65,"column":10,"nodeType":"670","messageId":"671","endLine":65,"endColumn":25},{"ruleId":"668","severity":1,"message":"711","line":65,"column":27,"nodeType":"670","messageId":"671","endLine":65,"endColumn":45},{"ruleId":"668","severity":1,"message":"881","line":68,"column":10,"nodeType":"670","messageId":"671","endLine":68,"endColumn":25},{"ruleId":"668","severity":1,"message":"713","line":72,"column":26,"nodeType":"670","messageId":"671","endLine":72,"endColumn":43},{"ruleId":"683","severity":1,"message":"742","line":84,"column":6,"nodeType":"685","endLine":84,"endColumn":11,"suggestions":"882"},{"ruleId":"683","severity":1,"message":"744","line":120,"column":6,"nodeType":"685","endLine":120,"endColumn":20,"suggestions":"883"},{"ruleId":"717","severity":1,"message":"718","line":684,"column":60,"nodeType":"719","messageId":"692","endLine":684,"endColumn":62},{"ruleId":"668","severity":1,"message":"884","line":17,"column":8,"nodeType":"670","messageId":"671","endLine":17,"endColumn":17},{"ruleId":"668","severity":1,"message":"682","line":57,"column":9,"nodeType":"670","messageId":"671","endLine":57,"endColumn":16},{"ruleId":"668","severity":1,"message":"765","line":58,"column":10,"nodeType":"670","messageId":"671","endLine":58,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":58,"column":16,"nodeType":"670","messageId":"671","endLine":58,"endColumn":23},{"ruleId":"668","severity":1,"message":"698","line":59,"column":15,"nodeType":"670","messageId":"671","endLine":59,"endColumn":21},{"ruleId":"668","severity":1,"message":"807","line":65,"column":9,"nodeType":"670","messageId":"671","endLine":65,"endColumn":20},{"ruleId":"683","severity":1,"message":"885","line":70,"column":6,"nodeType":"685","endLine":70,"endColumn":11,"suggestions":"886"},{"ruleId":"668","severity":1,"message":"803","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":24},{"ruleId":"668","severity":1,"message":"778","line":11,"column":8,"nodeType":"670","messageId":"671","endLine":11,"endColumn":13},{"ruleId":"668","severity":1,"message":"819","line":12,"column":8,"nodeType":"670","messageId":"671","endLine":12,"endColumn":18},{"ruleId":"668","severity":1,"message":"820","line":13,"column":8,"nodeType":"670","messageId":"671","endLine":13,"endColumn":18},{"ruleId":"668","severity":1,"message":"765","line":52,"column":10,"nodeType":"670","messageId":"671","endLine":52,"endColumn":14},{"ruleId":"668","severity":1,"message":"766","line":52,"column":16,"nodeType":"670","messageId":"671","endLine":52,"endColumn":23},{"ruleId":"668","severity":1,"message":"682","line":53,"column":9,"nodeType":"670","messageId":"671","endLine":53,"endColumn":16},{"ruleId":"668","severity":1,"message":"807","line":54,"column":9,"nodeType":"670","messageId":"671","endLine":54,"endColumn":20},{"ruleId":"668","severity":1,"message":"887","line":3,"column":8,"nodeType":"670","messageId":"671","endLine":3,"endColumn":24},{"ruleId":"668","severity":1,"message":"888","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":18},{"ruleId":"722","severity":1,"message":"723","line":18,"column":29,"nodeType":"724","messageId":"725","endLine":18,"endColumn":30,"suggestions":"889"},{"ruleId":"722","severity":1,"message":"723","line":26,"column":31,"nodeType":"724","messageId":"725","endLine":26,"endColumn":32,"suggestions":"890"},{"ruleId":"668","severity":1,"message":"891","line":44,"column":11,"nodeType":"670","messageId":"671","endLine":44,"endColumn":20},{"ruleId":"668","severity":1,"message":"892","line":48,"column":11,"nodeType":"670","messageId":"671","endLine":48,"endColumn":18},{"ruleId":"668","severity":1,"message":"701","line":1,"column":17,"nodeType":"670","messageId":"671","endLine":1,"endColumn":25},{"ruleId":"722","severity":1,"message":"723","line":8,"column":31,"nodeType":"724","messageId":"725","endLine":8,"endColumn":32,"suggestions":"893"},{"ruleId":"722","severity":1,"message":"723","line":16,"column":33,"nodeType":"724","messageId":"725","endLine":16,"endColumn":34,"suggestions":"894"},{"ruleId":"683","severity":1,"message":"895","line":26,"column":6,"nodeType":"685","endLine":26,"endColumn":8,"suggestions":"896"},{"ruleId":"668","severity":1,"message":"869","line":2,"column":10,"nodeType":"670","messageId":"671","endLine":2,"endColumn":20},{"ruleId":"668","severity":1,"message":"804","line":3,"column":28,"nodeType":"670","messageId":"671","endLine":3,"endColumn":38},{"ruleId":"668","severity":1,"message":"681","line":3,"column":40,"nodeType":"670","messageId":"671","endLine":3,"endColumn":50},{"ruleId":"668","severity":1,"message":"897","line":5,"column":8,"nodeType":"670","messageId":"671","endLine":5,"endColumn":14},{"ruleId":"668","severity":1,"message":"898","line":6,"column":8,"nodeType":"670","messageId":"671","endLine":6,"endColumn":16},{"ruleId":"668","severity":1,"message":"763","line":9,"column":7,"nodeType":"670","messageId":"671","endLine":9,"endColumn":21},{"ruleId":"668","severity":1,"message":"899","line":45,"column":42,"nodeType":"670","messageId":"671","endLine":45,"endColumn":47},{"ruleId":"668","severity":1,"message":"870","line":47,"column":21,"nodeType":"670","messageId":"671","endLine":47,"endColumn":33},{"ruleId":"683","severity":1,"message":"871","line":54,"column":6,"nodeType":"685","endLine":54,"endColumn":17,"suggestions":"900"},{"ruleId":"668","severity":1,"message":"756","line":56,"column":9,"nodeType":"670","messageId":"671","endLine":56,"endColumn":30},"no-native-reassign",["901"],"no-negated-in-lhs",["902"],"no-unused-vars","'LoginCallback' is defined but never used.","Identifier","unusedVar","'Grounded' is defined but never used.","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Search' is defined but never used.","'styles' is assigned a value but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["903"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","'AdminVehicleSearch' is defined but never used.","'Grid' is defined but never used.","'getInspectionVehicleDetails' is defined but never used.","'getGroundingDetailsByVin' is defined but never used.","'setVin' is assigned a value but never used.","'inspectiondata' is assigned a value but never used.","'setinspectiondata' is assigned a value but never used.","'useState' is defined but never used.","'Route' is defined but never used.","React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'PrintSharp' is defined but never used.","'getPassedList1' is defined but never used.","'getPurchasedList' is defined but never used.","'postDealerActionPurchaseOnVehicle' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setPurchaseSection' is assigned a value but never used.","'inspectionId' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'props?.location?.state?.vehicleDetails'. Either include them or remove the dependency array.",["904"],"'kintoID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'getUserInfoToken' is defined but never used.","'ControlPointDuplicateOutlined' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["905","906"],"'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'Idtoken' is assigned a value but never used.","'setIdToken' is assigned a value but never used.","'dealerCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["907"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["908"],"'setSearchData' is assigned a value but never used.","'TransactionModal' is defined but never used.","'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["909"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["910"],"Duplicate key 'font-weight'.","'accountInformation' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'vehicleList' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'handleChangePageCount' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","'rows' is assigned a value but never used.","'setPage' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'activeChild' and 'location.pathname'. Either include them or remove the dependency array.",["911"],"'CardMedia' is defined but never used.","'MileagePricingSideBar' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotesByVin'. Either include it or remove the dependency array.",["912"],"'Paper' is defined but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'handleSearchText' is assigned a value but never used.","'Link' is defined but never used.","'LinearProgress' is defined but never used.","'getOktaUserInfo' is defined but never used.","'getAccessTokenEndpoint' is defined but never used.","'getUserInfo' is defined but never used.","'getImageData' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'resp' is assigned a value but never used.","'SSOAuth' is assigned a value but never used.","'setSSOAuth' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'allVehicleResponse'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVehicleResponse' needs the current value of 'allVehicleResponse'.",["913"],"'d2' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleSeperation'. Either include it or remove the dependency array.",["914"],"'TextareaAutosize' is defined but never used.","'InputLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'props.vin'. Either include it or remove the dependency array.",["915"],"'handleClick' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accountInfo', 'getMakePatmentDetails', 'paymentType', 'paymentTypeFee', 'paymentTypeName', 'props', and 'totalFee'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["916"],"'getCarXml' is defined but never used.","React Hook useEffect has missing dependencies: 'getImages' and 'props'. Either include them or remove the dependency array.",["917"],"'Button' is defined but never used.","'useForkRef' is defined but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["918"],["919"],"'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'client_id' is assigned a value but never used.","'getTokenSSO' is assigned a value but never used.","'MileageDiscList' is assigned a value but never used.","no-redeclare","'data' is already defined.","redeclared","'updateMileageType' is assigned a value but never used.","'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStatusHistory'. Either include it or remove the dependency array.",["920"],"React Hook useEffect has missing dependencies: 'getGroundingDetailsDetails', 'getInspectionVehicleDeta', and 'getVehicleSaleInformation'. Either include them or remove the dependency array.",["921"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'MobileStepper' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'activeStep' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.images'. Either include it or remove the dependency array.",["922"],"'CheckCircle' is defined but never used.","'getTransportationDetails' is defined but never used.","'QontoConnector' is assigned a value but never used.","'setTransportDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTransportInformation'. Either include it or remove the dependency array.",["923"],"'handleReset' is assigned a value but never used.","'setEndTime' is assigned a value but never used.","'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.vehicle.end_date' and 'props.vehicle.start_date'. Either include them or remove the dependency array.",["924"],"'useEffect' is defined but never used.","'noCall' is assigned a value but never used.","'setnoCall' is assigned a value but never used.","'apiResponse' is assigned a value but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","'makeStyles' is defined but never used.","'setTotalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onChangePage', 'skipRecords', and 'totalData'. Either include them or remove the dependency array.",["925"],"no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"926","text":"927"},"'PurchasedPricingSideBar' is defined but never used.","'UpdateMileagePricing' is defined but never used.","'purchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.",["928"],["929"],"'CheckIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getClearfaxStatus'. Either include it or remove the dependency array.",["930"],"'OktaSignInWidget' is defined but never used.","'jwt_decode' is defined but never used.",["931","932"],["933","934"],"'onSuccess' is assigned a value but never used.","'onError' is assigned a value but never used.",["935","936"],["937","938"],"React Hook useEffect has a missing dependency: 'setToken'. Either include it or remove the dependency array.",["939"],"'Select' is defined but never used.","'MenuItem' is defined but never used.","'pages' is assigned a value but never used.",["940"],"no-global-assign","no-unsafe-negation",{"desc":"941","fix":"942"},{"desc":"943","fix":"944"},{"messageId":"945","fix":"946","desc":"947"},{"messageId":"948","fix":"949","desc":"950"},{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"959","fix":"960"},{"desc":"961","fix":"962"},{"desc":"963","fix":"964"},{"desc":"965","fix":"966"},{"desc":"967","fix":"968"},{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"973","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},[5729,5738],"\"right\"",{"desc":"955","fix":"988"},{"desc":"989","fix":"990"},{"desc":"991","fix":"992"},{"messageId":"945","fix":"993","desc":"947"},{"messageId":"948","fix":"994","desc":"950"},{"messageId":"945","fix":"995","desc":"947"},{"messageId":"948","fix":"996","desc":"950"},{"messageId":"945","fix":"997","desc":"947"},{"messageId":"948","fix":"998","desc":"950"},{"messageId":"945","fix":"999","desc":"947"},{"messageId":"948","fix":"1000","desc":"950"},{"desc":"1001","fix":"1002"},{"desc":"986","fix":"1003"},"Update the dependencies array to be: [props.location.state]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, props?.location?.state?.vehicleDetails, vin]",{"range":"1006","text":"1007"},"removeEscape",{"range":"1008","text":"1009"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1010","text":"1011"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [getToken]",{"range":"1012","text":"1013"},"Add dependencies array: []",{"range":"1014","text":"1015"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [activeChild, location.pathname, props.stateUpdate]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [getNotesByVin, props.vin]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [allVehicleResponse, props.selectedDealersData]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [handleSeperation, props.DamageDetails]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [props.vin]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [accountInfo, getMakePatmentDetails, paymentType, paymentTypeFee, paymentTypeName, props, props.isConfirmPurchase, totalFee]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [getImages, props]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"1034","text":"1035"},{"range":"1036","text":"1035"},"Update the dependencies array to be: [getStatusHistory, vin]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [getGroundingDetailsDetails, getInspectionVehicleDeta, getVehicleSaleInformation, vin]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [props.images]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [props.transportData, setTransportInformation]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [endtime, props.vehicle.end_date, props.vehicle.start_date]",{"range":"1045","text":"1046"},"Update the dependencies array to be: [onChangePage, pageCount, skipRecords, totalData]",{"range":"1047","text":"1048"},{"range":"1049","text":"1017"},"Update the dependencies array to be: [getInspectionDamageDetails, inspectionId]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [getClearfaxStatus, vin]",{"range":"1052","text":"1053"},{"range":"1054","text":"1009"},{"range":"1055","text":"1011"},{"range":"1056","text":"1009"},{"range":"1057","text":"1011"},{"range":"1058","text":"1009"},{"range":"1059","text":"1011"},{"range":"1060","text":"1009"},{"range":"1061","text":"1011"},"Update the dependencies array to be: [setToken]",{"range":"1062","text":"1063"},{"range":"1064","text":"1048"},[1817,1872],"[props.location.state]",[3569,3574],"[getConditionVehicleDetails, getOEMBuildDetails, props?.location?.state?.vehicleDetails, vin]",[458,459],"",[458,458],"\\",[966,968],"[getToken]",[1352,1352],", []",[2806,2811],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[3030,3032],"[getInspectionDamageDetails]",[3173,3192],"[activeChild, location.pathname, props.stateUpdate]",[965,976],"[getNotesByVin, props.vin]",[4397,4424],"[allVehicleResponse, props.selectedDealersData]",[8431,8452],"[handleSeperation, props.DamageDetails]",[4934,4936],"[props.vin]",[11019,11044],"[accountInfo, getMakePatmentDetails, paymentType, paymentTypeFee, paymentTypeName, props, props.isConfirmPurchase, totalFee]",[1450,1452],"[getImages, props]",[2576,2583],"[getVehicleDetails, value]",[2258,2265],[1343,1348],"[getStatusHistory, vin]",[1270,1275],"[getGroundingDetailsDetails, getInspectionVehicleDeta, getVehicleSaleInformation, vin]",[1995,1997],"[props.images]",[3292,3313],"[props.transportData, setTransportInformation]",[1936,1945],"[endtime, props.vehicle.end_date, props.vehicle.start_date]",[1792,1803],"[onChangePage, pageCount, skipRecords, totalData]",[3266,3271],[4464,4478],"[getInspectionDamageDetails, inspectionId]",[2142,2147],"[getClearfaxStatus, vin]",[675,676],[675,675],[1042,1043],[1042,1042],[334,335],[334,334],[717,718],[717,717],[1053,1055],"[setToken]",[1812,1823]]