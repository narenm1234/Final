[{"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\index.js":"1","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\reportWebVitals.js":"2","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\theme.js":"3","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\App.js":"4","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Header\\Header.js":"5","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js":"6","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Grounded.js":"7","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Sidebar.js":"8","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Home.js":"9","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js":"10","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ConditionReport.js":"11","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js":"12","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js":"13","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\AdminHome.js":"14","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js":"15","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js":"16","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Separator.js":"17","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\AdminSearchHeader.js":"18","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\RRMApproval.js":"19","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\ManualPricing.js":"20","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\MileageDisc.js":"21","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\NewSideBar.js":"22","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ImageGallery.js":"23","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js":"24","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\VehicleInformation.js":"25","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js":"26","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\TransactionModal.js":"27","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js":"28","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js":"29","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js":"30","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js":"31","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js":"32","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js":"33","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js":"34","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Search\\Search.js":"35","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SearchText\\Search.js":"36","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\service\\api.js":"37","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\PassOnVehicle.js":"38","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js":"39","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js":"40","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\CustomisedInput.js":"41","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Pagination.js":"42","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js":"43","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilter.js":"44","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js":"45","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\NotesSection.js":"46","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Tabs.js":"47","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\StatusHistory.js":"48","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js":"49","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Login2.js":"50"},{"size":661,"mtime":1630947162197,"results":"51","hashOfConfig":"52"},{"size":375,"mtime":1630947141533,"results":"53","hashOfConfig":"52"},{"size":319,"mtime":1631691398944,"results":"54","hashOfConfig":"52"},{"size":3302,"mtime":1633543630554,"results":"55","hashOfConfig":"52"},{"size":1774,"mtime":1632241473584,"results":"56","hashOfConfig":"52"},{"size":2856,"mtime":1631197345129,"results":"57","hashOfConfig":"52"},{"size":699,"mtime":1630946550061,"results":"58","hashOfConfig":"52"},{"size":3705,"mtime":1633543630640,"results":"59","hashOfConfig":"52"},{"size":499,"mtime":1630946514316,"results":"60","hashOfConfig":"52"},{"size":241,"mtime":1630946443089,"results":"61","hashOfConfig":"52"},{"size":28021,"mtime":1633543694249,"results":"62","hashOfConfig":"52"},{"size":228,"mtime":1630946426227,"results":"63","hashOfConfig":"52"},{"size":236,"mtime":1633540425216,"results":"64","hashOfConfig":"52"},{"size":1682,"mtime":1633013488691,"results":"65","hashOfConfig":"52"},{"size":55182,"mtime":1632249785594,"results":"66","hashOfConfig":"52"},{"size":9776,"mtime":1631691398933,"results":"67","hashOfConfig":"52"},{"size":265,"mtime":1630947886062,"results":"68","hashOfConfig":"52"},{"size":1747,"mtime":1632241473582,"results":"69","hashOfConfig":"52"},{"size":25453,"mtime":1633541109304,"results":"70","hashOfConfig":"52"},{"size":20586,"mtime":1633030792917,"results":"71","hashOfConfig":"52"},{"size":18260,"mtime":1633543630634,"results":"72","hashOfConfig":"52"},{"size":5172,"mtime":1633543630636,"results":"73","hashOfConfig":"52"},{"size":2615,"mtime":1633543630687,"results":"74","hashOfConfig":"52"},{"size":14253,"mtime":1633543630674,"results":"75","hashOfConfig":"52"},{"size":8545,"mtime":1631691398918,"results":"76","hashOfConfig":"52"},{"size":21099,"mtime":1633543694256,"results":"77","hashOfConfig":"52"},{"size":6846,"mtime":1632249785596,"results":"78","hashOfConfig":"52"},{"size":6609,"mtime":1632249785577,"results":"79","hashOfConfig":"52"},{"size":1443,"mtime":1631691398887,"results":"80","hashOfConfig":"52"},{"size":5365,"mtime":1633540425218,"results":"81","hashOfConfig":"52"},{"size":8158,"mtime":1633543694251,"results":"82","hashOfConfig":"52"},{"size":311,"mtime":1631691398932,"results":"83","hashOfConfig":"52"},{"size":327,"mtime":1631691398930,"results":"84","hashOfConfig":"52"},{"size":4773,"mtime":1631691398894,"results":"85","hashOfConfig":"52"},{"size":1464,"mtime":1631691398904,"results":"86","hashOfConfig":"52"},{"size":1321,"mtime":1631691398907,"results":"87","hashOfConfig":"52"},{"size":19498,"mtime":1633544158211,"results":"88","hashOfConfig":"52"},{"size":3394,"mtime":1633030792936,"results":"89","hashOfConfig":"52"},{"size":3970,"mtime":1633543630669,"results":"90","hashOfConfig":"52"},{"size":4089,"mtime":1632103940568,"results":"91","hashOfConfig":"52"},{"size":1708,"mtime":1630946877474,"results":"92","hashOfConfig":"52"},{"size":3241,"mtime":1631691398899,"results":"93","hashOfConfig":"52"},{"size":12988,"mtime":1631691398913,"results":"94","hashOfConfig":"52"},{"size":13661,"mtime":1631691398911,"results":"95","hashOfConfig":"52"},{"size":12984,"mtime":1631691398916,"results":"96","hashOfConfig":"52"},{"size":2270,"mtime":1630946801253,"results":"97","hashOfConfig":"52"},{"size":2591,"mtime":1633013488688,"results":"98","hashOfConfig":"52"},{"size":3134,"mtime":1630946738369,"results":"99","hashOfConfig":"52"},{"size":6487,"mtime":1631691398921,"results":"100","hashOfConfig":"52"},{"size":1040,"mtime":1633543694253,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"d2wumy",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"215","usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"104"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"104"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\index.js",[],["232","233"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\reportWebVitals.js",[],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\theme.js",[],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\App.js",["234","235","236","237"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Header\\Header.js",["238"],"import React, { useState } from \"react\";\r\nimport Separator from \"../Separator\";\r\nimport AdminSearchHeader from \"../AdminSearchHeader\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Route , withRouter} from 'react-router-dom';\r\nconst Header = (props) => {\r\n  const [showDealer, setShowDealer] = useState(null);\r\n  const toggleShowDealer = (event) => {\r\n    setShowDealer(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setShowDealer(null);\r\n  };\r\n  const handleSearch = (SearchText) => {\r\n    console.log(props)\r\n    //props.searchdetails(SearchText);\r\n    openConditionScreen(SearchText,\"\")\r\n  }\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    console.log(props)\r\n    props.history.push(\"/conditionreport\", {\r\n      vin: VINumber,\r\n      vehicleDetails: vehicle,\r\n      results:true,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"imageHolder\">\r\n        <img src=\"MFS.png\" alt=\"logo\" width=\"174px\" height=\"33px\" />\r\n        <Separator />\r\n        <div className=\"auctionSales\">Auction Sales Platform </div>\r\n      </div>\r\n      <AdminSearchHeader\r\n        searchdetails={(SearchText) =>{ handleSearch(SearchText)}}\r\n      />\r\n      <div onClick={toggleShowDealer} className=\"dealerName\">\r\n        Dealer Name\r\n      </div>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={showDealer}\r\n        keepMounted\r\n        open={Boolean(showDealer)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>User Settings</MenuItem>\r\n        <MenuItem onClick={handleClose}>Help</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js",["239","240","241","242"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ManualPricing from './ManualPricing';\r\nimport RRMApproval from './RRMApproval';\r\nimport MileageDisc from './MileageDisc'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3} pt={16}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n}));\r\n\r\nexport default function InventoryRequestsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state && props.location.state.pageName === 'RRMApproval') {\r\n      setValue(1)\r\n    } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\r\n      setValue(0)\r\n    }\r\n    else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\r\n      setValue(2)\r\n    }\r\n  }, [props.location.state && props.location.state.pageName]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className='topBarAdmin'>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className='tabset'>\r\n          <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\r\n          <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\r\n          <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ManualPricing props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RRMApproval props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <MileageDisc props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <h2>No Inspections</h2>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Grounded.js",[],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Sidebar.js",["243","244"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Home.js",["245","246"],"import React from 'react';\r\nimport Search from '../components/Search/Search';\r\nimport VehicleInformation from '../components/VehicleInformation';\r\n\r\n\r\nlet styles = {\r\n  homesearch: {\r\n    'width': '371px',\r\n    'height': '32px',\r\n    'margin': '3px 0 0',\r\n    'padding': '7px 9px 8px 12px',\r\n    'border-radius': '4px',\r\n    'border': 'solid 1px #dddbda',\r\n    'background-color': '#ffffff'\r\n\r\n  },\r\n}\r\nconst Home = () => {\r\n  return (\r\n    <VehicleInformation />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js",["247"],"import React, { useState } from 'react';\r\nimport ListingPage from './groundedListPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage {...props}></ListingPage>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ConditionReport.js",["248","249","250","251","252","253","254","255","256","257"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js",["258"],"import React, { useState } from 'react';\r\nimport ListingPage2 from './purchasedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage2></ListingPage2>\r\n    </div>\r\n  );\r\n};","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js",["259"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\AdminHome.js",["260","261","262"],"import React,{useState,useEffect} from 'react';\r\nimport AdminVehicleSearch from '../components/AdminVehicleSearch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VehicleSearchTabs from '../components/Tabs';\r\nimport NotesSection from '../components/NotesSection';\r\nimport {getInspectionVehicleDetails} from '../service/api';\r\n\r\n\r\nconst AdminHome = (props) => {\r\n  const [searchText, setSearchText] = React.useState(\"\");\r\n  const [isSubmit,setisSubmit] = useState(false);\r\n  const [inspectiondata,setinspectiondata]=useState([])\r\n\r\n  console.log(\"inspectiondata\",inspectiondata)\r\n\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails()\r\n  }, [searchText.length==15])\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(\"JM3KFBDM0K1698372\");\r\n    console.log(\"getConditionVehicleDetailsresponse\",apiResponse)\r\n    setinspectiondata(apiResponse.data)\r\n}\r\n\r\n  const handleSubmitbtn = () =>{\r\n    //setisSubmit(true);\r\n  }\r\n  const handleSearch = (text) => {\r\n    console.log(\"home\",text)\r\n    setSearchText(text);\r\n    if(text.length > 15){\r\n      setisSubmit(true);\r\n    }\r\n    \r\n    //openConditionScreen(text,\"\")\r\n  }\r\n  const openConditionScreen = (VINumber, vehicle) => {\r\n    // props.history.push(\"/conditionreport\", {\r\n    //   vin: VINumber,\r\n    //   vehicleDetails: vehicle,\r\n    // });\r\n  };\r\n  return (\r\n    (isSubmit) ? (<Grid container><Grid xs={10}><VehicleSearchTabs inspectiondata={inspectiondata} /></Grid><Grid xs={2}><NotesSection /></Grid></Grid>) : (<AdminVehicleSearch fromchildhandleSubmitbtn={handleSubmitbtn} searchdetails={(text) => handleSearch(text)} />)\r\n  );\r\n};\r\n\r\nexport default AdminHome;","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js",["263","264","265","266","267","268","269","270","271","272"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ViewDetailedReport from \"./ViewDetailedReport\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  getPassedList1,\r\n  getInspectionDamageDetailsApi,\r\n  getOEMBuildDetailsApi,\r\n} from \"../service/api\";\r\nimport {\r\n  getInspectionVehicleDetails,\r\n  getInspectionAccessoryDetails,\r\n  getInspectionWheelTiresDetails,\r\n} from \"../service/api\";\r\nimport ManualPricingSideBar from \"../components/ManualPricingSideBar\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport TransactionModal from \"./TransactionModal\";\r\n\r\nexport default function ConditionReportRequests(props) {\r\n  let listOfItem = [\r\n    \"VIN\",\r\n    \"Engine\",\r\n    \"Door\",\r\n    \"Body Style\",\r\n    \"Transmission\",\r\n    \"Drive Train\",\r\n    \"Interior type\",\r\n    \"Interior Color\",\r\n    \"Keys\",\r\n    \"Interior Type\",\r\n    \"Odor\",\r\n    \"Grounding Mileage\",\r\n    \"Account Type\",\r\n  ];\r\n  let wheelTyrelistOfItem = [\"LF\", \"RF\", \"LR\", \"RR\", \"SP\", \"RR\"];\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({});\r\n  const [accessoryDetails, setAccessoryDetails] = React.useState({});\r\n  const [wheelTiresDetails, setWheelTiresDetails] = useState([]);\r\n  const [vin, setVin] = React.useState(props?.match?.params?.vin);\r\n  const [pageName, setPageName] = React.useState(\r\n    props?.location?.state?.pageName\r\n  );\r\n  const [inspectionId, setInspectionId] = React.useState([]);\r\n  const [VehicleResponse, setVehicleResponse] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n  const [DamageDetails, setDamageDetails] = useState([]);\r\n  const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n\r\n  // const [openTransactionPopup, setOpenTransactionPopup] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getOEMBuildDetails();\r\n    getConditionVehicleDetails();\r\n    getVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getOEMBuildDetails() {\r\n    let apiResponse = await getOEMBuildDetailsApi(vin);\r\n    setOEMBuildDetailsData(apiResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionDamageDetails();\r\n  }, []);\r\n\r\n  async function getInspectionDamageDetails() {\r\n    let getInspectionDamageDetailsaApiResponse =\r\n      await getInspectionDamageDetailsApi(inspectionId, vin);\r\n    setDamageDetails(getInspectionDamageDetailsaApiResponse.data);\r\n  }\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPassedList1();\r\n    setVehicleResponse(apiResponse.data.data);\r\n    console.log(VehicleResponse.data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInspectionAccessory(inspectionId);\r\n    getInspectionWheelTires(inspectionId);\r\n  }, [inspectionId]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n    setInspectionId(apiResponse.data.inspection_id);\r\n  }\r\n\r\n  async function getInspectionAccessory(inspectionId) {\r\n    let apiResponse = await getInspectionAccessoryDetails(inspectionId);\r\n    setAccessoryDetails(apiResponse.data);\r\n  }\r\n\r\n  async function getInspectionWheelTires(inspectionId) {\r\n    let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n    console.log(\"wheelTiresDetailsapires\", apiResponse);\r\n    setWheelTiresDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"conditionTopBar\">\r\n        <Box p={1} textAlign=\"right\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/adminInventoryRequests\",\r\n              state: { pageName: pageName },\r\n            }}\r\n          >\r\n            {pageName}\r\n          </Link>\r\n        </Box>\r\n      </div>\r\n      <Box p={2} pt={14}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={4}>\r\n            <MyGallery />\r\n            <Grid container className=\"ConditionCardBody\">\r\n              <div className=\"damageTitle\">\r\n                <span>Damage Report</span>\r\n              </div>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Exterior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.exteriorCost\r\n                        ? DamageDetails.exteriorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Interior total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.interiorCost\r\n                        ? DamageDetails.interiorCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Card className=\"ConditionCardDamage\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Mechanical total</div>\r\n                    <div className=\"smallCardBody warningColor\">\r\n                      {DamageDetails.maintainenceCost\r\n                        ? DamageDetails.maintainenceCost\r\n                        : \"NA\"}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  className=\"detailedReport\"\r\n                  onClick={handleOpen}\r\n                >\r\n                  View Full Detailed Report\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <div className=\"disclaimer\">\r\n                  Disclaimer: Damage estimates are included for reference and\r\n                  may not be reflective of the actual repair costs\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"LabelTextTextArea\">Announcements</div>\r\n            <TextareaAutosize\r\n              className=\"inputFieldTextArea\"\r\n              aria-label=\"maximum height\"\r\n              placeholder=\"Maximum 4 rows\"\r\n              defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" py={2}>\r\n              <div className=\"reportTitle\">\r\n                <span>MAZDA SD 2019 </span>\r\n              </div>\r\n              <span className=\"ConditionReportInspection\">\r\n                <span className=\"BadgeValue\">Inspection Complete</span>\r\n              </span>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Payoff</div>\r\n                    <div className=\"smallCardBody\">$12,000.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle1\">Residual + Remaining</div>\r\n                    <div className=\"smallCardBody\">$11,250.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Market Based</div>\r\n                    <div className=\"smallCardBody\">$10,500.00</div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Inspection Grade</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.condition_grade}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item md={4}>\r\n                <Card className=\"ConditionCard\">\r\n                  <CardContent>\r\n                    <div className=\"smallCardTitle\">Odometer</div>\r\n                    <div className=\"smallCardBody\">\r\n                      {condionVehicleDetails.inspection_mileage}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={12}>\r\n                <Box mt={2}>\r\n                  <Card>\r\n                    <Box p={2}>\r\n                      <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                      <hr />\r\n                      <CardContent>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> VIN </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">{vin}</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Date{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.inspection_date}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Inspection Location{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span>.</span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_address2}\r\n                              {condionVehicleDetails.location_city}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span> . </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails.location_code}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Consignor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.location_address}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Engine </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.engine_cylinder}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Door </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Body Style </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.body_style}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Transmission </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.transmission_type}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Drive Train </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Exterior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.ext_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.interior_material}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Interior color </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">\r\n                              {condionVehicleDetails?.int_color}\r\n                            </span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Keys </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\">\r\n                                {\" \"}\r\n                                Grounding Mileage{\" \"}\r\n                              </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\">9,000 miles</span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Account Type </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                        <List className=\"paddingCSS\">\r\n                          <ListItemText>\r\n                            <span className=\"textStyle\">\r\n                              <span className=\"textBold\"> Odor </span>\r\n                            </span>\r\n                          </ListItemText>\r\n                          <ListItemSecondaryAction>\r\n                            <span className=\"textSize\"></span>\r\n                          </ListItemSecondaryAction>\r\n                        </List>\r\n                      </CardContent>\r\n\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Accessories</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableBody>\r\n                              <TableRow key=\"10074\">\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                  {accessoryDetails.item_id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  {accessoryDetails.description}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Location</TableCell>\r\n                                <TableCell align=\"right\">Brand</TableCell>\r\n                                <TableCell align=\"right\">Size</TableCell>\r\n                                <TableCell align=\"right\">Wheel</TableCell>\r\n                                <TableCell align=\"right\">Tread Depth</TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {wheelTiresDetails?.map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {wheelTiresDetails?.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tire_location}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.manufracturer}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.size}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                      {list.tread}\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <CardContent>\r\n                        <Typography variant=\"h6\">Build Data</Typography>\r\n                        <hr />\r\n                        <TableContainer component={Paper}>\r\n                          <Table\r\n                            className=\"table\"\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>Code</TableCell>\r\n                                <TableCell align=\"right\">Description</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                  Package Details\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {[\"1\"].map((list) => {\r\n                                return (\r\n                                  <TableRow key={list}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                      {list}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"> </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                      </CardContent>\r\n                      <div className=\"disclaimerVRS\">\r\n                        Disclaimer: The parts, equipment, accessories, and other\r\n                        information listed above are based on\r\n                        equipment/configuration at the time vehicle was sold by\r\n                        Mazda Motor Corporation to a dealer and does not mean\r\n                        that this vehicle is still so equipped.\r\n                      </div>\r\n                    </Box>\r\n                  </Card>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <ManualPricingSideBar />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <ViewDetailedReport\r\n          DamageDetails={DamageDetails}\r\n          open={open}\r\n          close={handleClose}\r\n        />\r\n      </Box>\r\n\r\n      {/* <Box>\r\n        <TransactionModal\r\n        type={'confirm'}\r\n          open={openTransactionPopup}\r\n          onClose={() => {\r\n            setOpenTransactionPopup(false);\r\n          }}\r\n        ></TransactionModal>\r\n      </Box> */}\r\n\r\n\r\n\r\n      {/* <div className='conditionPageCardReports'>\r\n                <Grid item xs={12}>\r\n                    <div className='conditionTopBar'>\r\n                        <Grid xs={12} className='conditionTopBarLayout'>\r\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                    <Grid item xs={5}>\r\n                        <MyGallery />\r\n                        <Grid container className=\"ConditionCardBody\">\r\n                            <div className='damageTitle'>\r\n                                <span>Damage Report</span>\r\n                            </div>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Exterior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.exteriorCost ? DamageDetails.exteriorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Interior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.interiorCost ? DamageDetails.interiorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Mechanical total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.maintainenceCost ? DamageDetails.maintainenceCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\r\n                                    View Full Detailed Report\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <div className=\"disclaimer\">\r\n                                    Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"LabelTextTextArea\">Announcements</div>\r\n                        <TextareaAutosize\r\n                            className=\"inputFieldTextArea\"\r\n                            aria-label=\"maximum height\"\r\n                            placeholder=\"Maximum 4 rows\"\r\n                            defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                        <div className='ConditionReportSection'>\r\n                            <div className='reportTitle'>\r\n                                <span>MAZDA SD 2019 </span>\r\n                            </div>\r\n                            <span className='ConditionReportInspection'>\r\n                                <span className='BadgeValue'>Inspection Complete</span>\r\n                            </span>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Payoff\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $12,000.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\" >\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle1\">\r\n                                            Residual + Remaining\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $11,250.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Market Based\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $10,500.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Inspection Grade\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.condition_grade}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Odometer\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.inspection_mileage}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>\r\n                            <Card className=\"vehicleSectionCR\">\r\n                                <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                                <hr />\r\n                                <CardContent>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  VIN  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{vin}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Date  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.inspection_date}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Location  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span >\r\n                                                    .\r\n                                                </span>\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span > .   </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Consignor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Engine  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Door  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Body Style  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Transmission  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Drive Train  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Exterior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Keys  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Grounding Mileage  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">9,000 miles</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Account Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Odor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n\r\n                                </CardContent>\r\n\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Accessories</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableBody>\r\n                                                <TableRow key=\"10074\">\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {accessoryDetails.item_id}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\r\n                                             \r\n                                                </TableRow>\r\n                                               \r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Location</TableCell>\r\n                                                    <TableCell align=\"right\">Brand</TableCell>\r\n                                                    <TableCell align=\"right\">Size</TableCell>\r\n                                                    <TableCell align=\"right\">Wheel</TableCell>\r\n                                                    <TableCell align=\"right\">Tread Depth</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {wheelTiresDetails?.map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{list.tire_location}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.manufracturer}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.size}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Build Data</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Code</TableCell>\r\n                                                    <TableCell align=\"right\">Description</TableCell>\r\n                                                    <TableCell align=\"right\">Package Details</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {['1'].map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {list}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\"></TableCell>\r\n                                                            <TableCell align=\"right\"> </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n\r\n                                </CardContent>\r\n                                <div className=\"disclaimerVRS\">\r\n                                    Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\r\n                                </div>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\r\n            </div>\r\n            <ManualPricingSideBar /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js",["273","274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../../components/SearchText/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport GroundVehicleMFS from \"./GroundVehicleMFS\";\r\nimport GroundVehiclePLV from \"./GroundVehiclePLV\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { getAuthToken, getVehicleDetails } from \"../../service/api\";\r\n\r\nexport default function VINSearch(props) {\r\n  const placeholder = \"Enter last 6 digits of VIN\";\r\n  const [token, setToken] = useState(\"\");\r\n  const [vehicleResponse, setVehicleResponse] = useState({});\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [reasonForReturn, setreasonForReturn] = useState(\r\n    \"Ground_Vehicle_for_MFS\"\r\n  );\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getAuthToken();\r\n    setToken(tokenResponse.data?.access_token);\r\n  });\r\n  async function getVehDetails(value) {\r\n    let apiResponse = await getVehicleDetails(token, value);\r\n    setVehicleResponse(apiResponse.data);\r\n    if (apiResponse.data.vehicleInfo?.length > 0) {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    } else {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    }\r\n  }\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n\r\n    let value = e?.target?.value;\r\n    console.log(value);\r\n    getVehDetails(value);\r\n\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n  const handleReasonChange = (e) => {\r\n    console.log(e.target.value);\r\n    setreasonForReturn(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"grounding\">\r\n        <div className=\"searchLabelHeader\">Vehicle Grounding</div>\r\n        <div className=\"searchLabel\">Begin Vehicle Lease return process</div>\r\n        <Search\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n        {!validSearch && suggestions && (\r\n          <div className=\"noMatchesFrame\">\r\n            <div className=\"noMatches\">VIN not found/Inactive</div>\r\n          </div>\r\n        )}\r\n\r\n        {validSearch && (\r\n          <div>\r\n            <div className=\"carRecordFound\">\r\n              <div className=\"vehicleMakeModel\">\r\n                <span>\r\n                  {vehicleResponse?.vehicleInfo[0]?.brand}\r\n                  {\" & \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.model}\r\n                  {\" | \"}{\" \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.ext_color}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Customer Return date\r\n              </InputLabel>\r\n              <TextField\r\n                id=\"date\"\r\n                type=\"date\"\r\n                defaultValue=\"00/00/0000\"\r\n                className=\"customerReturnDate\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Reason for Return\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Reason for Return\"\r\n                value={reasonForReturn}\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"age\" }}\r\n                className=\"customerReturnDate\"\r\n                onChange={(event) => handleReasonChange(event)}\r\n              >\r\n                <MenuItem value={\"Purchase_Leased_Vehicle\"}>\r\n                  Purchase Leased Vehicle\r\n                </MenuItem>\r\n                <MenuItem value={\"Ground_Vehicle_for_MFS\"}>\r\n                  Ground Vehicle for MFS\r\n                </MenuItem>\r\n                <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\r\n              </Select>\r\n            </div>\r\n            {reasonForReturn === \"Ground_Vehicle_for_MFS\" && (\r\n              <>\r\n                {\" \"}\r\n                <GroundVehicleMFS />\r\n                <div className=\"odometerBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Odometer Reading\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Enter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Renter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"keysReturnedBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Number of Keys Returned\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Master Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Valet Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                </div>\r\n                <div className=\"vehicleCondition\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Vehicle Condition\r\n                  </InputLabel>\r\n                  <div className=\"Rectangle-3\">\r\n                    <FormControlLabel control={<Radio />} label=\"Drivable\" />\r\n                  </div>\r\n                  <div className=\"Rectangle-3\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Not Drivable\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"pickUpLocation\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Pick Up Location\r\n                  </InputLabel>\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 2\"\r\n                    />\r\n                  </div>\r\n                </div>{\" \"}\r\n              </>\r\n            )}\r\n\r\n            {(reasonForReturn === \"Purchase_Leased_Vehicle\" ||\r\n              reasonForReturn === \"Trade_In\") && (\r\n              <>\r\n                <GroundVehiclePLV />\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Separator.js",[],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\AdminSearchHeader.js",["278","279","280","281","282"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 300,\r\n        height: 35,\r\n        margin: '7px 8px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        fontSize: '14px',\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function AdminSearchHeader(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n    const handleSearchText = (value) => {\r\n        console.log(props)\r\n        props.searchdetails(value);\r\n        setSearchtext(value)\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Global Search by VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => props.searchdetails(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\RRMApproval.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\ManualPricing.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SwipableFilter from \"./SwipableFilter\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport { awaitManualPricing } from \"../service/api\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeadFont: {\r\n    fontWeight: 600,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  Grounding_Region,\r\n  Inspection_Date,\r\n  Inspection_Status,\r\n  Action_Code\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    Grounding_Region,\r\n    Inspection_Date,\r\n    Inspection_Status,\r\n    Action_Code,\r\n  };\r\n}\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n];\r\n\r\nexport default function ManualPricing(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [vehicleList, setVehicleList] = useState(rows);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n  const [manualPricingList, setManualPricingList] = useState([]);\r\n  const [manualPricingListRows, setManualPricingListRows] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n\r\n  useEffect(() => {\r\n    getManualPricingDetails();\r\n  }, []);\r\n  async function getManualPricingDetails() {\r\n    let apiResponse = await awaitManualPricing();\r\n    console.log(\"ManualPricing------->\", apiResponse.data);\r\n    setManualPricingListRows(apiResponse.data);\r\n  }\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Manual Pricing\",\r\n    });\r\n  };\r\n\r\n  const fetchDataBasedOnSearchValue = (searchText) => {\r\n    const vehicleListCopy = [...rows];\r\n    if (searchText) {\r\n      const filteredList = vehicleListCopy.filter((row) => {\r\n        return row.VIN.indexOf(searchText) !== -1;\r\n      });\r\n      setVehicleList(filteredList);\r\n    } else {\r\n      setVehicleList(rows);\r\n    }\r\n  };\r\n\r\n  const fetchDataBasedOnFilters = (filterInput) => {\r\n    let vehicleListCopy = [...rows];\r\n    if (filterInput.vin) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.VIN.indexOf(filterInput.vin) !== -1 ||\r\n          (row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo)\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.yearFrom && filterInput.yearTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.make) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Make.indexOf(filterInput.make) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionStatus) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.groundingRegion) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.auctionCode) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        const dateTs = Date.parse(row.Inspection_Date);\r\n        return (\r\n          dateTs >= Date.parse(filterInput.inspectionDateFrom) &&\r\n          dateTs <= Date.parse(filterInput.inspectionDateTo)\r\n        );\r\n      });\r\n    }\r\n    setVehicleList(vehicleListCopy);\r\n  };\r\n\r\n  const resetFilterList = () => {\r\n    setVehicleList(rows);\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    console.log(\"data\", data);\r\n    setManualPricingList(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilter\r\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\r\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\r\n          resetFilterList={resetFilterList}\r\n        />\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Grounding Region\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Date\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Status\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Action Code\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {manualPricingList?.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.vin}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.modelYear}</TableCell>\r\n                  <TableCell align=\"center\">{row.make}</TableCell>\r\n                  <TableCell align=\"center\">{row.model}</TableCell>\r\n                  <TableCell align=\"center\">{row.groundingRegion}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.inspectionStatus}</TableCell>\r\n                  <TableCell align=\"center\">{row.actionCode}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {manualPricingListRows.length != 0 ? (\r\n          <Paginator\r\n            label=\"Result per page\"\r\n            showItemsPerPage={10}\r\n            pages={[10, 20, 30, 40]}\r\n            data={manualPricingListRows}\r\n            onChangePage={onChangePage}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\MileageDisc.js",["317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\NewSideBar.js",["334","335","336","337","338","339","340","341","342","343","344","345"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ImageGallery.js",["346","347"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js",["348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\VehicleInformation.js",["363","364","365","366","367","368","369"],"import React, { useState } from \"react\";\r\nimport Search from \"./Search/Search\";\r\n\r\nlet styles = {\r\n  container: {\r\n    width: \"371px\",\r\n    height: \"270px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n\r\n  VehicleMakeModel: {\r\n    width: \"271px\",\r\n    height: \"24px\",\r\n    margin: \"0 69px 0 0\",\r\n    \"font-family\": \"SalesforceSans\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"bold\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#080707\",\r\n  },\r\n  line: {\r\n    width: \"350px\",\r\n    height: \"2px\",\r\n    margin: \"4px 2px 11px 2px\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n\r\n  label: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  value: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n    \"font-weight\": \"normal\",\r\n  },\r\n\r\n  imagebox: {\r\n    width: \"180px\",\r\n    height: \"160px\",\r\n    margin: \"0px 1px 2px 2px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n  search: {\r\n    width: \"371px\",\r\n    height: \"32px\",\r\n    \"margin-top\": \"10px\",\r\n    padding: \" 0 0 0px\",\r\n    \"border-radius\": \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"flex\",\r\n    \"flex-direction\": \"row\",\r\n  },\r\n  noMatchesFrame: {\r\n    width: \"371px\",\r\n    height: \"76px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"block\",\r\n    margin: \"1% 0 0 40%\",\r\n  },\r\n  noMatches: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  searchSuggestionFrame: {\r\n    width: \"371px\",\r\n    height: \"200px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  searchSuggestion: {\r\n    width: \"350px\",\r\n    height: \"35px\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n  searchLabel: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  imageContainer: {\r\n    width: \"371px\",\r\n    height: \"160px\",\r\n    margin: \"48px 54px 16px\",\r\n    //\"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  imageContainer1: {\r\n    display: \"block\",\r\n    \"margin-left\": \"40%\",\r\n  },\r\n  alighnCenterItems: {\r\n    background: \"#f3f2f2\",\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    right: \"0px\",\r\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  centerSection: {\r\n    marginTop: \"12%\",\r\n  },\r\n};\r\nconst VehicleInformation = (props) => {\r\n  const searchBox = styles.search;\r\n  const placeholder = \"Enter VIN\";\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const accountInformation = props.accountInformation;\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //      //need to filter search data based on the backend data\r\n  //   });\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n    let value = e?.target?.value;\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.alighnCenterItems}>\r\n      <div style={styles.centerSection}>\r\n        <img\r\n          src=\"car.png\"\r\n          width=\"371px\"\r\n          height=\"160px\"\r\n          style={styles.imageContainer1}\r\n        ></img>\r\n      </div>\r\n      <div style={{ marginLeft: \"40%\" }}>\r\n        <div style={styles.searchLabel}>Search Vehicles</div>\r\n        <Search\r\n          searchBox={searchBox}\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n      </div>\r\n      {validSearch && (\r\n        <div style={styles.container}>\r\n          <div style={styles.VehicleMakeModel}>\r\n            {\" \"}\r\n            Vehicle Make & Model Name | Year{\" \"}\r\n          </div>\r\n          <div style={styles.line}></div>\r\n          <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n            <div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Maturity Date </div>{\" \"}\r\n                <div style={styles.value}> 00/00/0000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name</div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Name </div>{\" \"}\r\n                <div style={styles.value}> Lease Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Number </div>{\" \"}\r\n                <div style={styles.value}> 00000000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Ream Payments </div>{\" \"}\r\n                <div style={styles.value}> $000.00 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Color </div>{\" \"}\r\n                <div style={styles.value}> Color Name </div>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.imagebox}>\r\n              <img />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!validSearch && !suggestions && (\r\n        <div style={styles.noMatchesFrame}>\r\n          <div style={styles.noMatches}>No Matches Available</div>\r\n        </div>\r\n      )}\r\n      {suggestions && (\r\n        <div style={styles.searchSuggestionFrame}>\r\n          {searchSuggestions.map((name, index) => (\r\n            <div\r\n              key={index}\r\n              style={styles.searchSuggestion}\r\n              onClick={() => setSearchData(index)}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default VehicleInformation;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js",["370","371","372","373"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\TransactionModal.js",["374","375","376"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport confirmmark from \"../assets/images/confirm.svg\";\r\nimport Checkmark from \"../assets/images/success.svg\";\r\nimport Crossmark from \"../assets/images/failure.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    width: 400,\r\n    //   padding: theme.spacing(2, 4, 3),\r\n    borderRadius: 5,\r\n  },\r\n  btntext: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n  redText: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nfunction TransactionModal(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.open}>\r\n          <div className={classes.paper}>\r\n            <Box\r\n              display=\"flex\"\r\n              borderBottom={1}\r\n              borderColor={\"grey.500\"}\r\n              id=\"transition-modal-title\"\r\n              alignItems={\"center\"}\r\n            >\r\n              <Box\r\n                borderRight={1}\r\n                borderColor={\"grey.500\"}\r\n                width={70}\r\n                textAlign={\"center\"}\r\n              >\r\n                {props.type === \"confirm\" ? (\r\n                  <img src={confirmmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <img src={Checkmark} width=\"50px\" />\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <img src={Crossmark} width=\"50px\" />\r\n                ) : null}\r\n              </Box>\r\n              <Box width={330} py={1} px={2}>\r\n                {props.type === \"confirm\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Confirm Purchase </Box>\r\n                    <small> Verify your purchase details </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"success\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Success! </Box>\r\n                    <small> Vehical purchased </small>\r\n                  </Box>\r\n                ) : null}\r\n                {props.type === \"failed\" ? (\r\n                  <Box>\r\n                    <Box component={\"h2\"}> Transaction Failed </Box>\r\n                    <small className={classes.redText}>\r\n                      {\" \"}\r\n                      Unable to complete payment, Please try again{\" \"}\r\n                    </small>\r\n                  </Box>\r\n                ) : null}\r\n              </Box>\r\n            </Box>\r\n            <Box p={2} id=\"transition-modal-description\">\r\n              <Box component={\"h4\"}>\r\n                2019 Mazda Mazda6 Grand Touring, Machine Gray Metallic\r\n              </Box>\r\n              <small> VIN 000000000000</small>\r\n              <Box p={2} my={2} borderRadius={5} bgcolor={\"#e6e6e6\"}>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    Payoff\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\r\n                </Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box color={\"#000000\"} fontWeight={500}>\r\n                    Admin Fee\r\n                  </Box>\r\n                  <Box color={\"#5e5e5e\"}>$00.000.00</Box>\r\n                </Box>\r\n                <Box borderBottom={1} borderColor={\"error.main\"} my={1}></Box>\r\n                <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                  <Box fontWeight={\"fontWeightBold\"}>Total</Box>\r\n                  <Box fontWeight={\"fontWeightBold\"}>$00.000.00</Box>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display={\"flex\"} justifyContent={\"space-between\"} px={1}>\r\n                <Box fontWeight={500}>Bank Account</Box>\r\n                <Box fontWeight={500}>City(...00000)</Box>\r\n              </Box>\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box\r\n                  display={\"flex\"}\r\n                  justifyContent={\"space-between\"}\r\n                  px={1}\r\n                  mt={1}\r\n                >\r\n                  <Box fontWeight={500}>Transaction Number</Box>\r\n                  {props.type === \"success\" ? (\r\n                    <Box fontWeight={500}>00000000000</Box>\r\n                  ) : null}\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box p={1} my={2} borderRadius={5} bgcolor={\"#faffbd\"}>\r\n                  <Box fontSize={12}>\r\n                    Purchanse transaction may be completed, but the funds will\r\n                    be pulled from your bank account in 2-3 days.\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type === \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box mr={2}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      className={classes.btntext}\r\n                      onClick={props.onClose}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n\r\n              {props.type !== \"confirm\" ? (\r\n                <Box display={\"flex\"} justifyContent={\"end\"} pt={3}>\r\n                  <Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.btntext}\r\n                    >\r\n                      Continue\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : null}\r\n            </Box>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionModal;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js",["377","378","379","380","381","382","383"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Box, Select } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"96%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\nexport default function PurchasedPricingSideBar(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n\r\n  const [accountName, setAccountName] = React.useState(\"\");\r\n\r\n  const handleChangeAccountName = (event) => {\r\n    setAccountName(event.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Purchase Page</ListItem>\r\n      <ListItem>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Vehicle pricing options</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"gender1\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"Payoff\" />\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value=\"2\"\r\n                control={<Radio />}\r\n                label=\"Residual + Remaining Payments\"\r\n              />\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"Market\" />\r\n            </Box>\r\n            <Box\r\n              px={2}\r\n              py={1}\r\n              mt={1}\r\n              boxShadow={\"0px 0px 4px lightgray\"}\r\n              borderRadius={4}\r\n            >\r\n              <FormControlLabel\r\n                value=\"4\"\r\n                control={<Radio />}\r\n                label=\"Market + Remaining Payments \"\r\n              />\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Admin. Fee:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">Total Fee:</ListItemText>\r\n        <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box>Account Nick Name</Box>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            {/* <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel> */}\r\n            <Select\r\n              style={{ lineHeight: \"2.1em\" }}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={accountName}\r\n              onChange={handleChangeAccountName}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value={10}>CITI</MenuItem>\r\n              <MenuItem value={20}>BOFA</MenuItem>\r\n              <MenuItem value={30}>CHASE</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText className=\"manualPricing\">\r\n          <Box px={1} mb={2}>\r\n            <Box color={\"gray\"}>Dealers bank account number </Box>\r\n            <Box color={\"black\"} p={1} bgcolor={\"lightgray\"} borderRadius={4}>\r\n              .../0000\r\n            </Box>\r\n          </Box>\r\n        </ListItemText>\r\n      </ListItem>\r\n\r\n      <List className=\"purchasePassBtn\">\r\n        <Button className=\"passButton\" color=\"primary\">\r\n          Pass on Vehicle\r\n        </Button>\r\n        <Button\r\n          disabled={!accountName || !value}\r\n          className=\"purchaseButton\"\r\n          color=\"secondary\"\r\n          onClick={props.onPurchaseVehical}\r\n        >\r\n          Purchase Vehicle\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js",["384","385","386","387"],"import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CustomizedInputBase from './CustomisedInput';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\nimport SearchText from './SearchText/Search';\r\nconst AdminVehicleSearch = (props) => {\r\n\r\n  console.log(\"searchdetails\",props);\r\n\r\n  return (\r\n    <Card className=\"adminSearchCard\">\r\n     \r\n      <CardContent className=\"adminSearcheader\">\r\n      <img\r\n        className=\"cover\"\r\n        src=\"searchCar.jpeg\"\r\n      />\r\n       <div className=\"adminSearcheaderColor\">\r\n     <Typography variant=\"h4\" component=\"h4\">\r\n          Vehicle Search\r\n        </Typography>\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Search for a vehicle, or start with any of the menu items on the left.\r\n        </Typography>\r\n     </div>\r\n      \r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent className=\"adminSearchCardBody\">\r\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\r\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  )\r\n}\r\nexport default AdminVehicleSearch;","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js",["388","389","390","391"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js",["392","393","394","395","396","397","398","399"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js",["400"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehiclePLV\">\r\n      <p>\r\n        Dealer is responsible for paying off the vehicle and customer will not\r\n        recieve any lease-end charges.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js",["401"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehicleMFS\">\r\n      <p>\r\n        By grounding this vehicle, dealer will have multiple purchase options\r\n        and customer will be invoiced asa lease return.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js",["402","403","404","405","406","407","408","409"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function ManualPricingSideBar() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"EntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"reEntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Search\\Search.js",["410","411","412","413"],"import React, { useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst Search = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div style={serachBoxEntire}>\r\n      {showSearchLeft && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n      <input\r\n        value={props?.searchValue}\r\n        className=\"searchInput\"\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n        placeholder={placeholder}\r\n      />\r\n      {showSearchRight && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SearchText\\Search.js",["414","415","416","417","418","419","420"],"import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst SearchText = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        value={props?.searchValue}\r\n        maxlength=\"18\"\r\n        className=\"searchInput\"\r\n        fullWidth\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <CloseIcon />\r\n      </IconButton>\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchText;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\service\\api.js",["421","422","423","424","425"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\PassOnVehicle.js",["426","427","428","429","430","431"],"import React, { useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { postDealerActionPassOnVehicle } from \"../service/api\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function PassOnVehicle(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [noCall, setnoCall] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.close();\r\n  };\r\n\r\n  const handleProceed = () => {\r\n    setOpen(false);\r\n    // setnoCall(true);\r\n    getPassOnDetails();\r\n    props.close();\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     getPassOnDetails();\r\n  // }, [noCall]);\r\n\r\n  async function getPassOnDetails() {\r\n    let apiResponse = await postDealerActionPassOnVehicle(props.vin);\r\n    props.reload();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n        open={props.open}\r\n      >\r\n        <DialogTitle\r\n          className=\"viewReportHeader\"\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Pass On vehicle\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <Grid container>\r\n            <Grid xs={12}>\r\n              <div className=\"viewReportCenter\">You have passed on Vehicle</div>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions className=\"reportFooter\">\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleProceed}\r\n            className=\"closePassBtn\"\r\n            color=\"secondary\"\r\n          >\r\n            Proceed\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js",["432","433","434","435","436","437","438","439","440","441","442"],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js",["443","444","445","446"],"import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Block from '@material-ui/icons/Block';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: 'calc(-50% + 16px)',\r\n      right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: '#eaeaf0',\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: '#eaeaf0',\r\n      display: 'flex',\r\n      height: 22,\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      color: '#0091ff',\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: '50%',\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n      //color: '#0091ff',\r\n      color: '#c23934',\r\n      zIndex: 1,\r\n      fontSize: 22,\r\n    },\r\n  });\r\n  \r\n  function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? <Block className={classes.completed} />: <RadioButtonCheckedIcon />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\nfunction getSteps() {\r\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\r\n}\r\n\r\nexport default function VerticalVehicleStepper() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(2);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {steps.map((label, index) => {\r\n\r\n                    \r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                        </Step>\r\n                    )\r\n                }\r\n\r\n                )}\r\n            </Stepper>\r\n            {activeStep === steps.length && (\r\n                <Paper square elevation={0} className={classes.resetContainer}>\r\n                    <Typography>All steps completed - you&apos;re finished</Typography>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                        Reset\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\CustomisedInput.js",["447","448","449"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 550,\r\n        marginRight: '50px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n    console.log(\"searchtext : \",searchtext)\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n        props.searchdetails(searchtext)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search Vehicle By VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => handleSearchText(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Pagination.js",["450","451","452","453","454"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Paginator(props) {\r\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\r\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\r\n  const [totalData, setTotalData] = useState(data);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [skipRecords, setSkipRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNoOfPages(Math.ceil(totalData.length / pageCount));\r\n    onChangePage(totalData.slice(skipRecords, pageCount));\r\n  }, [pageCount]);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    event.preventDefault();\r\n    event.target && event.target.value && setPageCount(event.target.value);\r\n  };\r\n\r\n  const onChangePageNumber = (event, page) => {\r\n    event.preventDefault();\r\n    let skip = (page - 1) * pageCount;\r\n    setSkipRecords(skip);\r\n    onChangePage(totalData.slice(skip, skip + pageCount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        className=\"custompagination\"\r\n      >\r\n        <Box pr={2}> {label} </Box>\r\n        <Box pr={2}>\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"demo-customized-select-label\"\r\n              id=\"demo-customized-select\"\r\n              value={pageCount}\r\n              onChange={handleChangePageCount}\r\n              input={<BootstrapInput />}\r\n            >\r\n              {pages &&\r\n                pages.map((menuitem, index) => (\r\n                  <MenuItem key={index} value={menuitem}>\r\n                    {\" \"}\r\n                    {menuitem}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Pagination\r\n          count={noOfPages}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={onChangePageNumber}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginator;\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js",["455","456","457","458","459"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterMileage() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilter.js",["460","461","462","463","464"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilter(props) {\r\n  const {\r\n    fetchDataBasedOnSearchValue,\r\n    fetchDataBasedOnFilters,\r\n    resetFilterList,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"CX-5\", text: \"CX-5\" },\r\n    { value: \"MX-5\", text: \"MX-5\" },\r\n    { value: \"Mazda3\", text: \"Mazda3\" },\r\n    { value: \"Mazda6\", text: \"Mazda6\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"Pending\", text: \"Pending\" },\r\n    { value: \"Completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"Texas\", text: \"Texas\" },\r\n    { value: \"Florida\", text: \"Florida\" },\r\n    { value: \"Indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const resetFilterInput = () => {\r\n    setFilterInput({\r\n      vin: \"\",\r\n      yearFrom: \"\",\r\n      yearTo: \"\",\r\n      make: \"\",\r\n      inspectionStatus: \"\",\r\n      inspectionDateFrom: \"\",\r\n      inspectionDateTo: \"\",\r\n      groundingRegion: \"\",\r\n      auctionCode: \"\",\r\n    });\r\n    resetFilterList();\r\n    setState({ ...state, [\"right\"]: false });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button\r\n          autoFocus\r\n          className={classes.cancelButton}\r\n          color=\"primary\"\r\n          onClick={() => resetFilterInput()}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={() => fetchDataBasedOnFilters(filterInput)}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          value={searchtext || \"\"}\r\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js",["465","466","467","468","469"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterRRM() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\NotesSection.js",["470","471","472","473"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\nexport default function NotesSection() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    return (\r\n        <div className=\"notesSection\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                NotesSection\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"notesText\">\r\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                </div>\r\n\r\n            </ListItem>\r\n            <ListItem >\r\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\r\n                    Save\r\n                </Button>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\Tabs.js",["474","475"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\r\nimport StatusHistory from './StatusHistory';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                   {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function VehicleSearchTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const{inspectiondata}=props;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className='topBarAdmin'>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" style={{marginLeft:\"35%\"}}>\r\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\r\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\r\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <div className='adminTabsSection'><StatusHistory /></div>\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <div className='adminTabsSection'>Update Mileage/price</div>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\components\\StatusHistory.js",[],"C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js",["476","477","478","479","480","481"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { getInspectionVehicleDetails } from \"../service/api\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AdminDetailedReport(props) {\r\n  let groundingDetails = {\r\n    \"Account Number\": \"00000000000\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Customer Return Date\": \"00/00/2021\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Grounding Dealer Number\": \"00000000000\",\r\n    \"Grounding Dealer Name\": \"Dealer Name\",\r\n    \"Grounding Date\": \"00/00/2021\",\r\n    \"Grounding Mileage\": \"000,000 mi\",\r\n    \"Transportation Order Date\": \"00/00/2021\",\r\n    \"Transportation Company\": \"Company Name\",\r\n    \"Bankruptcy Code\": \"Detail\",\r\n    \"Term Code\": \"Detail\",\r\n    \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\r\n    Type: \"Detail\",\r\n    Residual: \"$00,000.00\",\r\n    \"Current Payoff Amount\": \"$00,000.00\",\r\n    \"Grounding Dealer Auction\": \"Detail\",\r\n    \"Total Outstanding Remaining Payments\": \"00\",\r\n    \"Guaranteed Payments\": \"$00,000.00\",\r\n    \"Payment Guarantee\": \"Yes/No\",\r\n    \"10-Day Rule No Charge Amount\": \"$00,000.00\",\r\n    \"Payoff at Grounding\": \"?????\",\r\n    \"Market Based Price\": \"$00,000.00\",\r\n    \"Remaining Payments at Grounding\": \"$00,000.00\",\r\n  };\r\n  let inspectionDetails = {\r\n    \"Inspection Scheduled Date\": `${moment(\r\n      props?.inspectiondata?.inspection_date\r\n    ).format(\"MM/DD/YYYY\")}`,\r\n    \"Inspection Date\": \"00/00/2021\",\r\n    \"Inspection Status\": \"Detail\",\r\n    \"Inspection Mileage\": \"000,000 mi\",\r\n    \"Master Keys Returned\": \"00\",\r\n    \"Value Keys Returned\": \"00\",\r\n    \"Inspection Type\": \"Detail\",\r\n    \"Excess Wear & Tear Amount\": \"$00,000.00\",\r\n  };\r\n\r\n  let purchaseDetails = {\r\n    \"Sold Date\": \"00/00/2021\",\r\n    \"Purchasing Dealer\": \"Dealer Name\",\r\n    \"Purchase Dealer Number\": \"00000000000\",\r\n    \"Purchase Type\": \"Detail\",\r\n    \"Gross Purchase Amount\": \"$00,000.00\",\r\n    \"Purchasing Dealer Legal Name\": \"Detail\",\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = useState({});\r\n  const [vin, setvin] = useState(\"JM3KFBDM0K1698372\");\r\n\r\n  console.log(\"admndetailedreport props:\", props);\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <div className=\"conditionPageCard\">\r\n      <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n        <Grid item xs={5}>\r\n          <MyGallery />\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <div className=\"ConditionReportSection\">\r\n            <div className=\"reportTitle\">\r\n              <span>Year Make Model Color</span>\r\n            </div>\r\n            <span className=\"ConditionReportInspection\">\r\n              <span className=\"BadgeValue\">Inspection Complete</span>\r\n            </span>\r\n          </div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Card className=\"vehicleSectionCR\">\r\n              <Typography variant=\"h6\">Grounding Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(groundingDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n\r\n              <Typography variant=\"h6\">Inspection Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(inspectionDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <Typography variant=\"h6\">Purchase Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(purchaseDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <div className=\"disclaimerVRS\">\r\n                Disclaimer: The parts, equipment, accessories, and other\r\n                information listed above are based on equipment/configuration at\r\n                the time vehicle was sold by Mazda Motor Corporation to a dealer\r\n                and does not mean that this vehicle is still so equipped.\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\nageswv\\Desktop\\ASP\\ASP\\src\\pages\\Login2.js",["482","483","484"],{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","severity":1,"message":"490","line":10,"column":10,"nodeType":"491","messageId":"492","endLine":10,"endColumn":18},{"ruleId":"489","severity":1,"message":"493","line":10,"column":20,"nodeType":"491","messageId":"492","endLine":10,"endColumn":29},{"ruleId":"489","severity":1,"message":"494","line":10,"column":43,"nodeType":"491","messageId":"492","endLine":10,"endColumn":52},{"ruleId":"495","severity":1,"message":"496","line":43,"column":19,"nodeType":"497","messageId":"498","endLine":43,"endColumn":24},{"ruleId":"489","severity":1,"message":"499","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":15},{"ruleId":"489","severity":1,"message":"500","line":7,"column":8,"nodeType":"491","messageId":"492","endLine":7,"endColumn":18},{"ruleId":"489","severity":1,"message":"501","line":53,"column":9,"nodeType":"491","messageId":"492","endLine":53,"endColumn":16},{"ruleId":"502","severity":1,"message":"503","line":65,"column":6,"nodeType":"504","endLine":65,"endColumn":61,"suggestions":"505"},{"ruleId":"502","severity":1,"message":"506","line":65,"column":7,"nodeType":"507","endLine":65,"endColumn":60},{"ruleId":"508","severity":1,"message":"509","line":80,"column":5,"nodeType":"510","messageId":"511","endLine":80,"endColumn":19},{"ruleId":"489","severity":1,"message":"512","line":96,"column":9,"nodeType":"491","messageId":"492","endLine":96,"endColumn":14},{"ruleId":"489","severity":1,"message":"513","line":2,"column":8,"nodeType":"491","messageId":"492","endLine":2,"endColumn":14},{"ruleId":"489","severity":1,"message":"514","line":6,"column":5,"nodeType":"491","messageId":"492","endLine":6,"endColumn":11},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"516","line":23,"column":3,"nodeType":"491","messageId":"492","endLine":23,"endColumn":17},{"ruleId":"489","severity":1,"message":"517","line":39,"column":7,"nodeType":"491","messageId":"492","endLine":39,"endColumn":17},{"ruleId":"489","severity":1,"message":"518","line":55,"column":7,"nodeType":"491","messageId":"492","endLine":55,"endColumn":26},{"ruleId":"489","severity":1,"message":"519","line":60,"column":15,"nodeType":"491","messageId":"492","endLine":60,"endColumn":21},{"ruleId":"489","severity":1,"message":"520","line":61,"column":27,"nodeType":"491","messageId":"492","endLine":61,"endColumn":45},{"ruleId":"489","severity":1,"message":"521","line":65,"column":10,"nodeType":"491","messageId":"492","endLine":65,"endColumn":25},{"ruleId":"489","severity":1,"message":"522","line":68,"column":10,"nodeType":"491","messageId":"492","endLine":68,"endColumn":29},{"ruleId":"489","severity":1,"message":"523","line":69,"column":26,"nodeType":"491","messageId":"492","endLine":69,"endColumn":43},{"ruleId":"502","severity":1,"message":"524","line":82,"column":6,"nodeType":"504","endLine":82,"endColumn":11,"suggestions":"525"},{"ruleId":"502","severity":1,"message":"526","line":106,"column":6,"nodeType":"504","endLine":106,"endColumn":20,"suggestions":"527"},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"502","severity":1,"message":"506","line":19,"column":7,"nodeType":"528","endLine":19,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":19,"column":24,"nodeType":"528","messageId":"511","endLine":19,"endColumn":26},{"ruleId":"489","severity":1,"message":"531","line":39,"column":9,"nodeType":"491","messageId":"492","endLine":39,"endColumn":28},{"ruleId":"489","severity":1,"message":"532","line":33,"column":8,"nodeType":"491","messageId":"492","endLine":33,"endColumn":24},{"ruleId":"489","severity":1,"message":"517","line":36,"column":7,"nodeType":"491","messageId":"492","endLine":36,"endColumn":17},{"ruleId":"489","severity":1,"message":"518","line":51,"column":7,"nodeType":"491","messageId":"492","endLine":51,"endColumn":26},{"ruleId":"489","severity":1,"message":"519","line":56,"column":15,"nodeType":"491","messageId":"492","endLine":56,"endColumn":21},{"ruleId":"489","severity":1,"message":"533","line":57,"column":20,"nodeType":"491","messageId":"492","endLine":57,"endColumn":31},{"ruleId":"489","severity":1,"message":"534","line":62,"column":10,"nodeType":"491","messageId":"492","endLine":62,"endColumn":15},{"ruleId":"489","severity":1,"message":"535","line":62,"column":17,"nodeType":"491","messageId":"492","endLine":62,"endColumn":25},{"ruleId":"489","severity":1,"message":"522","line":64,"column":10,"nodeType":"491","messageId":"492","endLine":64,"endColumn":29},{"ruleId":"502","severity":1,"message":"524","line":72,"column":6,"nodeType":"504","endLine":72,"endColumn":11,"suggestions":"536"},{"ruleId":"502","severity":1,"message":"526","line":81,"column":6,"nodeType":"504","endLine":81,"endColumn":8,"suggestions":"537"},{"ruleId":"502","severity":1,"message":"538","line":31,"column":3,"nodeType":"491","endLine":31,"endColumn":12,"suggestions":"539"},{"ruleId":"529","severity":1,"message":"530","line":58,"column":21,"nodeType":"528","messageId":"511","endLine":58,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":60,"column":33,"nodeType":"528","messageId":"511","endLine":60,"endColumn":35},{"ruleId":"529","severity":1,"message":"530","line":61,"column":27,"nodeType":"528","messageId":"511","endLine":61,"endColumn":29},{"ruleId":"489","severity":1,"message":"540","line":74,"column":9,"nodeType":"491","messageId":"492","endLine":74,"endColumn":22},{"ruleId":"489","severity":1,"message":"541","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":15},{"ruleId":"489","severity":1,"message":"542","line":7,"column":8,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"543","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":22},{"ruleId":"489","severity":1,"message":"544","line":36,"column":12,"nodeType":"491","messageId":"492","endLine":36,"endColumn":22},{"ruleId":"489","severity":1,"message":"545","line":38,"column":11,"nodeType":"491","messageId":"492","endLine":38,"endColumn":27},{"ruleId":"489","severity":1,"message":"546","line":66,"column":7,"nodeType":"491","messageId":"492","endLine":66,"endColumn":11},{"ruleId":"489","severity":1,"message":"547","line":1007,"column":10,"nodeType":"491","messageId":"492","endLine":1007,"endColumn":14},{"ruleId":"489","severity":1,"message":"548","line":1007,"column":16,"nodeType":"491","messageId":"492","endLine":1007,"endColumn":23},{"ruleId":"489","severity":1,"message":"549","line":1008,"column":10,"nodeType":"491","messageId":"492","endLine":1008,"endColumn":21},{"ruleId":"489","severity":1,"message":"550","line":1008,"column":23,"nodeType":"491","messageId":"492","endLine":1008,"endColumn":37},{"ruleId":"551","severity":1,"message":"552","line":1067,"column":23,"nodeType":"553","endLine":1067,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1079,"column":23,"nodeType":"553","endLine":1079,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1091,"column":23,"nodeType":"553","endLine":1091,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1103,"column":23,"nodeType":"553","endLine":1103,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1115,"column":23,"nodeType":"553","endLine":1115,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1127,"column":23,"nodeType":"553","endLine":1127,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1139,"column":23,"nodeType":"553","endLine":1139,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1151,"column":23,"nodeType":"553","endLine":1151,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1163,"column":23,"nodeType":"553","endLine":1163,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":1175,"column":23,"nodeType":"553","endLine":1175,"endColumn":71},{"ruleId":"554","severity":1,"message":"555","line":1191,"column":23,"nodeType":"553","endLine":1194,"endColumn":24},{"ruleId":"529","severity":1,"message":"556","line":1227,"column":28,"nodeType":"528","messageId":"511","endLine":1227,"endColumn":30},{"ruleId":"489","severity":1,"message":"547","line":693,"column":10,"nodeType":"491","messageId":"492","endLine":693,"endColumn":14},{"ruleId":"489","severity":1,"message":"549","line":694,"column":10,"nodeType":"491","messageId":"492","endLine":694,"endColumn":21},{"ruleId":"489","severity":1,"message":"550","line":694,"column":23,"nodeType":"491","messageId":"492","endLine":694,"endColumn":37},{"ruleId":"489","severity":1,"message":"557","line":695,"column":10,"nodeType":"491","messageId":"492","endLine":695,"endColumn":21},{"ruleId":"489","severity":1,"message":"558","line":696,"column":10,"nodeType":"491","messageId":"492","endLine":696,"endColumn":19},{"ruleId":"489","severity":1,"message":"559","line":721,"column":9,"nodeType":"491","messageId":"492","endLine":721,"endColumn":30},{"ruleId":"489","severity":1,"message":"560","line":724,"column":9,"nodeType":"491","messageId":"492","endLine":724,"endColumn":25},{"ruleId":"551","severity":1,"message":"552","line":826,"column":23,"nodeType":"553","endLine":826,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":838,"column":23,"nodeType":"553","endLine":838,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":850,"column":23,"nodeType":"553","endLine":850,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":862,"column":23,"nodeType":"553","endLine":862,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":874,"column":23,"nodeType":"553","endLine":874,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":886,"column":23,"nodeType":"553","endLine":886,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":898,"column":23,"nodeType":"553","endLine":898,"endColumn":71},{"ruleId":"551","severity":1,"message":"552","line":910,"column":23,"nodeType":"553","endLine":910,"endColumn":71},{"ruleId":"554","severity":1,"message":"555","line":923,"column":23,"nodeType":"553","endLine":926,"endColumn":24},{"ruleId":"529","severity":1,"message":"556","line":944,"column":39,"nodeType":"528","messageId":"511","endLine":944,"endColumn":41},{"ruleId":"489","severity":1,"message":"561","line":541,"column":7,"nodeType":"491","messageId":"492","endLine":541,"endColumn":21},{"ruleId":"489","severity":1,"message":"547","line":579,"column":10,"nodeType":"491","messageId":"492","endLine":579,"endColumn":14},{"ruleId":"489","severity":1,"message":"548","line":579,"column":16,"nodeType":"491","messageId":"492","endLine":579,"endColumn":23},{"ruleId":"489","severity":1,"message":"549","line":580,"column":10,"nodeType":"491","messageId":"492","endLine":580,"endColumn":21},{"ruleId":"489","severity":1,"message":"550","line":580,"column":23,"nodeType":"491","messageId":"492","endLine":580,"endColumn":37},{"ruleId":"489","severity":1,"message":"558","line":581,"column":10,"nodeType":"491","messageId":"492","endLine":581,"endColumn":19},{"ruleId":"489","severity":1,"message":"559","line":593,"column":9,"nodeType":"491","messageId":"492","endLine":593,"endColumn":30},{"ruleId":"551","severity":1,"message":"552","line":620,"column":21,"nodeType":"553","endLine":620,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":632,"column":21,"nodeType":"553","endLine":632,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":644,"column":21,"nodeType":"553","endLine":644,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":656,"column":21,"nodeType":"553","endLine":656,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":668,"column":21,"nodeType":"553","endLine":668,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":680,"column":21,"nodeType":"553","endLine":680,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":692,"column":21,"nodeType":"553","endLine":692,"endColumn":69},{"ruleId":"551","severity":1,"message":"552","line":704,"column":21,"nodeType":"553","endLine":704,"endColumn":69},{"ruleId":"554","severity":1,"message":"555","line":717,"column":21,"nodeType":"553","endLine":720,"endColumn":22},{"ruleId":"529","severity":1,"message":"556","line":737,"column":28,"nodeType":"528","messageId":"511","endLine":737,"endColumn":30},{"ruleId":"489","severity":1,"message":"562","line":6,"column":8,"nodeType":"491","messageId":"492","endLine":6,"endColumn":20},{"ruleId":"489","severity":1,"message":"563","line":84,"column":10,"nodeType":"491","messageId":"492","endLine":84,"endColumn":14},{"ruleId":"489","severity":1,"message":"564","line":84,"column":16,"nodeType":"491","messageId":"492","endLine":84,"endColumn":23},{"ruleId":"502","severity":1,"message":"565","line":88,"column":13,"nodeType":"566","endLine":116,"endColumn":4},{"ruleId":"567","severity":1,"message":"568","line":97,"column":29,"nodeType":"566","messageId":"569","endLine":97,"endColumn":31},{"ruleId":"567","severity":1,"message":"568","line":98,"column":31,"nodeType":"566","messageId":"569","endLine":98,"endColumn":33},{"ruleId":"529","severity":1,"message":"530","line":99,"column":25,"nodeType":"528","messageId":"511","endLine":99,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":103,"column":24,"nodeType":"528","messageId":"511","endLine":103,"endColumn":26},{"ruleId":"529","severity":1,"message":"530","line":106,"column":24,"nodeType":"528","messageId":"511","endLine":106,"endColumn":26},{"ruleId":"529","severity":1,"message":"530","line":109,"column":24,"nodeType":"528","messageId":"511","endLine":109,"endColumn":26},{"ruleId":"502","severity":1,"message":"570","line":116,"column":6,"nodeType":"504","endLine":116,"endColumn":25,"suggestions":"571"},{"ruleId":"529","severity":1,"message":"530","line":162,"column":35,"nodeType":"528","messageId":"511","endLine":162,"endColumn":37},{"ruleId":"489","severity":1,"message":"572","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":19},{"ruleId":"489","severity":1,"message":"573","line":5,"column":7,"nodeType":"491","messageId":"492","endLine":5,"endColumn":18},{"ruleId":"489","severity":1,"message":"574","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":14},{"ruleId":"489","severity":1,"message":"575","line":6,"column":8,"nodeType":"491","messageId":"492","endLine":6,"endColumn":22},{"ruleId":"489","severity":1,"message":"576","line":12,"column":3,"nodeType":"491","messageId":"492","endLine":12,"endColumn":25},{"ruleId":"489","severity":1,"message":"577","line":13,"column":3,"nodeType":"491","messageId":"492","endLine":13,"endColumn":14},{"ruleId":"489","severity":1,"message":"535","line":81,"column":17,"nodeType":"491","messageId":"492","endLine":81,"endColumn":25},{"ruleId":"489","severity":1,"message":"578","line":83,"column":10,"nodeType":"491","messageId":"492","endLine":83,"endColumn":18},{"ruleId":"489","severity":1,"message":"579","line":83,"column":20,"nodeType":"491","messageId":"492","endLine":83,"endColumn":31},{"ruleId":"489","severity":1,"message":"580","line":84,"column":10,"nodeType":"491","messageId":"492","endLine":84,"endColumn":14},{"ruleId":"502","severity":1,"message":"581","line":101,"column":6,"nodeType":"504","endLine":101,"endColumn":13,"suggestions":"582"},{"ruleId":"567","severity":1,"message":"568","line":120,"column":49,"nodeType":"566","messageId":"569","endLine":120,"endColumn":51},{"ruleId":"489","severity":1,"message":"583","line":173,"column":11,"nodeType":"491","messageId":"492","endLine":173,"endColumn":13},{"ruleId":"489","severity":1,"message":"584","line":184,"column":9,"nodeType":"491","messageId":"492","endLine":184,"endColumn":34},{"ruleId":"489","severity":1,"message":"585","line":188,"column":11,"nodeType":"491","messageId":"492","endLine":188,"endColumn":19},{"ruleId":"554","severity":1,"message":"555","line":234,"column":25,"nodeType":"553","endLine":241,"endColumn":26},{"ruleId":"551","severity":1,"message":"552","line":383,"column":11,"nodeType":"553","endLine":383,"endColumn":65},{"ruleId":"508","severity":1,"message":"586","line":60,"column":5,"nodeType":"510","messageId":"511","endLine":60,"endColumn":18},{"ruleId":"489","severity":1,"message":"587","line":157,"column":9,"nodeType":"491","messageId":"492","endLine":157,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":177,"column":21,"nodeType":"528","messageId":"511","endLine":177,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":179,"column":33,"nodeType":"528","messageId":"511","endLine":179,"endColumn":35},{"ruleId":"529","severity":1,"message":"530","line":180,"column":27,"nodeType":"528","messageId":"511","endLine":180,"endColumn":29},{"ruleId":"551","severity":1,"message":"552","line":202,"column":9,"nodeType":"553","endLine":207,"endColumn":10},{"ruleId":"551","severity":1,"message":"552","line":267,"column":15,"nodeType":"553","endLine":267,"endColumn":22},{"ruleId":"489","severity":1,"message":"588","line":65,"column":5,"nodeType":"491","messageId":"492","endLine":65,"endColumn":16},{"ruleId":"489","severity":1,"message":"563","line":111,"column":12,"nodeType":"491","messageId":"492","endLine":111,"endColumn":16},{"ruleId":"489","severity":1,"message":"518","line":112,"column":9,"nodeType":"491","messageId":"492","endLine":112,"endColumn":28},{"ruleId":"489","severity":1,"message":"589","line":113,"column":11,"nodeType":"491","messageId":"492","endLine":113,"endColumn":26},{"ruleId":"551","severity":1,"message":"552","line":66,"column":19,"nodeType":"553","endLine":66,"endColumn":57},{"ruleId":"551","severity":1,"message":"552","line":69,"column":19,"nodeType":"553","endLine":69,"endColumn":55},{"ruleId":"551","severity":1,"message":"552","line":72,"column":19,"nodeType":"553","endLine":72,"endColumn":55},{"ruleId":"489","severity":1,"message":"590","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":24},{"ruleId":"489","severity":1,"message":"591","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":18},{"ruleId":"489","severity":1,"message":"561","line":42,"column":7,"nodeType":"491","messageId":"492","endLine":42,"endColumn":21},{"ruleId":"489","severity":1,"message":"563","line":63,"column":10,"nodeType":"491","messageId":"492","endLine":63,"endColumn":14},{"ruleId":"489","severity":1,"message":"564","line":63,"column":16,"nodeType":"491","messageId":"492","endLine":63,"endColumn":23},{"ruleId":"489","severity":1,"message":"592","line":72,"column":9,"nodeType":"491","messageId":"492","endLine":72,"endColumn":20},{"ruleId":"489","severity":1,"message":"593","line":75,"column":9,"nodeType":"491","messageId":"492","endLine":75,"endColumn":23},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"594","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":17},{"ruleId":"489","severity":1,"message":"595","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":18},{"ruleId":"551","severity":1,"message":"552","line":18,"column":7,"nodeType":"553","endLine":21,"endColumn":9},{"ruleId":"489","severity":1,"message":"596","line":9,"column":5,"nodeType":"491","messageId":"492","endLine":9,"endColumn":9},{"ruleId":"489","severity":1,"message":"535","line":66,"column":17,"nodeType":"491","messageId":"492","endLine":66,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":109,"column":21,"nodeType":"553","endLine":113,"endColumn":30},{"ruleId":"551","severity":1,"message":"552","line":153,"column":3,"nodeType":"553","endLine":153,"endColumn":56},{"ruleId":"489","severity":1,"message":"597","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":14},{"ruleId":"489","severity":1,"message":"575","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":22},{"ruleId":"489","severity":1,"message":"576","line":9,"column":10,"nodeType":"491","messageId":"492","endLine":9,"endColumn":32},{"ruleId":"489","severity":1,"message":"598","line":9,"column":52,"nodeType":"491","messageId":"492","endLine":9,"endColumn":68},{"ruleId":"489","severity":1,"message":"596","line":10,"column":5,"nodeType":"491","messageId":"492","endLine":10,"endColumn":9},{"ruleId":"489","severity":1,"message":"535","line":79,"column":17,"nodeType":"491","messageId":"492","endLine":79,"endColumn":25},{"ruleId":"502","severity":1,"message":"599","line":84,"column":6,"nodeType":"504","endLine":84,"endColumn":13,"suggestions":"600"},{"ruleId":"551","severity":1,"message":"552","line":219,"column":3,"nodeType":"553","endLine":219,"endColumn":56},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"515","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"590","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":24},{"ruleId":"489","severity":1,"message":"601","line":11,"column":8,"nodeType":"491","messageId":"492","endLine":11,"endColumn":13},{"ruleId":"489","severity":1,"message":"602","line":12,"column":8,"nodeType":"491","messageId":"492","endLine":12,"endColumn":18},{"ruleId":"489","severity":1,"message":"603","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":18},{"ruleId":"489","severity":1,"message":"563","line":52,"column":10,"nodeType":"491","messageId":"492","endLine":52,"endColumn":14},{"ruleId":"489","severity":1,"message":"564","line":52,"column":16,"nodeType":"491","messageId":"492","endLine":52,"endColumn":23},{"ruleId":"489","severity":1,"message":"501","line":53,"column":9,"nodeType":"491","messageId":"492","endLine":53,"endColumn":16},{"ruleId":"489","severity":1,"message":"592","line":54,"column":9,"nodeType":"491","messageId":"492","endLine":54,"endColumn":20},{"ruleId":"489","severity":1,"message":"604","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":25},{"ruleId":"489","severity":1,"message":"605","line":5,"column":10,"nodeType":"491","messageId":"492","endLine":5,"endColumn":16},{"ruleId":"489","severity":1,"message":"606","line":5,"column":18,"nodeType":"491","messageId":"492","endLine":5,"endColumn":27},{"ruleId":"489","severity":1,"message":"607","line":6,"column":25,"nodeType":"491","messageId":"492","endLine":6,"endColumn":41},{"ruleId":"489","severity":1,"message":"605","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"606","line":7,"column":18,"nodeType":"491","messageId":"492","endLine":7,"endColumn":27},{"ruleId":"489","severity":1,"message":"607","line":8,"column":25,"nodeType":"491","messageId":"492","endLine":8,"endColumn":41},{"ruleId":"489","severity":1,"message":"608","line":10,"column":9,"nodeType":"491","messageId":"492","endLine":10,"endColumn":24},{"ruleId":"489","severity":1,"message":"609","line":11,"column":9,"nodeType":"491","messageId":"492","endLine":11,"endColumn":23},{"ruleId":"489","severity":1,"message":"610","line":12,"column":9,"nodeType":"491","messageId":"492","endLine":12,"endColumn":24},{"ruleId":"489","severity":1,"message":"611","line":13,"column":9,"nodeType":"491","messageId":"492","endLine":13,"endColumn":24},{"ruleId":"489","severity":1,"message":"612","line":87,"column":3,"nodeType":"491","messageId":"492","endLine":87,"endColumn":14},{"ruleId":"489","severity":1,"message":"613","line":187,"column":3,"nodeType":"491","messageId":"492","endLine":187,"endColumn":18},{"ruleId":"489","severity":1,"message":"614","line":302,"column":9,"nodeType":"491","messageId":"492","endLine":302,"endColumn":16},{"ruleId":"489","severity":1,"message":"614","line":314,"column":9,"nodeType":"491","messageId":"492","endLine":314,"endColumn":16},{"ruleId":"489","severity":1,"message":"615","line":475,"column":7,"nodeType":"491","messageId":"492","endLine":475,"endColumn":9},{"ruleId":"489","severity":1,"message":"616","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":26},{"ruleId":"489","severity":1,"message":"563","line":59,"column":10,"nodeType":"491","messageId":"492","endLine":59,"endColumn":14},{"ruleId":"489","severity":1,"message":"617","line":60,"column":10,"nodeType":"491","messageId":"492","endLine":60,"endColumn":16},{"ruleId":"489","severity":1,"message":"618","line":60,"column":18,"nodeType":"491","messageId":"492","endLine":60,"endColumn":27},{"ruleId":"489","severity":1,"message":"589","line":61,"column":9,"nodeType":"491","messageId":"492","endLine":61,"endColumn":24},{"ruleId":"489","severity":1,"message":"619","line":81,"column":9,"nodeType":"491","messageId":"492","endLine":81,"endColumn":20},{"ruleId":"489","severity":1,"message":"515","line":1,"column":28,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"620","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":21},{"ruleId":"489","severity":1,"message":"621","line":4,"column":8,"nodeType":"491","messageId":"492","endLine":4,"endColumn":25},{"ruleId":"489","severity":1,"message":"622","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":26},{"ruleId":"489","severity":1,"message":"597","line":8,"column":17,"nodeType":"491","messageId":"492","endLine":8,"endColumn":23},{"ruleId":"489","severity":1,"message":"623","line":10,"column":10,"nodeType":"491","messageId":"492","endLine":10,"endColumn":22},{"ruleId":"489","severity":1,"message":"624","line":58,"column":10,"nodeType":"491","messageId":"492","endLine":58,"endColumn":20},{"ruleId":"489","severity":1,"message":"625","line":58,"column":22,"nodeType":"491","messageId":"492","endLine":58,"endColumn":35},{"ruleId":"489","severity":1,"message":"512","line":68,"column":9,"nodeType":"491","messageId":"492","endLine":68,"endColumn":14},{"ruleId":"489","severity":1,"message":"626","line":69,"column":9,"nodeType":"491","messageId":"492","endLine":69,"endColumn":17},{"ruleId":"502","severity":1,"message":"627","line":74,"column":6,"nodeType":"504","endLine":74,"endColumn":8,"suggestions":"628"},{"ruleId":"489","severity":1,"message":"629","line":11,"column":8,"nodeType":"491","messageId":"492","endLine":11,"endColumn":19},{"ruleId":"489","severity":1,"message":"630","line":30,"column":7,"nodeType":"491","messageId":"492","endLine":30,"endColumn":21},{"ruleId":"489","severity":1,"message":"631","line":111,"column":11,"nodeType":"491","messageId":"492","endLine":111,"endColumn":21},{"ruleId":"489","severity":1,"message":"632","line":115,"column":11,"nodeType":"491","messageId":"492","endLine":115,"endColumn":21},{"ruleId":"489","severity":1,"message":"541","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":15},{"ruleId":"489","severity":1,"message":"542","line":7,"column":8,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"543","line":9,"column":8,"nodeType":"491","messageId":"492","endLine":9,"endColumn":22},{"ruleId":"489","severity":1,"message":"633","line":2,"column":10,"nodeType":"491","messageId":"492","endLine":2,"endColumn":20},{"ruleId":"489","severity":1,"message":"591","line":3,"column":28,"nodeType":"491","messageId":"492","endLine":3,"endColumn":38},{"ruleId":"489","severity":1,"message":"500","line":3,"column":40,"nodeType":"491","messageId":"492","endLine":3,"endColumn":50},{"ruleId":"489","severity":1,"message":"634","line":47,"column":21,"nodeType":"491","messageId":"492","endLine":47,"endColumn":33},{"ruleId":"502","severity":1,"message":"635","line":54,"column":6,"nodeType":"504","endLine":54,"endColumn":17,"suggestions":"636"},{"ruleId":"489","severity":1,"message":"616","line":1,"column":27,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"637","line":173,"column":23,"nodeType":"491","messageId":"492","endLine":173,"endColumn":37},{"ruleId":"489","severity":1,"message":"638","line":178,"column":35,"nodeType":"491","messageId":"492","endLine":178,"endColumn":61},{"ruleId":"489","severity":1,"message":"639","line":182,"column":34,"nodeType":"491","messageId":"492","endLine":182,"endColumn":59},{"ruleId":"489","severity":1,"message":"544","line":187,"column":10,"nodeType":"491","messageId":"492","endLine":187,"endColumn":20},{"ruleId":"489","severity":1,"message":"616","line":1,"column":27,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"637","line":178,"column":23,"nodeType":"491","messageId":"492","endLine":178,"endColumn":37},{"ruleId":"489","severity":1,"message":"638","line":184,"column":35,"nodeType":"491","messageId":"492","endLine":184,"endColumn":61},{"ruleId":"489","severity":1,"message":"639","line":188,"column":34,"nodeType":"491","messageId":"492","endLine":188,"endColumn":59},{"ruleId":"640","severity":1,"message":"641","line":226,"column":26,"nodeType":"642","messageId":"643","endLine":226,"endColumn":42,"fix":"644"},{"ruleId":"489","severity":1,"message":"616","line":1,"column":27,"nodeType":"491","messageId":"492","endLine":1,"endColumn":36},{"ruleId":"489","severity":1,"message":"637","line":173,"column":23,"nodeType":"491","messageId":"492","endLine":173,"endColumn":37},{"ruleId":"489","severity":1,"message":"638","line":178,"column":35,"nodeType":"491","messageId":"492","endLine":178,"endColumn":61},{"ruleId":"489","severity":1,"message":"639","line":182,"column":34,"nodeType":"491","messageId":"492","endLine":182,"endColumn":59},{"ruleId":"489","severity":1,"message":"544","line":187,"column":10,"nodeType":"491","messageId":"492","endLine":187,"endColumn":20},{"ruleId":"489","severity":1,"message":"590","line":3,"column":8,"nodeType":"491","messageId":"492","endLine":3,"endColumn":24},{"ruleId":"489","severity":1,"message":"563","line":22,"column":12,"nodeType":"491","messageId":"492","endLine":22,"endColumn":16},{"ruleId":"489","severity":1,"message":"564","line":22,"column":18,"nodeType":"491","messageId":"492","endLine":22,"endColumn":25},{"ruleId":"489","severity":1,"message":"501","line":23,"column":11,"nodeType":"491","messageId":"492","endLine":23,"endColumn":18},{"ruleId":"489","severity":1,"message":"500","line":7,"column":8,"nodeType":"491","messageId":"492","endLine":7,"endColumn":18},{"ruleId":"489","severity":1,"message":"501","line":52,"column":11,"nodeType":"491","messageId":"492","endLine":52,"endColumn":18},{"ruleId":"508","severity":1,"message":"645","line":18,"column":5,"nodeType":"510","messageId":"511","endLine":18,"endColumn":21},{"ruleId":"489","severity":1,"message":"646","line":62,"column":10,"nodeType":"491","messageId":"492","endLine":62,"endColumn":31},{"ruleId":"489","severity":1,"message":"647","line":63,"column":15,"nodeType":"491","messageId":"492","endLine":63,"endColumn":21},{"ruleId":"502","severity":1,"message":"648","line":69,"column":6,"nodeType":"504","endLine":69,"endColumn":11,"suggestions":"649"},{"ruleId":"489","severity":1,"message":"650","line":77,"column":9,"nodeType":"491","messageId":"492","endLine":77,"endColumn":19},{"ruleId":"489","severity":1,"message":"651","line":80,"column":9,"nodeType":"491","messageId":"492","endLine":80,"endColumn":20},{"ruleId":"652","severity":1,"message":"653","line":12,"column":25,"nodeType":"654","messageId":"655","endLine":12,"endColumn":26,"suggestions":"656"},{"ruleId":"502","severity":1,"message":"657","line":23,"column":6,"nodeType":"504","endLine":23,"endColumn":8,"suggestions":"658"},{"ruleId":"489","severity":1,"message":"596","line":31,"column":7,"nodeType":"491","messageId":"492","endLine":31,"endColumn":11},"no-native-reassign",["659"],"no-negated-in-lhs",["660"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Route' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["661"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","'Search' is defined but never used.","'styles' is assigned a value but never used.","'useState' is defined but never used.","'getPassedList1' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'setPurchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["662"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["663"],"BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","'openConditionScreen' is assigned a value but never used.","'TransactionModal' is defined but never used.","'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["664"],["665"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["666"],"'setSearchData' is assigned a value but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'handleSearchText' is assigned a value but never used.","'rows' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","'vehicleList' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'handleChangePageCount' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'activeChild'. Either include it or remove the dependency array.",["667"],"'getCarXml' is defined but never used.","'parseString' is assigned a value but never used.","'Link' is defined but never used.","'LinearProgress' is defined but never used.","'getAccessTokenEndpoint' is defined but never used.","'getUserInfo' is defined but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthTokenSSO1'. Either include it or remove the dependency array.",["668"],"'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","Duplicate key 'font-weight'.","'accountInformation' is assigned a value but never used.","'serviceData' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'InputLabel' is defined but never used.","'handleClick' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'CardMedia' is defined but never used.","'SearchText' is defined but never used.","'resp' is assigned a value but never used.","'Button' is defined but never used.","'getUserInfoToken' is defined but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["669"],"'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'getTokenSSO' is assigned a value but never used.","'MileageDiscList' is assigned a value but never used.","'options' is assigned a value but never used.","'qs' is assigned a value but never used.","'useEffect' is defined but never used.","'noCall' is assigned a value but never used.","'setnoCall' is assigned a value but never used.","'apiResponse' is assigned a value but never used.","'MobileStepper' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'getImageData' is defined but never used.","'activeStep' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.images'. Either include it or remove the dependency array.",["670"],"'CheckCircle' is defined but never used.","'QontoConnector' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'makeStyles' is defined but never used.","'setTotalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onChangePage', 'skipRecords', and 'totalData'. Either include them or remove the dependency array.",["671"],"'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"672","text":"673"},"Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["674"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["675","676"],"React Hook useEffect has missing dependencies: 'getToken' and 'getUserAccessInfoToken'. Either include them or remove the dependency array.",["677"],"no-global-assign","no-unsafe-negation",{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"680","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},[5729,5738],"\"right\"",{"desc":"699","fix":"700"},{"messageId":"701","fix":"702","desc":"703"},{"messageId":"704","fix":"705","desc":"706"},{"desc":"707","fix":"708"},"Update the dependencies array to be: [props.location.state]",{"range":"709","text":"710"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"711","text":"712"},"Update the dependencies array to be: [getInspectionDamageDetails, inspectionId]",{"range":"713","text":"714"},{"range":"715","text":"712"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"716","text":"717"},"Add dependencies array: []",{"range":"718","text":"719"},"Update the dependencies array to be: [activeChild, props.stateUpdate]",{"range":"720","text":"721"},"Update the dependencies array to be: [getAuthTokenSSO1, value]",{"range":"722","text":"723"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"724","text":"725"},"Update the dependencies array to be: [props.images]",{"range":"726","text":"727"},"Update the dependencies array to be: [onChangePage, pageCount, skipRecords, totalData]",{"range":"728","text":"729"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"730","text":"731"},"removeEscape",{"range":"732","text":"733"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"734","text":"735"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [getToken, getUserAccessInfoToken]",{"range":"736","text":"737"},[1817,1872],"[props.location.state]",[3124,3129],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[3830,3844],"[getInspectionDamageDetails, inspectionId]",[2806,2811],[3030,3032],"[getInspectionDamageDetails]",[1352,1352],", []",[3182,3201],"[activeChild, props.stateUpdate]",[3097,3104],"[getAuthTokenSSO1, value]",[2261,2268],"[getVehicleDetails, value]",[1792,1794],"[props.images]",[1792,1803],"[onChangePage, pageCount, skipRecords, totalData]",[2638,2643],"[getConditionVehicleDetails, vin]",[291,292],"",[291,291],"\\",[651,653],"[getToken, getUserAccessInfoToken]"]