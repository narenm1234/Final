[{"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js":"1","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js":"2","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js":"3","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js":"4","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js":"5","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js":"6","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js":"7","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js":"8","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js":"9","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js":"10","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js":"11","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js":"12","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js":"13","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js":"14","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js":"15","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js":"16","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js":"17","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js":"18","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js":"19","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js":"20","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js":"21","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js":"22","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js":"23","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js":"24","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js":"25","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js":"26","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js":"27","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js":"28","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js":"29","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js":"30","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js":"31","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js":"32","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js":"33","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js":"34","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js":"35","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js":"36","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js":"37","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js":"38","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js":"39","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js":"40","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js":"41","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js":"42","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js":"43","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js":"44","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js":"45","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js":"46","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js":"47","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js":"48"},{"size":661,"mtime":1631558768443,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1631558768486,"results":"51","hashOfConfig":"50"},{"size":319,"mtime":1631558768500,"results":"52","hashOfConfig":"50"},{"size":2592,"mtime":1632233984960,"results":"53","hashOfConfig":"50"},{"size":3673,"mtime":1631558768423,"results":"54","hashOfConfig":"50"},{"size":2856,"mtime":1631558768385,"results":"55","hashOfConfig":"50"},{"size":1774,"mtime":1632233984975,"results":"56","hashOfConfig":"50"},{"size":499,"mtime":1631558768479,"results":"57","hashOfConfig":"50"},{"size":699,"mtime":1631558768478,"results":"58","hashOfConfig":"50"},{"size":1614,"mtime":1632233984975,"results":"59","hashOfConfig":"50"},{"size":37304,"mtime":1632233984975,"results":"60","hashOfConfig":"50"},{"size":33672,"mtime":1631558768454,"results":"61","hashOfConfig":"50"},{"size":225,"mtime":1631558768463,"results":"62","hashOfConfig":"50"},{"size":228,"mtime":1631558768465,"results":"63","hashOfConfig":"50"},{"size":241,"mtime":1631558768462,"results":"64","hashOfConfig":"50"},{"size":9776,"mtime":1631558768470,"results":"65","hashOfConfig":"50"},{"size":4304,"mtime":1631558768398,"results":"66","hashOfConfig":"50"},{"size":19561,"mtime":1631663943233,"results":"67","hashOfConfig":"50"},{"size":25015,"mtime":1632079775773,"results":"68","hashOfConfig":"50"},{"size":16302,"mtime":1631663986815,"results":"69","hashOfConfig":"50"},{"size":265,"mtime":1631558768420,"results":"70","hashOfConfig":"50"},{"size":1747,"mtime":1632233984975,"results":"71","hashOfConfig":"50"},{"size":8545,"mtime":1631558768440,"results":"72","hashOfConfig":"50"},{"size":2597,"mtime":1631558768437,"results":"73","hashOfConfig":"50"},{"size":1443,"mtime":1631671130956,"results":"74","hashOfConfig":"50"},{"size":2270,"mtime":1631558768400,"results":"75","hashOfConfig":"50"},{"size":985,"mtime":1631558768480,"results":"76","hashOfConfig":"50"},{"size":15179,"mtime":1631558768485,"results":"77","hashOfConfig":"50"},{"size":4286,"mtime":1631558768409,"results":"78","hashOfConfig":"50"},{"size":311,"mtime":1631558768469,"results":"79","hashOfConfig":"50"},{"size":327,"mtime":1631558768468,"results":"80","hashOfConfig":"50"},{"size":4773,"mtime":1631558768392,"results":"81","hashOfConfig":"50"},{"size":12923,"mtime":1632234283851,"results":"82","hashOfConfig":"50"},{"size":8684,"mtime":1631884062990,"results":"83","hashOfConfig":"50"},{"size":5048,"mtime":1631672167637,"results":"84","hashOfConfig":"50"},{"size":1464,"mtime":1631558768415,"results":"85","hashOfConfig":"50"},{"size":13897,"mtime":1632078481646,"results":"86","hashOfConfig":"50"},{"size":1321,"mtime":1631558768418,"results":"87","hashOfConfig":"50"},{"size":3241,"mtime":1631558768404,"results":"88","hashOfConfig":"50"},{"size":3134,"mtime":1631558768427,"results":"89","hashOfConfig":"50"},{"size":3526,"mtime":1631558768483,"results":"90","hashOfConfig":"50"},{"size":4089,"mtime":1631881979654,"results":"91","hashOfConfig":"50"},{"size":2686,"mtime":1632233984991,"results":"92","hashOfConfig":"50"},{"size":1708,"mtime":1631558768380,"results":"93","hashOfConfig":"50"},{"size":6487,"mtime":1631558768446,"results":"94","hashOfConfig":"50"},{"size":12988,"mtime":1631558768432,"results":"95","hashOfConfig":"50"},{"size":13661,"mtime":1631558768431,"results":"96","hashOfConfig":"50"},{"size":12984,"mtime":1631558768435,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"8g9nxt",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"100"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"100"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"100"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"100"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225","usedDeprecatedRules":"100"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"100"},"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\index.js",[],["229","230"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\reportWebVitals.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\theme.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\App.js",["231","232","233","234"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Sidebar.js",["235","236"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n\r\nimport NewSidebar from './NewSideBar'\r\nimport \"./SideBar.scss\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginTop: 52,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    boxShadow: '0px 0px 3px grey',\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    top: 52,\r\n    height: 'calc(100% - 52px) !important',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'space-between',\r\n    fontSize: 18,\r\n    fontWeight: 600\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  closeIcon: {\r\n    border: '1px solid'\r\n  }\r\n\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const { children } = props\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} >\r\n          {open ? <div> Main Menu</div> : ''}\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {open ? <ChevronLeftIcon className={classes.closeIcon} /> : <ChevronRightIcon className={classes.closeIcon} />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {open ? <NewSidebar></NewSidebar> : \"\"}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Sidebar;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\InventoryRequestsTabs.js",["237","238","239","240"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ManualPricing from './ManualPricing';\r\nimport RRMApproval from './RRMApproval';\r\nimport MileageDisc from './MileageDisc'\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3} pt={16}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n\r\n}));\r\n\r\nexport default function InventoryRequestsTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state && props.location.state.pageName === 'RRMApproval') {\r\n      setValue(1)\r\n    } else if (props.location.state && props.location.state.pageName === 'Manual Pricing') {\r\n      setValue(0)\r\n    }\r\n    else if (props.location.state && props.location.state.pageName === 'Mileage Discrepencies') {\r\n      setValue(2)\r\n    }\r\n  }, [props.location.state && props.location.state.pageName]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" className='topBarAdmin'>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className='tabset'>\r\n          <Tab label=\"Awaiting Manual Pricing\" {...a11yProps(0)} />\r\n          <Tab label=\"RRM Approvals\" {...a11yProps(1)} />\r\n          <Tab label=\"Mileage Discrepencies\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"No Inspections\" {...a11yProps(3)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <ManualPricing props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RRMApproval props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <MileageDisc props={props} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <h2>No Inspections</h2>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Header\\Header.js",["241"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Home.js",["242","243"],"import React from 'react';\r\nimport Search from '../components/Search/Search';\r\nimport VehicleInformation from '../components/VehicleInformation';\r\n\r\n\r\nlet styles = {\r\n  homesearch: {\r\n    'width': '371px',\r\n    'height': '32px',\r\n    'margin': '3px 0 0',\r\n    'padding': '7px 9px 8px 12px',\r\n    'border-radius': '4px',\r\n    'border': 'solid 1px #dddbda',\r\n    'background-color': '#ffffff'\r\n\r\n  },\r\n}\r\nconst Home = () => {\r\n  return (\r\n    <VehicleInformation />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\Grounded.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminHome.js",["244","245","246","247"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReport.js",["248","249","250","251","252","253","254","255","256","257","258","259"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ConditionReportRequests.js",["260","261","262","263","264","265","266","267","268"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ViewDetailedReport from './ViewDetailedReport';\r\nimport MyGallery from './ImageGallery';\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { getPassedList1, getInspectionDamageDetailsApi, getOEMBuildDetailsApi } from '../service/api';\r\nimport { getInspectionVehicleDetails, getInspectionAccessoryDetails, getInspectionWheelTiresDetails } from '../service/api'\r\nimport ManualPricingSideBar from '../components/ManualPricingSideBar';\r\nexport default function ConditionReportRequests(props) {\r\n    let listOfItem = ['VIN', 'Engine', 'Door', 'Body Style', 'Transmission', 'Drive Train', 'Interior type', 'Interior Color', 'Keys', 'Interior Type', 'Odor', 'Grounding Mileage', 'Account Type'];\r\n    let wheelTyrelistOfItem = ['LF', 'RF', 'LR', 'RR', 'SP', 'RR']\r\n    const [open, setOpen] = React.useState(false)\r\n    const [condionVehicleDetails, setCondionVehicleDetails] = React.useState({})\r\n    const [accessoryDetails, setAccessoryDetails] = React.useState({})\r\n    const [wheelTiresDetails, setWheelTiresDetails] = useState([])\r\n    const [vin, setVin] = React.useState(props?.match?.params?.vin)\r\n    const [pageName, setPageName] = React.useState(props?.location?.state?.pageName)\r\n    const [inspectionId, setInspectionId] = React.useState([])\r\n    const [VehicleResponse, setVehicleResponse] = useState([])\r\n    const [value, setValue] = useState([])\r\n    const [DamageDetails, setDamageDetails] = useState([])\r\n    const [OEMBuildDetailsData, setOEMBuildDetailsData] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getOEMBuildDetails()\r\n        getConditionVehicleDetails()\r\n        getVehicleDetails()\r\n    }, [vin])\r\n\r\n    async function getOEMBuildDetails() {\r\n        let apiResponse = await getOEMBuildDetailsApi(vin)\r\n        setOEMBuildDetailsData(apiResponse.data)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getInspectionDamageDetails();\r\n    }, []);\r\n\r\n    async function getInspectionDamageDetails() {\r\n        let getInspectionDamageDetailsaApiResponse = await getInspectionDamageDetailsApi(inspectionId, vin);\r\n        setDamageDetails(getInspectionDamageDetailsaApiResponse.data)\r\n\r\n    }\r\n    async function getVehicleDetails() {\r\n        let apiResponse = await getPassedList1();\r\n        setVehicleResponse(apiResponse.data.data);\r\n        console.log(VehicleResponse.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInspectionAccessory(inspectionId)\r\n        getInspectionWheelTires(inspectionId)\r\n    }, [inspectionId]);\r\n\r\n    async function getConditionVehicleDetails() {\r\n        let apiResponse = await getInspectionVehicleDetails(vin);\r\n        console.log(\"getConditionVehicleDetailsresponse\", apiResponse)\r\n        setCondionVehicleDetails(apiResponse.data);\r\n        setInspectionId(apiResponse.data.inspection_id)\r\n    }\r\n\r\n    async function getInspectionAccessory(inspectionId) {\r\n        let apiResponse = await getInspectionAccessoryDetails(inspectionId);\r\n        setAccessoryDetails(apiResponse.data);\r\n    }\r\n\r\n    async function getInspectionWheelTires(inspectionId) {\r\n        let apiResponse = await getInspectionWheelTiresDetails(inspectionId);\r\n        console.log(\"wheelTiresDetailsapires\", apiResponse)\r\n        setWheelTiresDetails(apiResponse.data);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(!open)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='conditionPageCardReports'>\r\n                <Grid item xs={12}>\r\n                    <div className='conditionTopBar'>\r\n                        <Grid xs={12} className='conditionTopBarLayout'>\r\n                            <Link to={{ pathname: \"/adminInventoryRequests\", state: { pageName: pageName } }} >{pageName}</Link>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n                <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n                    <Grid item xs={5}>\r\n                        <MyGallery />\r\n                        <Grid container className=\"ConditionCardBody\">\r\n                            <div className='damageTitle'>\r\n                                <span>Damage Report</span>\r\n                            </div>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Exterior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.exteriorCost ? DamageDetails.exteriorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Interior total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.interiorCost ? DamageDetails.interiorCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={4} >\r\n                                <Card className=\"ConditionCardDamage\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Mechanical total\r\n                                        </div>\r\n                                        <div className=\"smallCardBody warningColor\">\r\n                                            {DamageDetails.maintainenceCost ? DamageDetails.maintainenceCost : 'NA'}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Button variant=\"outlined\" color=\"primary\" className=\"detailedReport\" onClick={handleOpen}>\r\n                                    View Full Detailed Report\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <div className=\"disclaimer\">\r\n                                    Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <div className=\"LabelTextTextArea\">Announcements</div>\r\n                        <TextareaAutosize\r\n                            className=\"inputFieldTextArea\"\r\n                            aria-label=\"maximum height\"\r\n                            placeholder=\"Maximum 4 rows\"\r\n                            defaultValue=\"Text area describes when a vehicle may have possible structural damage. This is non editable text/container, but you can drag the container corner for more height if the user wants to see more info without having to scroll, if there is a lot of copy. \"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                        <div className='ConditionReportSection'>\r\n                            <div className='reportTitle'>\r\n                                <span>MAZDA SD 2019 </span>\r\n                            </div>\r\n                            <span className='ConditionReportInspection'>\r\n                                <span className='BadgeValue'>Inspection Complete</span>\r\n                            </span>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Payoff\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $12,000.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\" >\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle1\">\r\n                                            Residual + Remaining\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $11,250.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Market Based\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            $10,500.00\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Inspection Grade\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.condition_grade}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"ConditionCardMargin\">\r\n                                <Card className=\"ConditionCard\" >\r\n                                    <CardContent>\r\n                                        <div className=\"smallCardTitle\">\r\n                                            Odometer\r\n                                        </div>\r\n                                        <div className=\"smallCardBody\">\r\n                                            {condionVehicleDetails.inspection_mileage}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={3}>\r\n                            <Card className=\"vehicleSectionCR\">\r\n                                <Typography variant=\"h6\">Vehicle Details</Typography>\r\n                                <hr />\r\n                                <CardContent>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  VIN  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{vin}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Date  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.inspection_date}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Inspection Location  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span >\r\n                                                    .\r\n                                                </span>\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">\r\n                                                {condionVehicleDetails.location_address2}{condionVehicleDetails.location_city}\r\n                                            </span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span > .   </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails.location_code}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Consignor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.location_address}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Engine  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.engine_cylinder}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Door  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Body Style  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.body_style}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Transmission  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.transmission_type}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Drive Train  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Exterior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.ext_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.interior_material}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Interior color  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">{condionVehicleDetails?.int_color}</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Keys  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            {/* <span className=\"textSize\">{condionVehicleDetails?.location_address}</span> */}\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Grounding Mileage  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\">9,000 miles</span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Account Type  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n                                    <List className=\"paddingCSS\">\r\n                                        <ListItemText>\r\n                                            <span className=\"textStyle\">\r\n                                                <span className=\"textBold\">  Odor  </span>\r\n\r\n                                            </span>\r\n                                        </ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <span className=\"textSize\"></span>\r\n                                        </ListItemSecondaryAction>\r\n                                    </List>\r\n\r\n\r\n                                </CardContent>\r\n\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Accessories</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            {/*  <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Item Name</TableCell>\r\n                                                <TableCell align=\"right\">Item Name</TableCell>\r\n                                                <TableCell align=\"right\">Item Name</TableCell>\r\n                                                <TableCell align=\"right\">Item Name</TableCell>\r\n                                            </TableRow>\r\n                                       </TableHead>*/}\r\n                                            <TableBody>\r\n                                                {/* {['Item Name', 'Item Name', 'Item Name', 'Item Name'].map(list => {\r\n                                                return ( */}\r\n                                                <TableRow key=\"10074\">\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {accessoryDetails.item_id}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">{accessoryDetails.description}</TableCell>\r\n                                                    {/* <TableCell align=\"right\">y</TableCell>\r\n                                                        <TableCell align=\"right\">z</TableCell> */}\r\n                                                </TableRow>\r\n                                                {/* )\r\n                                            })\r\n                                            } */}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Wheels and Tyres</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Location</TableCell>\r\n                                                    <TableCell align=\"right\">Brand</TableCell>\r\n                                                    <TableCell align=\"right\">Size</TableCell>\r\n                                                    <TableCell align=\"right\">Wheel</TableCell>\r\n                                                    <TableCell align=\"right\">Tread Depth</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {wheelTiresDetails?.map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {wheelTiresDetails?.tire_location}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\">{list.tire_location}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.manufracturer}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.size}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                            <TableCell align=\"right\">{list.tread}</TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </CardContent>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\">Build Data</Typography>\r\n                                    <hr />\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell>Code</TableCell>\r\n                                                    <TableCell align=\"right\">Description</TableCell>\r\n                                                    <TableCell align=\"right\">Package Details</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                {['1'].map(list => {\r\n                                                    return (\r\n                                                        <TableRow key={list}>\r\n                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                {list}\r\n                                                            </TableCell>\r\n                                                            <TableCell align=\"right\"></TableCell>\r\n                                                            <TableCell align=\"right\"> </TableCell>\r\n                                                        </TableRow>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n\r\n                                </CardContent>\r\n                                <div className=\"disclaimerVRS\">\r\n                                    Disclaimer: The parts, equipment, accessories, and other information listed above are based on equipment/configuration at the time vehicle was sold by Mazda Motor Corporation to a dealer and does not mean that this vehicle is still so equipped.\r\n                                </div>\r\n                            </Card>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <ViewDetailedReport DamageDetails={DamageDetails} open={open} close={handleClose} />\r\n            </div>\r\n            <ManualPricingSideBar />\r\n        </>\r\n    );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending1.js",["269"],"import React, { useState } from 'react';\r\nimport ListingPage1 from './passedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage1></ListingPage1>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending2.js",["270"],"import React, { useState } from 'react';\r\nimport ListingPage2 from './purchasedPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage2></ListingPage2>\r\n    </div>\r\n  );\r\n};","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundPending.js",["271"],"import React, { useState } from 'react';\r\nimport ListingPage from './groundedListPage'\r\nexport default function Overview(props) {\r\n\r\n  return (\r\n    <div className='home'>\r\n      <ListingPage {...props}></ListingPage>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\VINSearch.js",["272","273","274","275","276"],"import React, { useState, useEffect } from \"react\";\r\nimport Search from \"../../components/SearchText/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\nimport GroundVehicleMFS from \"./GroundVehicleMFS\";\r\nimport GroundVehiclePLV from \"./GroundVehiclePLV\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { getAuthToken, getVehicleDetails } from \"../../service/api\";\r\n\r\nexport default function VINSearch(props) {\r\n  const placeholder = \"Enter last 6 digits of VIN\";\r\n  const [token, setToken] = useState(\"\");\r\n  const [vehicleResponse, setVehicleResponse] = useState({});\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [reasonForReturn, setreasonForReturn] = useState(\r\n    \"Ground_Vehicle_for_MFS\"\r\n  );\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let tokenResponse = getAuthToken();\r\n    setToken(tokenResponse.data?.access_token);\r\n  });\r\n  async function getVehDetails(value) {\r\n    let apiResponse = await getVehicleDetails(token, value);\r\n    setVehicleResponse(apiResponse.data);\r\n    if (apiResponse.data.vehicleInfo?.length > 0) {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    } else {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    }\r\n  }\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n\r\n    let value = e?.target?.value;\r\n    console.log(value);\r\n    getVehDetails(value);\r\n\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n  const handleReasonChange = (e) => {\r\n    console.log(e.target.value);\r\n    setreasonForReturn(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <div className=\"grounding\">\r\n        <div className=\"searchLabelHeader\">Vehicle Grounding</div>\r\n        <div className=\"searchLabel\">Begin Vehicle Lease return process</div>\r\n        <Search\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n        {!validSearch && suggestions && (\r\n          <div className=\"noMatchesFrame\">\r\n            <div className=\"noMatches\">VIN not found/Inactive</div>\r\n          </div>\r\n        )}\r\n\r\n        {validSearch && (\r\n          <div>\r\n            <div className=\"carRecordFound\">\r\n              <div className=\"vehicleMakeModel\">\r\n                <span>\r\n                  {vehicleResponse?.vehicleInfo[0]?.brand}\r\n                  {\" & \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.model}\r\n                  {\" | \"}{\" \"}\r\n                </span>\r\n                <span>\r\n                  {\"  \"}\r\n                  {vehicleResponse?.vehicleInfo[0]?.ext_color}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Customer Return date\r\n              </InputLabel>\r\n              <TextField\r\n                id=\"date\"\r\n                type=\"date\"\r\n                defaultValue=\"00/00/0000\"\r\n                className=\"customerReturnDate\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"customerReturnStyle\">\r\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                Reason for Return\r\n              </InputLabel>\r\n              <Select\r\n                name=\"Reason for Return\"\r\n                value={reasonForReturn}\r\n                variant=\"outlined\"\r\n                inputProps={{ \"aria-label\": \"age\" }}\r\n                className=\"customerReturnDate\"\r\n                onChange={(event) => handleReasonChange(event)}\r\n              >\r\n                <MenuItem value={\"Purchase_Leased_Vehicle\"}>\r\n                  Purchase Leased Vehicle\r\n                </MenuItem>\r\n                <MenuItem value={\"Ground_Vehicle_for_MFS\"}>\r\n                  Ground Vehicle for MFS\r\n                </MenuItem>\r\n                <MenuItem value={\"Trade_In\"}>Trade In</MenuItem>\r\n              </Select>\r\n            </div>\r\n            {reasonForReturn === \"Ground_Vehicle_for_MFS\" && (\r\n              <>\r\n                {\" \"}\r\n                <GroundVehicleMFS />\r\n                <div className=\"odometerBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Odometer Reading\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Enter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Renter odometer reading\"\r\n                    variant=\"outlined\"\r\n                    className=\"odometer\"\r\n                  />\r\n                </div>{\" \"}\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"keysReturnedBox\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Number of Keys Returned\r\n                  </InputLabel>\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Master Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    placeholder=\"Valet Keys Returned\"\r\n                    variant=\"outlined\"\r\n                    className=\"keysReturned\"\r\n                  />\r\n                </div>\r\n                <div className=\"vehicleCondition\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Vehicle Condition\r\n                  </InputLabel>\r\n                  <div className=\"Rectangle-3\">\r\n                    <FormControlLabel control={<Radio />} label=\"Drivable\" />\r\n                  </div>\r\n                  <div className=\"Rectangle-3\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Not Drivable\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"pickUpLocation\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Pick Up Location\r\n                  </InputLabel>\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 1\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pickUpLocationBox\">\r\n                    <FormControlLabel\r\n                      control={<Radio />}\r\n                      label=\"Location Name 2\"\r\n                    />\r\n                  </div>\r\n                </div>{\" \"}\r\n              </>\r\n            )}\r\n\r\n            {(reasonForReturn === \"Purchase_Leased_Vehicle\" ||\r\n              reasonForReturn === \"Trade_In\") && (\r\n              <>\r\n                <GroundVehiclePLV />\r\n                <div className=\"customerReturnStyle\">\r\n                  <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                    Do you have a signed odometer statement?\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"age\"\r\n                    value={1}\r\n                    variant=\"outlined\"\r\n                    inputProps={{ \"aria-label\": \"age\" }}\r\n                    className=\"customerReturnDate\"\r\n                  >\r\n                    <MenuItem value={1}>Select Yes or No</MenuItem>\r\n                    <MenuItem value={10}>Yes</MenuItem>\r\n                    <MenuItem value={20}>No</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NewSideBar.js",["277","278","279","280","281","282"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    activeNavLink: {\r\n        background: '#e7f3fd',\r\n        borderLeft: '3px solid #407ed2',\r\n    }\r\n}));\r\n\r\n\r\nconst sidebarItems = [\r\n    {\r\n        label: 'Grounded',\r\n        open: false,\r\n        childs: [\r\n            {\r\n                label: \"Grounded\",\r\n                link: \"/grounded\",\r\n                badge: \"4\",\r\n            },\r\n            {\r\n                label: \"Passed\",\r\n                link: \"/passed\",\r\n                badge: \"8\",\r\n            },\r\n            {\r\n                label: \"Purchased\",\r\n                link: \"/purchased\",\r\n                badge: \"9\",\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        label: 'Admin',\r\n        open: false,\r\n        childs: [\r\n            {\r\n                label: \"Vehicle Search\",\r\n                link: \"/adminSearch\",\r\n                badge: \"\",\r\n            },\r\n            {\r\n                label: \"Inventory Requests\",\r\n                link: \"/adminInventoryRequests\",\r\n                badge: \"\",\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default function NewSidebar() {\r\n    const location = useLocation();\r\n    const [list, setList] = React.useState([]);\r\n    const [open, setOpen] = React.useState([]);\r\n    const [activeChild, setActiveChild] = React.useState(location.pathname);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        sidebarItems.forEach(item => {\r\n            item.childs.forEach(child => {\r\n                if (activeChild == child.link) {\r\n                    item.open = true;\r\n                }\r\n            })\r\n        });\r\n        setList(sidebarItems);\r\n    }, [])\r\n\r\n    const handleClick = (item) => {\r\n        let updatedList = list.map(litem => {\r\n            if (litem.label === item.label) {\r\n                litem.open ? litem.open = false : litem.open = true;\r\n            }\r\n            return litem;\r\n        })\r\n        setList(updatedList);\r\n    };\r\n\r\n    const handleClickMakeActive = (child) => {\r\n        setActiveChild(child.link)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.sideBarCSS}>\r\n            {list && list.map((item, index) =>\r\n                <List key={index} component=\"nav\" aria-labelledby=\"nested-list-subheader\" >\r\n                    <ListItem button onClick={() => { handleClick(item) }}>\r\n                        {item.open ? <ExpandLess /> : <ExpandMore />}\r\n                        <ListItemText primary={item.label} />\r\n                    </ListItem>\r\n                    <Collapse in={item.open} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding className={classes.sideBarCSS}>\r\n                            {item.childs.map(child =>\r\n                                <ListItem component={Link} to={child.link} key={child.link}\r\n                                    className={activeChild == child.link ? classes.activeNavLink : ''}\r\n                                    onClick={() => { handleClickMakeActive(child) }}>\r\n                                    <ListItemText primary={child.label} />\r\n                                    {child.badge ? <Chip className={classes.root} label={child.badge}></Chip> : ''}\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                    </Collapse>\r\n                </List>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricing.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SwipableFilter from \"./SwipableFilter\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeadFont: {\r\n    fontWeight: 600,\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  Grounding_Region,\r\n  Inspection_Date,\r\n  Inspection_Status,\r\n  Action_Code\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    Grounding_Region,\r\n    Inspection_Date,\r\n    Inspection_Status,\r\n    Action_Code,\r\n  };\r\n}\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0087479668724131\",\r\n    \"2022\",\r\n    \"CX-5\",\r\n    \"B3\",\r\n    \"Texas\",\r\n    \"10/24/2022\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"0704303398645911\",\r\n    \"2015\",\r\n    \"CX-5\",\r\n    \"A1\",\r\n    \"Florida\",\r\n    \"01/23/2015\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"6672920469419405\",\r\n    \"2016\",\r\n    \"Mazda3\",\r\n    \"B1\",\r\n    \"Indiana\",\r\n    \"04/26/2016\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"7660443910307535\",\r\n    \"2017\",\r\n    \"Mazda6\",\r\n    \"C1\",\r\n    \"Texas\",\r\n    \"08/13/2017\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2769586046735830\",\r\n    \"2018\",\r\n    \"MX-5\",\r\n    \"A2\",\r\n    \"Texas\",\r\n    \"12/17/2018\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"2563959933582287\",\r\n    \"2019\",\r\n    \"Mazda3\",\r\n    \"B2\",\r\n    \"Florida\",\r\n    \"07/30/2019\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"8309130666254027\",\r\n    \"2020\",\r\n    \"Mazda3\",\r\n    \"C2\",\r\n    \"Indiana\",\r\n    \"03/14/2020\",\r\n    \"Completed\",\r\n    \"XYZ\"\r\n  ),\r\n  createVehicleData(\r\n    \"3180783430963337\",\r\n    \"2021\",\r\n    \"Mazda6\",\r\n    \"A3\",\r\n    \"Indiana\",\r\n    \"11/15/2021\",\r\n    \"Pending\",\r\n    \"XYZ\"\r\n  ),\r\n];\r\n\r\nexport default function ManualPricing(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [vehicleList, setVehicleList] = useState(rows);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Manual Pricing\",\r\n    });\r\n  };\r\n\r\n  const fetchDataBasedOnSearchValue = (searchText) => {\r\n    const vehicleListCopy = [...rows];\r\n    if (searchText) {\r\n      const filteredList = vehicleListCopy.filter((row) => {\r\n        return row.VIN.indexOf(searchText) !== -1;\r\n      });\r\n      setVehicleList(filteredList);\r\n    } else {\r\n      setVehicleList(rows);\r\n    }\r\n  };\r\n\r\n  const fetchDataBasedOnFilters = (filterInput) => {\r\n    let vehicleListCopy = [...rows];\r\n    if (filterInput.vin) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.VIN.indexOf(filterInput.vin) !== -1 ||\r\n          (row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo)\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.yearFrom && filterInput.yearTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Year >= filterInput.yearFrom && row.Year <= filterInput.yearTo\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.make) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Make.indexOf(filterInput.make) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionStatus) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return (\r\n          row.Inspection_Status.indexOf(filterInput.inspectionStatus) !== -1\r\n        );\r\n      });\r\n    }\r\n    if (filterInput.groundingRegion) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Grounding_Region.indexOf(filterInput.groundingRegion) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.auctionCode) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        return row.Action_Code.indexOf(filterInput.auctionCode) !== -1;\r\n      });\r\n    }\r\n    if (filterInput.inspectionDateFrom && filterInput.inspectionDateTo) {\r\n      vehicleListCopy = vehicleListCopy.filter((row) => {\r\n        const dateTs = Date.parse(row.Inspection_Date);\r\n        return (\r\n          dateTs >= Date.parse(filterInput.inspectionDateFrom) &&\r\n          dateTs <= Date.parse(filterInput.inspectionDateTo)\r\n        );\r\n      });\r\n    }\r\n    setVehicleList(vehicleListCopy);\r\n  };\r\n\r\n  const resetFilterList = () => {\r\n    setVehicleList(rows);\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    setRowsPerPage(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilter\r\n          fetchDataBasedOnSearchValue={fetchDataBasedOnSearchValue}\r\n          fetchDataBasedOnFilters={fetchDataBasedOnFilters}\r\n          resetFilterList={resetFilterList}\r\n        />\r\n\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Grounding Region\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Date\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Inspection Status\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Action Code\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rowsPerPage.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  {/* <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.VIN}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.Year}</TableCell>\r\n                  <TableCell align=\"center\">{row.Make}</TableCell>\r\n                  <TableCell align=\"center\">{row.Model_Trim}</TableCell>\r\n                  <TableCell align=\"center\">{row.Grounding_Region}</TableCell>\r\n                  <TableCell align=\"center\">{row.Inspection_Date}</TableCell>\r\n                  <TableCell align=\"center\">{row.Inspection_Status}</TableCell>\r\n                  <TableCell align=\"center\">{row.Action_Code}</TableCell> */}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Paginator\r\n          label=\"Result per page\"\r\n          showItemsPerPage={10}\r\n          pages={[10, 20, 30, 40]}\r\n          data={rows}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\RRMApproval.js",["297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport SwipableFilterRRM from \"./SwipableFilterRRM\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\nimport Check from \"@material-ui/icons/Check\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  auction,\r\n  mmr,\r\n  mmb,\r\n  percent,\r\n  priced_rate,\r\n  priced_by,\r\n  approve\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    auction,\r\n    mmr,\r\n    mmb,\r\n    percent,\r\n    priced_rate,\r\n    priced_by,\r\n    approve,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0000000000000001\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000002\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000003\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000004\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000005\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000006\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000007\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000008\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000009\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000010\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000011\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000012\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000013\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000014\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000015\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000016\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000017\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000018\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000019\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000020\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000021\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000022\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000023\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000024\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000025\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000026\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000027\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000028\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000029\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000030\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000031\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000032\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000033\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000034\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000035\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000036\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000037\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000038\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000039\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000040\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000041\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000042\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000043\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000044\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000045\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000046\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000047\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000048\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000049\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000050\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000051\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000052\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000053\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000054\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000055\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000056\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000057\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000058\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000059\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000060\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000061\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    true\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000062\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000063\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000064\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000065\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000066\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000067\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000068\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000069\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000070\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000071\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000072\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"auction\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"+00\",\r\n    \"00/00/000\",\r\n    \"Employee Name\",\r\n    false\r\n  ),\r\n];\r\n\r\nexport default function RRMApproval(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  //const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  /*   const handleChangePageCount = (event) => {\r\n          setPageCount(event.target.value);\r\n      };\r\n      const handleChangePage = (event, newPage) => {\r\n          setPage(newPage);\r\n      };\r\n  \r\n      const handleChangeRowsPerPage = (event) => {\r\n          setRowsPerPage(parseInt(event.target.value, 10));\r\n          setPage(0);\r\n      }; */\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"RRMApproval\",\r\n    });\r\n  };\r\n  const onChangePage = (data) => {\r\n    setRowsPerPage(data);\r\n  };\r\n\r\n  const onChangeApprove = (row) => {\r\n    let updatedRowsPerPage = rowsPerPage.map((item) => {\r\n      if (item.VIN === row.VIN) {\r\n        item.approve = !item.approve;\r\n      }\r\n      return item;\r\n    });\r\n    setRowsPerPage(updatedRowsPerPage);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <SwipableFilterRRM />\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className={classes.tableHeaderRow}>\r\n              <TableRow className={classes.tableHeadFont}>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    VIN\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Year\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Make\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Model/Trim\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Auction\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MMR\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    MBP\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    %\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced rate\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TableSortLabel\r\n                    active={true}\r\n                    direction={\"asc\"}\r\n                    onClick={() => {}}\r\n                    IconComponent={() => (\r\n                      <img src={SortIcon} className=\"tableSortIcon\" />\r\n                    )}\r\n                  >\r\n                    Priced By\r\n                  </TableSortLabel>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  Approve\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rowsPerPage.map((row, index) => (\r\n                <TableRow key={index} className={classes.tableRow}>\r\n                  <TableCell align=\"center\">\r\n                    <span className=\"textStyle\">\r\n                      <a\r\n                        className=\"vin\"\r\n                        onClick={() => openConditionReport(row.VIN)}\r\n                      >\r\n                        {\" \"}\r\n                        {row.VIN}\r\n                      </a>\r\n                    </span>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.Year}</TableCell>\r\n                  <TableCell align=\"center\">{row.Make}</TableCell>\r\n                  <TableCell align=\"center\">{row.Model_Trim}</TableCell>\r\n                  <TableCell align=\"center\">{row.auction}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmr}</TableCell>\r\n                  <TableCell align=\"center\">{row.mmb}</TableCell>\r\n                  <TableCell align=\"center\">{row.percent}</TableCell>\r\n                  <TableCell align=\"center\">{row.priced_rate}</TableCell>\r\n                  <TableCell align=\"center\">{row.priced_by}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.approve}\r\n                   <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={row.approve}\r\n                          onChange={() => onChangeApprove(row)}\r\n                          checkedIcon={<Check className={classes.checkedIcon} />}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Paginator\r\n          label=\"Result per page\"\r\n          showItemsPerPage={10}\r\n          pages={[10, 20, 30, 40]}\r\n          data={rows}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\MileageDisc.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableSortLabel } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SwipableFilterMileage from \"./SwipableFilterMileage\";\r\nimport Paginator from \"./Pagination\";\r\nimport SortIcon from \"../assets/WebFont/sort.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    border: \"1px solid #e1e1e1\",\r\n  },\r\n  tableRow: {\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  tableHeaderRow: {\r\n    borderTop: \"1px solid #e1e1e1\",\r\n    borderBottom: \"1px solid #e1e1e1\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createVehicleData(\r\n  VIN,\r\n  Year,\r\n  Make,\r\n  Model_Trim,\r\n  region,\r\n  ground_mileage,\r\n  inspection_mileage,\r\n  difference\r\n) {\r\n  return {\r\n    VIN,\r\n    Year,\r\n    Make,\r\n    Model_Trim,\r\n    region,\r\n    ground_mileage,\r\n    inspection_mileage,\r\n    difference,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n  createVehicleData(\r\n    \"0000000000000000\",\r\n    \"2021\",\r\n    \"Make Name\",\r\n    \"Model/Trim\",\r\n    \"Region Label\",\r\n    \"00,0000\",\r\n    \"00,0000\",\r\n    \"00/00/000\"\r\n  ),\r\n];\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function MileageDisc(props) {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState([]);\r\n  const [pageCount, setPageCount] = React.useState(10);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    setPageCount(event.target.value);\r\n  };\r\n\r\n  const openConditionReport = (VINumber) => {\r\n    props.props.history.push(\"/conditionreportRequests\", {\r\n      vin: VINumber,\r\n      pageName: \"Mileage Discrepencies\",\r\n    });\r\n  };\r\n\r\n  const onChangePage = (data) => {\r\n    setRowsPerPage(data);\r\n  };\r\n  return (\r\n    <>\r\n      <SwipableFilterMileage />\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className={classes.tableHeaderRow}>\r\n            <TableRow className={classes.tableHeadFont}>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  VIN\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Year\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Make\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Model/Trim\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Region\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Grounding Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Inspection Mileage\r\n                </TableSortLabel>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <TableSortLabel\r\n                  active={true}\r\n                  direction={\"asc\"}\r\n                  onClick={() => {}}\r\n                  IconComponent={() => (\r\n                    <img src={SortIcon} className=\"tableSortIcon\" />\r\n                  )}\r\n                >\r\n                  Differnence\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rowsPerPage.map((row) => (\r\n              <TableRow key={row.name} className={classes.tableRow}>\r\n                {/* <TableCell align=\"center\">\r\n                  <span className=\"textStyle\">\r\n                    <a\r\n                      className=\"vin\"\r\n                      onClick={() => openConditionReport(row.VIN)}\r\n                    >\r\n                      {\" \"}\r\n                      {row.VIN}\r\n                    </a>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.Year}</TableCell>\r\n                <TableCell align=\"center\">{row.Make}</TableCell>\r\n                <TableCell align=\"center\">{row.Model_Trim}</TableCell>\r\n                <TableCell align=\"center\">{row.region}</TableCell>\r\n                <TableCell align=\"center\">{row.inspection_mileage}</TableCell>\r\n                <TableCell align=\"center\">{row.ground_mileage}</TableCell>\r\n                <TableCell align=\"center\">{row.difference}</TableCell> */}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Paginator\r\n          label=\"Result per page\"\r\n          showItemsPerPage={10}\r\n          pages={[10, 20, 30, 40]}\r\n          data={rows}\r\n          onChangePage={onChangePage}\r\n        />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Separator.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminSearchHeader.js",["324","325","326","327","328"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\VehicleInformation.js",["329","330","331","332","333","334","335"],"import React, { useState } from \"react\";\r\nimport Search from \"./Search/Search\";\r\n\r\nlet styles = {\r\n  container: {\r\n    width: \"371px\",\r\n    height: \"270px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n\r\n  VehicleMakeModel: {\r\n    width: \"271px\",\r\n    height: \"24px\",\r\n    margin: \"0 69px 0 0\",\r\n    \"font-family\": \"SalesforceSans\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"bold\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#080707\",\r\n  },\r\n  line: {\r\n    width: \"350px\",\r\n    height: \"2px\",\r\n    margin: \"4px 2px 11px 2px\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n\r\n  label: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  value: {\r\n    width: \"85px\",\r\n    height: \"18px\",\r\n    margin: \"8px 24px 4px 0\",\r\n    \"font-family\": \"ToyotaType\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"600\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n    \"font-weight\": \"normal\",\r\n  },\r\n\r\n  imagebox: {\r\n    width: \"180px\",\r\n    height: \"160px\",\r\n    margin: \"0px 1px 2px 2px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    \"background-color\": \"#000000\",\r\n  },\r\n  search: {\r\n    width: \"371px\",\r\n    height: \"32px\",\r\n    \"margin-top\": \"10px\",\r\n    padding: \" 0 0 0px\",\r\n    \"border-radius\": \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"flex\",\r\n    \"flex-direction\": \"row\",\r\n  },\r\n  noMatchesFrame: {\r\n    width: \"371px\",\r\n    height: \"76px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n    \"background-color\": \"#ffffff\",\r\n    display: \"block\",\r\n    margin: \"1% 0 0 40%\",\r\n  },\r\n  noMatches: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  searchSuggestionFrame: {\r\n    width: \"371px\",\r\n    height: \"200px\",\r\n    margin: \"8px 540px 16px\",\r\n    padding: \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  searchSuggestion: {\r\n    width: \"350px\",\r\n    height: \"35px\",\r\n    \"background-color\": \"#ffffff\",\r\n  },\r\n  searchLabel: {\r\n    height: \"18px\",\r\n    \"font-size\": \"16px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.5\",\r\n    \"letter-spacing\": \"normal\",\r\n    color: \"#3e3e3c\",\r\n  },\r\n  imageContainer: {\r\n    width: \"371px\",\r\n    height: \"160px\",\r\n    margin: \"48px 54px 16px\",\r\n    //\"padding\": \"14px 30px 16px 16px\",\r\n    \"border-radius\": \"4px\",\r\n    \"box-shadow\": \"0 2px 2px 0 rgba(0, 0, 0, 0.1)\",\r\n    border: \"solid 1px #dddbda\",\r\n  },\r\n  imageContainer1: {\r\n    display: \"block\",\r\n    \"margin-left\": \"40%\",\r\n  },\r\n  alighnCenterItems: {\r\n    background: \"#f3f2f2\",\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n    right: \"0px\",\r\n    border: \"3px solid rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  centerSection: {\r\n    marginTop: \"12%\",\r\n  },\r\n};\r\nconst VehicleInformation = (props) => {\r\n  const searchBox = styles.search;\r\n  const placeholder = \"Enter VIN\";\r\n  const [validSearch, setValidSearch] = useState(false);\r\n  const [suggestions, setSuggestions] = useState(false);\r\n  const [searchValue, setSearchValue] = useState();\r\n  const accountInformation = props.accountInformation;\r\n  let searchSuggestions = [\r\n    \"12345678901234567\",\r\n    \"12345678901234566\",\r\n    \"12345678901234568\",\r\n    \"12345678901234569\",\r\n    \"12345678901234560\",\r\n  ];\r\n\r\n  // useEffect(() => {\r\n  //      //need to filter search data based on the backend data\r\n  //   });\r\n\r\n  const showResults = (e) => {\r\n    setSearchValue(e?.target?.value);\r\n    let value = e?.target?.value;\r\n    searchSuggestions = searchSuggestions.filter((val) => {\r\n      return val.startsWith(value);\r\n    });\r\n    if (\r\n      value?.length == 0 ||\r\n      !searchSuggestions ||\r\n      searchSuggestions?.length == 0 ||\r\n      searchValue?.length == 0\r\n    ) {\r\n      setValidSearch(false);\r\n      setSuggestions(false);\r\n    } else if (searchSuggestions.length > 1) {\r\n      setValidSearch(false);\r\n      setSuggestions(true);\r\n    } else {\r\n      setValidSearch(true);\r\n      setSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const setSearchData = (i) => {\r\n    setSearchValue(searchSuggestions[i]);\r\n    setValidSearch(false);\r\n    setSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.alighnCenterItems}>\r\n      <div style={styles.centerSection}>\r\n        <img\r\n          src=\"car.png\"\r\n          width=\"371px\"\r\n          height=\"160px\"\r\n          style={styles.imageContainer1}\r\n        ></img>\r\n      </div>\r\n      <div style={{ marginLeft: \"40%\" }}>\r\n        <div style={styles.searchLabel}>Search Vehicles</div>\r\n        <Search\r\n          searchBox={searchBox}\r\n          showSearchRight={true}\r\n          searchCompleted={validSearch}\r\n          placeholder={placeholder}\r\n          editSearchTerm={showResults}\r\n          searchValue={searchValue}\r\n        ></Search>\r\n      </div>\r\n      {validSearch && (\r\n        <div style={styles.container}>\r\n          <div style={styles.VehicleMakeModel}>\r\n            {\" \"}\r\n            Vehicle Make & Model Name | Year{\" \"}\r\n          </div>\r\n          <div style={styles.line}></div>\r\n          <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n            <div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Maturity Date </div>{\" \"}\r\n                <div style={styles.value}> 00/00/0000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name</div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Lease Name </div>{\" \"}\r\n                <div style={styles.value}> Lease Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Type </div>{\" \"}\r\n                <div style={styles.value}> Type Name </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Acct Number </div>{\" \"}\r\n                <div style={styles.value}> 00000000 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Ream Payments </div>{\" \"}\r\n                <div style={styles.value}> $000.00 </div>{\" \"}\r\n              </div>\r\n              <div style={{ display: \"flex\", \"flex-direction\": \"row\" }}>\r\n                {\" \"}\r\n                <div style={styles.label}>Color </div>{\" \"}\r\n                <div style={styles.value}> Color Name </div>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.imagebox}>\r\n              <img />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!validSearch && !suggestions && (\r\n        <div style={styles.noMatchesFrame}>\r\n          <div style={styles.noMatches}>No Matches Available</div>\r\n        </div>\r\n      )}\r\n      {suggestions && (\r\n        <div style={styles.searchSuggestionFrame}>\r\n          {searchSuggestions.map((name, index) => (\r\n            <div\r\n              key={index}\r\n              style={styles.searchSuggestion}\r\n              onClick={() => setSearchData(index)}\r\n            >\r\n              {name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default VehicleInformation;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Tabs.js",["336","337"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport AdminDetailedReport from '../pages/AdminDetailedReport';\r\nimport StatusHistory from './StatusHistory';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                   {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function VehicleSearchTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    console.log(\"aaaa\",props)\r\n\r\n    const{inspectiondata}=props;\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className='topBarAdmin'>\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Vehicle Summary\" {...a11yProps(0)} />\r\n                    <Tab label=\"Status History\" {...a11yProps(1)} />\r\n                    <Tab label=\"Update Mileage/price\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <AdminDetailedReport inspectiondata={inspectiondata}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <div className='adminTabsSection'><StatusHistory /></div>\r\n\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <div className='adminTabsSection'>Update Mileage/price</div>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\AdminVehicleSearch.js",["338","339","340","341"],"import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CustomizedInputBase from './CustomisedInput';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\nimport SearchText from './SearchText/Search';\r\nconst AdminVehicleSearch = (props) => {\r\n\r\n  console.log(\"searchdetails\",props);\r\n\r\n  return (\r\n    <Card className=\"adminSearchCard\">\r\n     \r\n      <CardContent className=\"adminSearcheader\">\r\n      <img\r\n        className=\"cover\"\r\n        src=\"searchCar.jpeg\"\r\n      />\r\n       <div className=\"adminSearcheaderColor\">\r\n     <Typography variant=\"h4\" component=\"h4\">\r\n          Vehicle Search\r\n        </Typography>\r\n        <Typography variant=\"p\" component=\"p\">\r\n          Search for a vehicle, or start with any of the menu items on the left.\r\n        </Typography>\r\n     </div>\r\n      \r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent className=\"adminSearchCardBody\">\r\n        <CustomizedInputBase searchdetails={(SearchText) => props.searchdetails(SearchText)} />\r\n        <Button variant=\"contained\" onClick={props.fromchildhandleSubmitbtn()} color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n\r\n  )\r\n}\r\nexport default AdminVehicleSearch;","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\NotesSection.js",["342","343","344","345"],"import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\nexport default function NotesSection() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    return (\r\n        <div className=\"notesSection\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                NotesSection\r\n            </ListItem>\r\n            <ListItem>\r\n                <div className=\"notesText\">\r\n                    <p className=\"notesTextContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                </div>\r\n\r\n            </ListItem>\r\n            <ListItem >\r\n                <Button autoFocus onClick={handleClick} className=\"closeButton\" color=\"secondary\" align=\"right\">\r\n                    Save\r\n                </Button>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n            <ListItem >\r\n                <p className=\"notesSectionContent\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n            </ListItem>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ImageGallery.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\ViewDetailedReport.js",["346","347"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MyGallery from './ImageGallery';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function ViewDetailedReport(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    let wheelTyrelistOfItem = ['LF', 'RF']\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.close()\r\n    };\r\n\r\n    const {DamageDetails}=props;\r\n\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} maxWidth={'lg'} aria-labelledby=\"max-width-dialog-title\" open={props.open}>\r\n                <DialogTitle className=\"viewReportHeader\" id=\"customized-dialog-title\" onClose={handleClose} >\r\n                    Damage  Report\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container >\r\n                        <Grid item xs={6} className=\"galleryView\">\r\n                            <MyGallery />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid xs={6}>\r\n                            <div className=\"viewReportCenter\">Estimated Damage Repair Totals</div>\r\n                            <div className=\"hrLine\" />\r\n                            <Grid container className=\"experiorSpacing\">\r\n                                <Grid item xs={12}>\r\n                                    <List >\r\n                                        <ListItem >\r\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Interior</span></ListItemText>\r\n                                            <ListItemSecondaryAction className=\"smallCardBody warningColor\">{\"$\"}{DamageDetails.interiorCost?DamageDetails.interiorCost:'NA'}</ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        <ListItem>\r\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Exterior</span></ListItemText>\r\n                                            <ListItemSecondaryAction className=\"smallCardBody warningColor\">{\"$\"}{DamageDetails.exteriorCost?DamageDetails.exteriorCost:'NA'}</ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        <ListItem>\r\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Mechanical total</span></ListItemText>\r\n                                            <ListItemSecondaryAction className=\"smallCardBody warningColor\">{\"$\"}{DamageDetails.maintainenceCost?DamageDetails.maintainenceCost:'NA'}</ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        <ListItem>\r\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft\">Normal W and T</span></ListItemText>\r\n                                            <ListItemSecondaryAction className=\"smallCardBody warningColor\">$00,000.00</ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        <ListItem>\r\n                                            <ListItemText className=\"smallCardTitle\"><span className=\"textBold alignleft \">Excessive W and T</span></ListItemText>\r\n                                            <ListItemSecondaryAction className=\"smallCardBody errorColor\">$00,000.00</ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                    </List>\r\n\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <div className=\"LabelTextTextAreaDamage\">Damage Area Description</div>\r\n                                    <TextareaAutosize\r\n                                        className=\"inputFieldTextAreaDamage\"\r\n                                        aria-label=\"maximum height\"\r\n                                        placeholder=\"Maximum 4 rows\"\r\n                                        defaultValue=\"Short description that aligns with the photo that is being displayed from the table below\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table className=\"table\" size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Damaged Area</TableCell>\r\n                                    <TableCell align=\"right\">Wear&Tear</TableCell>\r\n                                    <TableCell align=\"right\">Labour Hours</TableCell>\r\n                                    <TableCell align=\"right\">Paint Hours</TableCell>\r\n                                    <TableCell align=\"right\">Part Cost</TableCell>\r\n                                    <TableCell align=\"right\">Estimate</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\r\n                                        Interior\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                                        <hr />\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                {wheelTyrelistOfItem.map(list => {\r\n                                    return (\r\n                                        <TableRow key={list}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                Damage area name and description\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                                }\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\r\n                                        Exterior\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                                        <hr />\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n\r\n                                {wheelTyrelistOfItem.map(list => {\r\n                                    return (\r\n                                        <TableRow key={list}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                Damage area name and description\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                                }\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\" className=\"warningColorTable\">\r\n                                        Mechanical\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell colSpan={6} component=\"th\" scope=\"row\">\r\n                                        <hr />\r\n                                    </TableCell>\r\n\r\n                                </TableRow>\r\n                                {wheelTyrelistOfItem.map(list => {\r\n                                    return (\r\n                                        <TableRow key={list}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                Damage area name and description\r\n                                            </TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">N</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">000</TableCell>\r\n                                            <TableCell style={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                            <TableCell astyle={{ width: 90 }} align=\"right\">$000,000</TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                                }\r\n                                <TableRow >\r\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\r\n                                    </TableCell>\r\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                                        <hr />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow >\r\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\r\n                                    </TableCell>\r\n                                    <TableCell colSpan={1} style={{ width: 90,color: '#0070d2' }} align=\"right\">Total</TableCell>\r\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\r\n                                    </TableCell>\r\n                                    <TableCell style={{ width: 90,color: '#0070d2' }} align=\"right\" >$000,000</TableCell>\r\n                                </TableRow>\r\n                                <TableRow >\r\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\r\n                                    </TableCell>\r\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                                        <hr />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow >\r\n                                    <TableCell colSpan={2} component=\"th\" scope=\"row\">\r\n                                    </TableCell>\r\n                                    <TableCell colSpan={5} component=\"th\" scope=\"row\">\r\n                                        <div className=\"disclaimer\">\r\n                                            Disclaimer: Damage estimates are included for reference and may not be reflective of the actual repair costs\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n                <DialogActions className=\"reportFooter\">\r\n                    <Button autoFocus onClick={handleClose} className=\"closeButton\" color=\"secondary\">\r\n                        close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\PurchasedPricingSideBar.js",["348","349","350","351","352","353","354","355"],"import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        backgroundColor: \"#B80F0A\",\r\n        borderRadius: \"50%\",\r\n        fontSize: \"12px\",\r\n        padding: \"10px 20px 13px 12px\",\r\n        color: \"white\",\r\n    },\r\n    sideBarCSS: {\r\n        marginLeft: \"16px\",\r\n    }\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: \"#ffffff\",\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: 'auto',\r\n        height: '10px',\r\n        padding: '10px 12px',\r\n        '&:focus': {\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\nexport default function PurchasedPricingSideBar() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        //setOpen(!open);\r\n    };\r\n    const handleOnChange = (event) => {\r\n        setFilterInput({ ...filterInput, ...{ [event.target.name]: event.target.value } });\r\n    };\r\n    const [filterInput, setFilterInput] = useState({\r\n        vin: '',\r\n        yearFrom: '',\r\n        yearTo: '',\r\n        make: '',\r\n        inspectionStatus: '',\r\n        inspectionDateFrom: '',\r\n        inspectionDateTo: '',\r\n        groundingRegion: '',\r\n        auctionCode: ''\r\n    });\r\n    const [value, setValue] = React.useState('female');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    return (\r\n        <div className=\"manualPricingSidebar\">\r\n            <ListItem className=\"notesSectionHeader\">\r\n                Purchase Page\r\n            </ListItem>\r\n            <ListItem button>\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\">Vehicle pricing options</FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"Payoff\" />\r\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"Residual + Remaining Payments\" />\r\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"Market\" />\r\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"Market + Remaining Payments \" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem >\r\n                <ListItemText className=\"manualPricing\">Admin. Fee:</ListItemText>\r\n                <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n            </ListItem>\r\n            <Divider variant=\"middle\" />\r\n            <ListItem >\r\n                <ListItemText className=\"manualPricing\">Total Fee:</ListItemText>\r\n                <ListItemText className=\"manualPricing\">$000,000</ListItemText>\r\n            </ListItem>\r\n            <List className=\"purchasePassBtn\">\r\n                <Button className=\"passButton\" color=\"primary\">\r\n                    Pass on Vehicle\r\n                </Button>\r\n                <Button disabled className=\"purchaseButton\" color=\"secondary\" >\r\n                    Purchase Vehicle\r\n                </Button>\r\n            </List>\r\n        </div>\r\n    )\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehiclePLV.js",["356"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehiclePLV\">\r\n      <p>\r\n        Dealer is responsible for paying off the vehicle and customer will not\r\n        recieve any lease-end charges.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\GroundVehicleMFS.js",["357"],"import React, { useState } from \"react\";\r\n\r\nexport default function GroundVehicleMFS(props) {\r\n  return (\r\n    <div className=\"groundVehicleMFS\">\r\n      <p>\r\n        By grounding this vehicle, dealer will have multiple purchase options\r\n        and customer will be invoiced asa lease return.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\ManualPricingSideBar.js",["358","359","360","361","362","363","364","365"],"import React, { useState } from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    backgroundColor: \"#B80F0A\",\r\n    borderRadius: \"50%\",\r\n    fontSize: \"12px\",\r\n    padding: \"10px 20px 13px 12px\",\r\n    color: \"white\",\r\n  },\r\n  sideBarCSS: {\r\n    marginLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function ManualPricingSideBar() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    //setOpen(!open);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  return (\r\n    <div className=\"manualPricingSidebar\">\r\n      <ListItem className=\"notesSectionHeader\">Manual Pricing</ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter price\"\r\n            id=\"EntermarketPrice-input\"\r\n            name=\"EntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            Re-Enter Market Price\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"Enter Price\"\r\n            id=\"reEntermarketPrice-input\"\r\n            name=\"reEntermarketPrice\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem button>\r\n        <FormControl>\r\n          <InputLabel shrink htmlFor=\"vin-input\">\r\n            MMR\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            placeholder=\"MMR\"\r\n            id=\"vin-input\"\r\n            name=\"vin\"\r\n            value={filterInput.vin}\r\n            onChange={handleOnChange}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <p className=\"manualPricing\">TFS Carfax Alert Status:</p>\r\n      </ListItem>\r\n\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Autograde: 3.0</p>\r\n      </ListItem>\r\n      <ListItem>\r\n        <p className=\"manualPricing\">Grounding Dealer State: TX</p>\r\n      </ListItem>\r\n      <Divider variant=\"middle\" />\r\n      <ListItem>\r\n        <div>\r\n          <h3>Price History</h3>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"manualPricingText\">\r\n          <p className=\"manualPricing\">Price Entry Date/Time</p>\r\n          <p className=\"manualPricing\">Price: $00,000.00</p>\r\n          <p className=\"manualPricing\">User Name: First, Last</p>\r\n        </div>\r\n      </ListItem>\r\n      <List className=\"swipeFilterBtn\">\r\n        <Button autoFocus className=\"cancelButton\" color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button autoFocus className=\"updateButton\" color=\"secondary\">\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\groundedListPage.js",["366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\purchasedPage.js",["380","381","382","383","384","385","386","387"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getAccessTokenEndpoint, getPurchasedList } from \"../../service/api\";\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFBDM0K1698372\",\r\n    },\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFADM3K1586305\",\r\n    },\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    groundingDetails: {\r\n      vin: \"3MZBPBCM4LM125760\",\r\n    },\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    groundingDetails: {\r\n      vin: \"JM3KFABM2L0748452\",\r\n    },\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\n\r\nexport default function ListingPage2(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n  }, [value]);\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPurchasedList(\"ALL\");\r\n    setVehicleResponse(apiResponse.data.data);\r\n    console.log(vehicleResponse);\r\n    console.log(apiResponse.data.data);\r\n  }\r\n  let data = getParameterByName(\"code\");\r\nfunction getParameterByName(name, url = window.location.href) {\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\nuseEffect(() => {\r\n  getToken();\r\n}, [value]);\r\nasync function getToken() {\r\n  let apiResponse = await getAccessTokenEndpoint(data);\r\n  console.log(\"--->\",apiResponse)\r\n}\r\n  return vehicleResponse.length > 0 ? (\r\n    vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              <SwipeableTextMobileStepper />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                    {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                    {vehicle.model_year}\r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a\r\n                      className=\"vin\"\r\n                      href={`/conditionreport${vehicle.vin}`}\r\n                    >\r\n                      {\" \"}\r\n                      {vehicle.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Date:</span>{\" \"}\r\n                    {moment(vehicle.purchase_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                                        <span className=\"textBold\"> Grounding Mileage:</span>  <CurrencyFormat\r\n                        value={\r\n                        vehicle.odometer_reading\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                  \r\n                      /> miles\r\n                                        </span>\r\n                  <span className=\"textStyle\">\r\n                                        <span className=\"textBold\"> Inspection Mileage:</span> Pending\r\n                                        </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Purchase Type:</span>{\" \"}\r\n                    {vehicle.purchase_type? vehicle.purchase_type:\"\"}\r\n                  \r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Vehicle-Price-Option\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>Vehicle Cost </span>\r\n                </div>\r\n                <List>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Payoff Price </span>{\" \"}\r\n                    <span className=\"margin__space4\">\r\n\r\n                      <CurrencyFormat\r\n                        value={vehicle.groundingDetails && vehicle.groundingDetails.pay_off_amt}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                \r\n                    </span>\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Rem.Payments</span>{\" \"}\r\n                    <span className=\"margin__space5\">\r\n                      <CurrencyFormat\r\n                        value={ vehicle.groundingDetails && vehicle.groundingDetails.remaining_pmts}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n              \r\n                    </span>\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Admin Fee</span>{\" \"}\r\n                    <span className=\"margin__space6\">\r\n                      <CurrencyFormat\r\n                        value={vehicle.admin_fee}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                  \r\n                    </span>\r\n                  </span>\r\n                  <div className=\"purchasedScreenTotal\" />\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textStyleTotalFee\"> Total Price</span>{\" \"}\r\n                    <span className=\"totalFeeSum\">\r\n                      <CurrencyFormat\r\n                        value={\r\n                         vehicle.groundingDetails && vehicle.groundingDetails.pay_off_amt +\r\n                          vehicle.groundingDetails && vehicle.groundingDetails.remaining_pmts +\r\n                          vehicle.admin_fee\r\n                        }\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                      />\r\n                    </span>\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (<div className='listingPageCardNoData'>\r\n  <img src=\"noDataFound.jpeg\" className='nodataImage'/>\r\n  <span className='nodataText'>No  Vehicles found</span>\r\n</div>)\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\passedPage.js",["388","389","390"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SwipeableTextMobileStepper from \"./Carousel\";\r\nimport moment from \"moment\";\r\nimport { getPassedList } from \"../../service/api\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport VerticalVehicleStepper from \"../../components/Stepper/VerticalStepper\";\r\nlet resp = [\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 250,\r\n    model_year: 19,\r\n    brand: \"MAZDA\",\r\n    model: \"SD\",\r\n    ext_color: \"Color\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"9000\",\r\n    vin: \"JM3KFBDM0K1698372\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 12500,\r\n    residual_amt: 9000,\r\n    remaining_pmts: 300,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Black\",\r\n    grounding_date: \"2021-05-11T00:00:00\",\r\n    odometer_reading: \"12000\",\r\n    vin: \"JM3KFADM3K1586305\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 14000,\r\n    residual_amt: 11000,\r\n    remaining_pmts: 400,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-07T00:00:00\",\r\n    odometer_reading: \"8000\",\r\n    vin: \"3MZBPBCM4LM125760\",\r\n  },\r\n  {\r\n    account_type: \"LEASE\",\r\n    pay_off_amt: 15000,\r\n    residual_amt: 14000,\r\n    remaining_pmts: 500,\r\n    model_year: 2018,\r\n    brand: \"MAZDA\",\r\n    model: \"MAZDA3\",\r\n    ext_color: \"Blue\",\r\n    grounding_date: \"2021-05-08T00:00:00\",\r\n    odometer_reading: \"6000\",\r\n    vin: \"JM3KFABM2L0748452\",\r\n  },\r\n];\r\nexport default function ListingPage1(props) {\r\n  const [vehicleResponse, setVehicleResponse] = useState([]);\r\n  //const [vehicleResponse, setVehicleResponse] = useState(resp)\r\n  const [value, setValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getVehicleDetails();\r\n  }, [value]);\r\n  async function getVehicleDetails() {\r\n    let apiResponse = await getPassedList();\r\n    setVehicleResponse(apiResponse.data.data);\r\n  }\r\n\r\n  return vehicleResponse.length > 0 ? (\r\n    vehicleResponse.map((vehicle, index) => {\r\n      return (\r\n        <div className=\"listingPageCard\" key={index}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4}>\r\n              <SwipeableTextMobileStepper />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Year-Make-Model-Col\">\r\n                <div className=\"vehicleMakeModel\">\r\n                  <span>\r\n                    {vehicle.brand} {vehicle.model} {vehicle.ext_color}{\" \"}\r\n                    {vehicle.model_year}\r\n                  </span>\r\n                </div>\r\n                <List>\r\n                  {/* <span className=\"textStyle\">\r\n                                           <span className=\"textBold\"> Exclusivity Period</span>: <span className=\"textStyleWarning\">00:00 Remaining</span>\r\n                                        </span>\r\n                                        <span className=\"progressStyle\">\r\n                                            <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\r\n                                        </span> */}\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> VIN:</span>\r\n                    <a className=\"vin\" href={`/conditionreport${vehicle.vin}`}>\r\n                      {\" \"}\r\n                      {vehicle.vin}\r\n                    </a>\r\n                  </span>\r\n\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Date:</span>{\" \"}\r\n                    {moment(vehicle.grounding_date).format(\"MM/DD/YYYY\")}\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Grounding Mileage:</span>{\" \"}\r\n                    <CurrencyFormat\r\n                      value={vehicle.odometer_reading}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      suffix={\"  miles\"}\r\n                    />\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Inspection Mileage:</span>{\" \"}\r\n                    Pending\r\n                  </span>\r\n                  <span className=\"textStyle\">\r\n                    <span className=\"textBold\"> Account Type: </span>{\" \"}\r\n                    {vehicle.account_type}\r\n                  </span>\r\n                </List>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <div className=\"Vehicle-Price-Option\">\r\n                <VerticalVehicleStepper />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    })\r\n  ) : (<div className='listingPageCardNoData'>\r\n  <img src=\"noDataFound.jpeg\" className='nodataImage'/>\r\n  <span className='nodataText'>No  Vehicles found</span>\r\n</div>)\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Search\\Search.js",["391","392","393","394"],"import React, { useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst Search = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div style={serachBoxEntire}>\r\n      {showSearchLeft && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n      <input\r\n        value={props?.searchValue}\r\n        className=\"searchInput\"\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n        placeholder={placeholder}\r\n      />\r\n      {showSearchRight && (\r\n        <div className=\"searchDiv\">\r\n          {\" \"}\r\n          <img\r\n            src={searchCompleted ? \"close.png\" : \"searchIcon1.png\"}\r\n            alt=\"Logo\"\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n          />{\" \"}\r\n        </div>\r\n      )}\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\service\\api.js",["395","396","397"],"import axios from 'axios'\r\n// const DEV_BASE = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/';\r\n// const TEST_BASE = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/';\r\n// const PROD_BASE = 'https://aspservices-internal-prod.tfs.toyota.com/asp-services/';\r\n// const STAGE_BASE = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/';\r\nlet url;\r\nlet groundListUrl;\r\nlet tokenUrl;\r\nlet passedVehicleUrl;\r\nlet purchasedVehicleUrl;\r\nlet inspectionAccessoryDetailsUrl;\r\nlet inspectionWheelTiresDetailsUrl;\r\nlet inspectionVehicleDetails;\r\nlet getInspectionDamageDetailsUrl;\r\nlet getOEMBuildDetailsUrl;\r\nlet getDealerActionUrl;\r\nlet getTokenSSO;\r\nlet client_id='3MVG9_I_oWkIqLrmNgl8unCGrAPmcPODjDz6DA7QLw7qbd0CKBqVuyUVp_4.c4xZdRowJUxirUcXgiGiPYaQ.';\r\nlet rrm;\r\nlet AMP;\r\n\r\n\r\n\r\nconst hostname = window.location.hostname;\r\nif (hostname.includes('dev')) {\r\n    url = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getAccountDetailsBykey'\r\n    groundListUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getGroundingList'\r\n    tokenUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/tokenData'\r\n    passedVehicleUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getPassedVehicles'\r\n    purchasedVehicleUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getPurchasedVehicles'\r\n    inspectionAccessoryDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionAccessoryDetails'\r\n    inspectionWheelTiresDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionWheelTiresDetails'\r\n    inspectionVehicleDetails = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getVehicleInspectionDetails'\r\n    getInspectionDamageDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionDamageDetails'\r\n    getOEMBuildDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getOEMBuildDetails'\r\n    getDealerActionUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/DealerAction'\r\n    AMP = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/GetManualPricingList'\r\n    rrm='https://aspservices-internal-dev.tfs.toyota.com/asp-services/RRMApprovalList'\r\n}\r\nelse if (hostname.includes('local')) {\r\n    url = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/getAccountDetailsBykey'\r\n    groundListUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getGroundingList'\r\n    tokenUrl = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/tokenData'\r\n    passedVehicleUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getPassedVehicles'\r\n    purchasedVehicleUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getPurchasedVehicles'\r\n    inspectionAccessoryDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionAccessoryDetails'\r\n    inspectionWheelTiresDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionWheelTiresDetails'\r\n    inspectionVehicleDetails = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getVehicleInspectionDetails'\r\n    getInspectionDamageDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getInspectionDamageDetails'\r\n    getOEMBuildDetailsUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/getOEMBuildDetails'\r\n    getDealerActionUrl = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/DealerAction'\r\n    getTokenSSO = `https://tfs-srm--sdeaug21.lightning.force.com/services/oauth2/authorize?\r\n    client_id=3MVG9lJB4lV8F4Sgt2q5xweJxaNJkT.Eo7pP8V_v9BuuKeRPjY6GPmF9hylp7_oqSOMocQG1Kha4z125UwV8w&\r\n    redirect_uri=https://asp-internal-dev.tfs.toyota.com&response_type=code`\r\n    AMP = 'https://aspservices-internal-dev.tfs.toyota.com/asp-services/GetManualPricingList'\r\n    rrm='https://aspservices-internal-dev.tfs.toyota.com/asp-services/RRMApprovalList'\r\n}\r\nelse if (hostname.includes('stage')) {\r\n    url = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/getAccountDetailsBykey'\r\n    groundListUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getGroundingList'\r\n    tokenUrl = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/tokenData'\r\n    passedVehicleUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getPassedVehicles'\r\n    purchasedVehicleUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getPurchasedVehicles'\r\n    inspectionAccessoryDetailsUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getInspectionAccessoryDetails'\r\n    inspectionWheelTiresDetailsUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getInspectionWheelTiresDetails'\r\n    inspectionVehicleDetails = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getVehicleInspectionDetails'\r\n    getInspectionDamageDetailsUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getInspectionDamageDetails'\r\n    getOEMBuildDetailsUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/getOEMBuildDetails'\r\n    getDealerActionUrl = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/DealerAction'\r\n    AMP = 'https://aspservices-internal-stage.tfs.toyota.com/asp-services/GetManualPricingList'\r\n    rrm='https://aspservices-internal-stage.tfs.toyota.com/asp-services/RRMApprovalList'\r\n}\r\nelse if (hostname.includes('test')) {\r\n    url = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/getAccountDetailsBykey'\r\n    groundListUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getGroundingList'\r\n    tokenUrl = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/tokenData'\r\n    passedVehicleUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getPassedVehicles'\r\n    purchasedVehicleUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getPurchasedVehicles'\r\n    inspectionAccessoryDetailsUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getInspectionAccessoryDetails'\r\n    inspectionWheelTiresDetailsUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getInspectionWheelTiresDetails'\r\n    inspectionVehicleDetails = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getVehicleInspectionDetails'\r\n    getInspectionDamageDetailsUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getInspectionDamageDetails'\r\n    getOEMBuildDetailsUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/getOEMBuildDetails'\r\n    getDealerActionUrl = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/DealerAction'\r\n    AMP = 'https://aspservices-internal-test.tfs.toyota.com/asp-services/GetManualPricingList'\r\n    rrm='https://aspservices-internal-test.tfs.toyota.com/asp-services/RRMApprovalList'\r\n}\r\nelse if (hostname.includes('prod')) {\r\n    url = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/getAccountDetailsBykey'\r\n    groundListUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getGroundingList'\r\n    tokenUrl = 'http://internal-a3e2a8608d24e4c5f8b42aed9c3587d7-2044184104.us-east-1.elb.amazonaws.com/tokenData'\r\n    passedVehicleUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getPassedVehicles'\r\n    purchasedVehicleUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getPurchasedVehicles'\r\n    inspectionAccessoryDetailsUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getInspectionAccessoryDetails'\r\n    inspectionWheelTiresDetailsUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getInspectionWheelTiresDetails'\r\n    inspectionVehicleDetails = 'https://aspservices-internal.tfs.toyota.com/asp-services/getVehicleInspectionDetails'\r\n    getInspectionDamageDetailsUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getInspectionDamageDetails'\r\n    getOEMBuildDetailsUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/getOEMBuildDetails'\r\n    getDealerActionUrl = 'https://aspservices-internal.tfs.toyota.com/asp-services/DealerAction'\r\n    AMP = 'https://aspservices-internal.tfs.toyota.com/asp-services/GetManualPricingList'\r\n    rrm='https://aspservices-internal.tfs.toyota.com/asp-services/RRMApprovalList'\r\n}\r\nexport async function getAuthToken() {\r\n    const options = {\r\n        headers: {\r\n            \"content-type\": 'application/x-www-form-urlencoded'\r\n\r\n        }\r\n\r\n    };\r\n    const requestData = {\r\n        \"grant_type\": \"client_credentials\",\r\n        \"client_id\": \"0oaxox9wq1633Vljm0h7\",\r\n        \"client_secret\": \"SsRgC6iwc6KGxytMZdflK4cO7bxfBSw8LxTJbZVa\",\r\n    }\r\n\r\n    return await axios.post(tokenUrl, requestData, options);\r\n}\r\n\r\nexport async function getVehicleDetails(token, VINumber) {\r\n    const options = {\r\n        headers: {\r\n\r\n            \"Authorization\": token\r\n\r\n        }\r\n\r\n    };\r\n    const requestData = {\r\n        \"LookupKey\": \"FullVINOnly\",\r\n        //\"LookupValue\": \"JM3KFBDM0K1698372\"\r\n        \"LookupValue\": VINumber\r\n    };\r\n    return await axios.post(url, requestData, options);\r\n\r\n}\r\n\r\nexport async function getGroundingList() {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n    const requestData = \"ALL\";\r\n\r\n    return await axios.post(groundListUrl, requestData, options);\r\n\r\n}\r\nexport async function getPassedList() {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n    const requestData = \"ALL\";\r\n\r\n    return await axios.post(passedVehicleUrl, requestData, options);\r\n\r\n}\r\nexport async function getPassedList1() {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n    const requestData = \"ALL\";\r\n\r\n    return await axios.post(passedVehicleUrl, requestData, options);\r\n\r\n}\r\nexport async function getPurchasedList(Data) {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n    const requestData = Data;\r\n\r\n    return await axios.post(purchasedVehicleUrl, requestData, options);\r\n\r\n}\r\nexport async function getInspectionVehicleDetails(vin) {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n\r\n    return await axios.post(`${inspectionVehicleDetails}?vin=${vin}`, options);\r\n\r\n}\r\nexport async function getInspectionWheelTiresDetails(inspectionId) {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n    // const requestData = {\r\n    //     // \"inspectinId\": inspectionId\r\n    //     inspectionId\r\n    // };\r\n\r\n    return await axios.post(inspectionWheelTiresDetailsUrl, inspectionId, options);\r\n\r\n}\r\nexport async function getInspectionAccessoryDetails(vin) {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return await axios.post(`${inspectionAccessoryDetailsUrl}?vin=${vin}`, options);\r\n    \r\n\r\n}\r\n\r\n\r\n//getInspectionDamageDetails\r\n\r\nexport async function getInspectionDamageDetailsApi(inspectionId, vin) {\r\n\r\n    console.log(\"inspectionId\", inspectionId)\r\n    console.log(\"Vin\", vin)\r\n\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return await axios.post(`${getInspectionDamageDetailsUrl}?inpsectionId=${inspectionId}&vin=${vin}`);\r\n}\r\n\r\n\r\nexport async function getOEMBuildDetailsApi(vin) {\r\n\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return await axios.post(`${getOEMBuildDetailsUrl}`, vin);\r\n}\r\n\r\nexport async function postDealerActionPassOnVehicle(VINumber) {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return await axios.post(`${getDealerActionUrl}?dealerAction=Pass&vin=${VINumber}`,  options);\r\n\r\n}\r\nexport async function getAuthTokenSSO() {\r\n    const requestData={\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n       \r\n    return await axios.get(`https://stratus-stg3.mfindealerservices.com/services/oauth2/authorize?client_id=${client_id}&redirect_uri=https://asp-dev.mfindealerservices.com&response_type=code&scope=refresh_token`,requestData);\r\n\r\n}\r\nexport async function getUserInfo(accessToken) {\r\n       \r\n    return await axios.post(`https://stratus-stg3.mfindealerservices.com/services/oauth2/userinfo?access_token=${accessToken}`);\r\n\r\n}\r\nexport async function getAccessTokenEndpoint(code) {\r\n    const requestData = {\r\n        \"code\": code,\r\n        \"grant_type\": \"authorization_code\",\r\n        \"client_id\": \"3MVG9_I_oWkIqLrmNgl8unCGrAPmcPODjDz6DA7QLw7qbd0CKBqVuyUVp_4.c4xZdRowJUxirUcXgiGiPYaQ.\",\r\n        \"client_secret\": \"A8C495709B3F0BD5972D67EAF464949838E2F35EB623E514F75487A18904D70A\",\r\n        \"redirect_uri\":\"https://asp-internal-dev.tfs.toyota.com\",\r\n        \"format\":\"json\",\r\n    }\r\n       \r\n    return await axios.post(`https://stratus-stg3.mfindealerservices.com/services/oauth2/token`,requestData);\r\n\r\n}\r\nexport async function awaitManualPricing() {\r\n    const options = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }\r\n    return await axios.post(AMP,options)\r\n    };\r\n    export async function RRMList() {\r\n        const options = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n        return await axios.post(rrm,options)\r\n        };\r\n\r\n\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SearchText\\Search.js",["398","399","400","401","402","403","404"],"import React, { useState } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst SearchText = (props) => {\r\n  const [search, setSearch] = useState();\r\n  const [searchResults, setSearchResults] = useState();\r\n  const placeholder = props.placeholder;\r\n  const serachBoxEntire = props.searchBox;\r\n  const showSearchLeft = props.showSearchLeft;\r\n  const showSearchRight = props.showSearchRight;\r\n  const searchCompleted = props.searchCompleted;\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <InputBase\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        value={props?.searchValue}\r\n        maxlength=\"18\"\r\n        className=\"searchInput\"\r\n        fullWidth\r\n        onChange={(evt) => props?.editSearchTerm(evt)}\r\n      />\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <IconButton type=\"submit\" aria-label=\"search\">\r\n        <CloseIcon />\r\n      </IconButton>\r\n\r\n      <br></br>\r\n      <div>\r\n        {searchResults?.map((name, index) => (\r\n          <div key={index}>{name}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchText;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Pagination.js",["405","406","407","408","409"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box, FormControl, InputLabel, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    padding: \"5px 26px 5px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 4,\r\n      borderColor: \"#80bdff\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\",\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nfunction Paginator(props) {\r\n  const { label, data, showItemsPerPage, pages, onChangePage } = props;\r\n  const [pageCount, setPageCount] = useState(showItemsPerPage);\r\n  const [totalData, setTotalData] = useState(data);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [skipRecords, setSkipRecords] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setNoOfPages(Math.ceil(totalData.length / pageCount));\r\n    onChangePage(totalData.slice(skipRecords, pageCount));\r\n  }, [pageCount]);\r\n\r\n  const handleChangePageCount = (event) => {\r\n    event.preventDefault();\r\n    event.target && event.target.value && setPageCount(event.target.value);\r\n  };\r\n\r\n  const onChangePageNumber = (event, page) => {\r\n    event.preventDefault();\r\n    let skip = (page - 1) * pageCount;\r\n    setSkipRecords(skip);\r\n    onChangePage(totalData.slice(skip, skip + pageCount));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        p={2}\r\n        className=\"custompagination\"\r\n      >\r\n        <Box pr={2}> {label} </Box>\r\n        <Box pr={2}>\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"demo-customized-select-label\"\r\n              id=\"demo-customized-select\"\r\n              value={pageCount}\r\n              onChange={handleChangePageCount}\r\n              input={<BootstrapInput />}\r\n            >\r\n              {pages &&\r\n                pages.map((menuitem, index) => (\r\n                  <MenuItem key={index} value={menuitem}>\r\n                    {\" \"}\r\n                    {menuitem}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Pagination\r\n          count={noOfPages}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onChange={onChangePageNumber}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginator;\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\StatusHistory.js",[],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\PassOnVehicle.js",["410","411","412","413"],"import React, { useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { postDealerActionPassOnVehicle } from '../service/api'\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function PassOnVehicle(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [noCall, setnoCall] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.close()\r\n    };\r\n\r\n    const handleProceed = () => {\r\n        setOpen(false);\r\n        setnoCall(true);\r\n        props.close()\r\n    };\r\n    useEffect(() => {\r\n        getPassOnDetails();\r\n    }, [noCall]);\r\n\r\n    async function getPassOnDetails() {\r\n        let apiResponse = await postDealerActionPassOnVehicle(props.vin);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"max-width-dialog-title\" open={props.open}>\r\n                <DialogTitle className=\"viewReportHeader\" id=\"customized-dialog-title\" onClose={handleClose} >\r\n                    Pass On vehicle\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent>\r\n\r\n                    <Grid container >\r\n                        <Grid xs={12}>\r\n                            <div className=\"viewReportCenter\">You have passed on Vehicle</div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions className=\"reportFooter\">\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button autoFocus onClick={handleProceed} className=\"closePassBtn\" color=\"secondary\">\r\n                        Proceed\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\Stepper\\VerticalStepper.js",["414","415","416","417"],"import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Block from '@material-ui/icons/Block';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\nconst QontoConnector = withStyles({\r\n    alternativeLabel: {\r\n      top: 10,\r\n      left: 'calc(-50% + 16px)',\r\n      right: 'calc(50% + 16px)',\r\n    },\r\n    active: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    completed: {\r\n      '& $line': {\r\n        borderColor: '#784af4',\r\n      },\r\n    },\r\n    line: {\r\n      borderColor: '#eaeaf0',\r\n      borderTopWidth: 3,\r\n      borderRadius: 1,\r\n    },\r\n  })(StepConnector);\r\n  \r\n  const useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n      color: '#eaeaf0',\r\n      display: 'flex',\r\n      height: 22,\r\n      alignItems: 'center',\r\n    },\r\n    active: {\r\n      color: '#0091ff',\r\n    },\r\n    circle: {\r\n      width: 8,\r\n      height: 8,\r\n      borderRadius: '50%',\r\n      backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n      //color: '#0091ff',\r\n      color: '#c23934',\r\n      zIndex: 1,\r\n      fontSize: 22,\r\n    },\r\n  });\r\n  \r\n  function QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(classes.root, {\r\n          [classes.active]: active,\r\n        })}\r\n      >\r\n        {completed ? <Block className={classes.completed} />: <RadioButtonCheckedIcon />}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  QontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n  };\r\nfunction getSteps() {\r\n    return ['Transportation Ordered', 'Transportation Scheduled', 'Transportation Enroute', 'Vehicle Pick Up'];\r\n}\r\n\r\nexport default function VerticalVehicleStepper() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(2);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {steps.map((label, index) => {\r\n\r\n                    \r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\r\n                        </Step>\r\n                    )\r\n                }\r\n\r\n                )}\r\n            </Stepper>\r\n            {activeStep === steps.length && (\r\n                <Paper square elevation={0} className={classes.resetContainer}>\r\n                    <Typography>All steps completed - you&apos;re finished</Typography>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                        Reset\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\GroundPending\\Carousel.js",["418"],"C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\CustomisedInput.js",["419","420","421"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 550,\r\n        marginRight: '50px'\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n    const classes = useStyles();\r\n    const [searchtext, setSearchtext] = React.useState(\"\");\r\n    console.log(\"searchtext : \",searchtext)\r\n\r\n    const handleSearchText = (value) => {\r\n        setSearchtext(value)\r\n        props.searchdetails(searchtext)\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Search Vehicle By VIN\"\r\n                inputProps={{ 'aria-label': 'search vehicle by VIN' }}\r\n                onChange={(evt) => handleSearchText(evt.target.value)}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\pages\\AdminDetailedReport.js",["422","423","424","425","426","427"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MyGallery from \"./ImageGallery\";\r\nimport { getInspectionVehicleDetails } from \"../service/api\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AdminDetailedReport(props) {\r\n  let groundingDetails = {\r\n    \"Account Number\": \"00000000000\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Customer Return Date\": \"00/00/2021\",\r\n    \"Current Status\": \"Detail\",\r\n    \"Grounding Dealer Number\": \"00000000000\",\r\n    \"Grounding Dealer Name\": \"Dealer Name\",\r\n    \"Grounding Date\": \"00/00/2021\",\r\n    \"Grounding Mileage\": \"000,000 mi\",\r\n    \"Transportation Order Date\": \"00/00/2021\",\r\n    \"Transportation Company\": \"Company Name\",\r\n    \"Bankruptcy Code\": \"Detail\",\r\n    \"Term Code\": \"Detail\",\r\n    \"Dealer Exclusivity Expire Date\": \"00/00/2021\",\r\n    Type: \"Detail\",\r\n    Residual: \"$00,000.00\",\r\n    \"Current Payoff Amount\": \"$00,000.00\",\r\n    \"Grounding Dealer Auction\": \"Detail\",\r\n    \"Total Outstanding Remaining Payments\": \"00\",\r\n    \"Guaranteed Payments\": \"$00,000.00\",\r\n    \"Payment Guarantee\": \"Yes/No\",\r\n    \"10-Day Rule No Charge Amount\": \"$00,000.00\",\r\n    \"Payoff at Grounding\": \"?????\",\r\n    \"Market Based Price\": \"$00,000.00\",\r\n    \"Remaining Payments at Grounding\": \"$00,000.00\",\r\n  };\r\n  let inspectionDetails = {\r\n    \"Inspection Scheduled Date\": `${moment(\r\n      props?.inspectiondata?.inspection_date\r\n    ).format(\"MM/DD/YYYY\")}`,\r\n    \"Inspection Date\": \"00/00/2021\",\r\n    \"Inspection Status\": \"Detail\",\r\n    \"Inspection Mileage\": \"000,000 mi\",\r\n    \"Master Keys Returned\": \"00\",\r\n    \"Value Keys Returned\": \"00\",\r\n    \"Inspection Type\": \"Detail\",\r\n    \"Excess Wear & Tear Amount\": \"$00,000.00\",\r\n  };\r\n\r\n  let purchaseDetails = {\r\n    \"Sold Date\": \"00/00/2021\",\r\n    \"Purchasing Dealer\": \"Dealer Name\",\r\n    \"Purchase Dealer Number\": \"00000000000\",\r\n    \"Purchase Type\": \"Detail\",\r\n    \"Gross Purchase Amount\": \"$00,000.00\",\r\n    \"Purchasing Dealer Legal Name\": \"Detail\",\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n  const [condionVehicleDetails, setCondionVehicleDetails] = useState({});\r\n  const [vin, setvin] = useState(\"JM3KFBDM0K1698372\");\r\n\r\n  console.log(\"admndetailedreport props:\", props);\r\n\r\n  useEffect(() => {\r\n    getConditionVehicleDetails();\r\n  }, [vin]);\r\n\r\n  async function getConditionVehicleDetails() {\r\n    let apiResponse = await getInspectionVehicleDetails(vin);\r\n    console.log(\"getConditionVehicleDetailsresponse\", apiResponse);\r\n    setCondionVehicleDetails(apiResponse.data);\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <div className=\"conditionPageCard\">\r\n      <Grid container spacing={3} className=\"ConditionCardReportSpace\">\r\n        <Grid item xs={5}>\r\n          <MyGallery />\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <div className=\"ConditionReportSection\">\r\n            <div className=\"reportTitle\">\r\n              <span>Year Make Model Color</span>\r\n            </div>\r\n            <span className=\"ConditionReportInspection\">\r\n              <span className=\"BadgeValue\">Inspection Complete</span>\r\n            </span>\r\n          </div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Card className=\"vehicleSectionCR\">\r\n              <Typography variant=\"h6\">Grounding Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(groundingDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n\r\n              <Typography variant=\"h6\">Inspection Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(inspectionDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <Typography variant=\"h6\">Purchase Details</Typography>\r\n              <hr />\r\n              <CardContent>\r\n                {Object.entries(purchaseDetails).map(([key, value]) => {\r\n                  return (\r\n                    <List className=\"paddingCSS\" key={key}>\r\n                      <ListItemText>\r\n                        <span className=\"textStyle\">\r\n                          <span className=\"textBold\"> {key} </span>\r\n                        </span>\r\n                      </ListItemText>\r\n                      <ListItemSecondaryAction>\r\n                        <span className=\"textSize\">{value}</span>\r\n                      </ListItemSecondaryAction>\r\n                    </List>\r\n                  );\r\n                })}\r\n              </CardContent>\r\n              <div className=\"disclaimerVRS\">\r\n                Disclaimer: The parts, equipment, accessories, and other\r\n                information listed above are based on equipment/configuration at\r\n                the time vehicle was sold by Mazda Motor Corporation to a dealer\r\n                and does not mean that this vehicle is still so equipped.\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterMileage.js",["428","429","430","431","432"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterMileage() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilter.js",["433","434","435","436","437"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilter(props) {\r\n  const {\r\n    fetchDataBasedOnSearchValue,\r\n    fetchDataBasedOnFilters,\r\n    resetFilterList,\r\n  } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"CX-5\", text: \"CX-5\" },\r\n    { value: \"MX-5\", text: \"MX-5\" },\r\n    { value: \"Mazda3\", text: \"Mazda3\" },\r\n    { value: \"Mazda6\", text: \"Mazda6\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"Pending\", text: \"Pending\" },\r\n    { value: \"Completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"Texas\", text: \"Texas\" },\r\n    { value: \"Florida\", text: \"Florida\" },\r\n    { value: \"Indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const resetFilterInput = () => {\r\n    setFilterInput({\r\n      vin: \"\",\r\n      yearFrom: \"\",\r\n      yearTo: \"\",\r\n      make: \"\",\r\n      inspectionStatus: \"\",\r\n      inspectionDateFrom: \"\",\r\n      inspectionDateTo: \"\",\r\n      groundingRegion: \"\",\r\n      auctionCode: \"\",\r\n    });\r\n    resetFilterList();\r\n    setState({ ...state, [\"right\"]: false });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button\r\n          autoFocus\r\n          className={classes.cancelButton}\r\n          color=\"primary\"\r\n          onClick={() => resetFilterInput()}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={() => fetchDataBasedOnFilters(filterInput)}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          value={searchtext || \"\"}\r\n          onKeyUp={(evt) => fetchDataBasedOnSearchValue(evt.target.value)}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\adityah\\Testing\\ASP\\ASP\\src\\components\\SwipableFilterRRM.js",["438","439","440","441","442"],"import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ReactComponent as GetImage } from \"../assets/WebFont/filter.svg\";\r\n\r\nconst useStyles = makeStyles({\r\n  inline: {\r\n    display: \"inline-block\",\r\n    marginTop: \"25px\",\r\n  },\r\n  inlineDate: {\r\n    display: \"inline-block\",\r\n    marginTop: \"135px\",\r\n  },\r\n  list: {\r\n    width: 264,\r\n    height: \"100%\",\r\n    paddingBottom: \"64px\",\r\n    position: \"relative\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  filterStyles: {\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  textField: {\r\n    width: \"216px\",\r\n    borderRadius: \"4px\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  updateButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"114px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#ffffff!important\",\r\n    backgroundColor: \"#c23934!important\",\r\n  },\r\n  cancelButton: {\r\n    padding: \"4px 8px\",\r\n    minWidth: \"88px\",\r\n    borderRadius: \"4px\",\r\n    color: \"#0070d2!important\",\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  searchBlock: {\r\n    border: \"solid 1px #dddbda\",\r\n    backgroundColor: \"#ffffff\",\r\n    boxShadow: \"none\",\r\n  },\r\n  customSelect: {\r\n    marginTop: \"24px\",\r\n    color: \"#706e6b\",\r\n    fontSize: \"13px\",\r\n  },\r\n  selectFormControl: {\r\n    width: \"100%\",\r\n  },\r\n  iconButton: {\r\n    padding: \"2px 12px\",\r\n  },\r\n  filter: {\r\n    width: \"24px\",\r\n    fill: \"#706e6b !import\",\r\n    height: \"21.6px\",\r\n    margin: \"0 8px 0 0\",\r\n    padding: \"2.2px 1px\",\r\n  },\r\n  filterInput: {\r\n    height: \"32px\",\r\n  },\r\n  swipeFilterBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0\",\r\n    left: \"0px\",\r\n    padding: \"8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    background: \"#FFF\",\r\n  },\r\n  filterResultText: {\r\n    color: \"#006dcc\",\r\n    fontSize: \"13px\",\r\n    lineHeigt: \"20px\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"lowercase\",\r\n    marginLeft: \"16px\",\r\n  },\r\n});\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    height: \"10px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst SmallInput = withStyles((theme) => ({\r\n  root: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    backgroundColor: \"#ffffff\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    display: \"inline-block\",\r\n    minWidth: \"65px\",\r\n    height: \"10px\",\r\n    marginRight: \"5px\",\r\n    padding: \"10px 12px\",\r\n    \"&:focus\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nexport default function SwipableFilterRRM() {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  const [filterInput, setFilterInput] = useState({\r\n    vin: \"\",\r\n    yearFrom: \"\",\r\n    yearTo: \"\",\r\n    make: \"\",\r\n    inspectionStatus: \"\",\r\n    inspectionDateFrom: \"\",\r\n    inspectionDateTo: \"\",\r\n    groundingRegion: \"\",\r\n    auctionCode: \"\",\r\n  });\r\n  const [makeOptions, setMakeOptions] = useState([\r\n    { value: \"audi\", text: \"Audi\" },\r\n    { value: \"bmw\", text: \"BMW\" },\r\n    { value: \"benz\", text: \"Benz\" },\r\n  ]);\r\n  const [inspectionStatusOptions, setInspectionStatusOptions] = useState([\r\n    { value: \"pending\", text: \"Pending\" },\r\n    { value: \"completed\", text: \"Completed\" },\r\n  ]);\r\n  const [groundingRegionOptions, setGroundingRegionOptions] = useState([\r\n    { value: \"texas\", text: \"Texas\" },\r\n    { value: \"florida\", text: \"Florida\" },\r\n    { value: \"indiana\", text: \"Indiana\" },\r\n  ]);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setFilterInput({\r\n      ...filterInput,\r\n      ...{ [event.target.name]: event.target.value },\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    console.log(filterInput);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(anchor, false)}\r\n      //onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"Filter Options\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"vin-input\">\r\n              VIN\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter full or partial VIN\"\r\n              id=\"vin-input\"\r\n              name=\"vin\"\r\n              value={filterInput.vin}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"year-input\">\r\n              Year Range\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"year-from-input\"\r\n              name=\"yearFrom\"\r\n              value={filterInput.yearFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"year-to-input\"\r\n              name=\"yearTo\"\r\n              value={filterInput.yearTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Make\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"make\"\r\n              value={filterInput.make}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {makeOptions.map((make, index) => (\r\n                <MenuItem value={make.value} key={index}>\r\n                  {make.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Inspection Status\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              variant=\"outlined\"\r\n              displayEmpty\r\n              name=\"inspectionStatus\"\r\n              value={filterInput.inspectionStatus}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {inspectionStatusOptions.map((inspectionStatus, index) => (\r\n                <MenuItem value={inspectionStatus.value} key={index}>\r\n                  {inspectionStatus.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"Inspection-input\">\r\n              Inspection Date\r\n            </InputLabel>\r\n            <SmallInput\r\n              placeholder=\"From\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateFrom\"\r\n              value={filterInput.inspectionDateFrom}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.inline}>\r\n            <SmallInput\r\n              placeholder=\"To\"\r\n              id=\"Inspection-input\"\r\n              name=\"inspectionDateTo\"\r\n              value={filterInput.inspectionDateTo}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl className={classes.selectFormControl}>\r\n            <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n              Grounding Region\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-placeholder-label-label\"\r\n              id=\"demo-simple-select-placeholder-label\"\r\n              className={classes.customSelect}\r\n              displayEmpty\r\n              variant=\"outlined\"\r\n              name=\"groundingRegion\"\r\n              value={filterInput.groundingRegion}\r\n              onChange={handleOnChange}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                Select All that Apply\r\n              </MenuItem>\r\n              {groundingRegionOptions.map((groundingRegion, index) => (\r\n                <MenuItem value={groundingRegion.value} key={index}>\r\n                  {groundingRegion.text}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <FormControl>\r\n            <InputLabel shrink htmlFor=\"auction-code-input\">\r\n              Auction Code\r\n            </InputLabel>\r\n            <BootstrapInput\r\n              placeholder=\"Enter code\"\r\n              id=\"auction-code-input\"\r\n              name=\"auctionCode\"\r\n              value={filterInput.auctionCode}\r\n              onChange={handleOnChange}\r\n            />\r\n          </FormControl>\r\n        </ListItem>\r\n      </List>\r\n      <List className={classes.swipeFilterBtn}>\r\n        <Button autoFocus className={classes.cancelButton} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          autoFocus\r\n          className={classes.updateButton}\r\n          color=\"secondary\"\r\n          onClick={handleOnSubmit}\r\n        >\r\n          Update\r\n        </Button>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const handleSearchText = (value) => {\r\n    setSearchtext(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.filterStyles}>\r\n      <Paper component=\"form\" className={classes.searchBlock}>\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n        <InputBase\r\n          className={classes.filterInput}\r\n          placeholder=\"Search\"\r\n          inputProps={{ \"aria-label\": \"Search\" }}\r\n          onChange={(evt) => handleSearchText(evt.target.value)}\r\n        />\r\n      </Paper>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button\r\n            className={classes.filterResultText}\r\n            onClick={toggleDrawer(anchor, true)}\r\n          >\r\n            <GetImage imagename=\"filter\" className={classes.filter} />\r\n            {\"Filter Results\"}\r\n          </Button>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"443","replacedBy":"444"},{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","severity":1,"message":"448","line":9,"column":10,"nodeType":"449","messageId":"450","endLine":9,"endColumn":18},{"ruleId":"447","severity":1,"message":"451","line":9,"column":20,"nodeType":"449","messageId":"450","endLine":9,"endColumn":29},{"ruleId":"447","severity":1,"message":"452","line":9,"column":43,"nodeType":"449","messageId":"450","endLine":9,"endColumn":52},{"ruleId":"453","severity":1,"message":"454","line":33,"column":47,"nodeType":"455","messageId":"456","endLine":33,"endColumn":52},{"ruleId":"457","severity":1,"message":"458","line":80,"column":5,"nodeType":"459","messageId":"460","endLine":80,"endColumn":19},{"ruleId":"447","severity":1,"message":"461","line":96,"column":9,"nodeType":"449","messageId":"450","endLine":96,"endColumn":14},{"ruleId":"447","severity":1,"message":"462","line":7,"column":8,"nodeType":"449","messageId":"450","endLine":7,"endColumn":18},{"ruleId":"447","severity":1,"message":"463","line":53,"column":9,"nodeType":"449","messageId":"450","endLine":53,"endColumn":16},{"ruleId":"464","severity":1,"message":"465","line":65,"column":6,"nodeType":"466","endLine":65,"endColumn":61,"suggestions":"467"},{"ruleId":"464","severity":1,"message":"468","line":65,"column":7,"nodeType":"469","endLine":65,"endColumn":60},{"ruleId":"447","severity":1,"message":"470","line":6,"column":10,"nodeType":"449","messageId":"450","endLine":6,"endColumn":15},{"ruleId":"447","severity":1,"message":"471","line":2,"column":8,"nodeType":"449","messageId":"450","endLine":2,"endColumn":14},{"ruleId":"447","severity":1,"message":"472","line":6,"column":5,"nodeType":"449","messageId":"450","endLine":6,"endColumn":11},{"ruleId":"447","severity":1,"message":"473","line":11,"column":10,"nodeType":"449","messageId":"450","endLine":11,"endColumn":18},{"ruleId":"464","severity":1,"message":"468","line":19,"column":7,"nodeType":"474","endLine":19,"endColumn":28},{"ruleId":"475","severity":1,"message":"476","line":19,"column":24,"nodeType":"474","messageId":"460","endLine":19,"endColumn":26},{"ruleId":"475","severity":1,"message":"476","line":42,"column":23,"nodeType":"474","messageId":"460","endLine":42,"endColumn":25},{"ruleId":"447","severity":1,"message":"477","line":18,"column":8,"nodeType":"449","messageId":"450","endLine":18,"endColumn":22},{"ruleId":"447","severity":1,"message":"478","line":22,"column":10,"nodeType":"449","messageId":"450","endLine":22,"endColumn":24},{"ruleId":"447","severity":1,"message":"479","line":28,"column":9,"nodeType":"449","messageId":"450","endLine":28,"endColumn":19},{"ruleId":"447","severity":1,"message":"480","line":29,"column":9,"nodeType":"449","messageId":"450","endLine":29,"endColumn":28},{"ruleId":"447","severity":1,"message":"481","line":34,"column":17,"nodeType":"449","messageId":"450","endLine":34,"endColumn":23},{"ruleId":"447","severity":1,"message":"482","line":35,"column":29,"nodeType":"449","messageId":"450","endLine":35,"endColumn":47},{"ruleId":"447","severity":1,"message":"483","line":37,"column":12,"nodeType":"449","messageId":"450","endLine":37,"endColumn":27},{"ruleId":"447","severity":1,"message":"484","line":40,"column":12,"nodeType":"449","messageId":"450","endLine":40,"endColumn":31},{"ruleId":"447","severity":1,"message":"485","line":41,"column":28,"nodeType":"449","messageId":"450","endLine":41,"endColumn":45},{"ruleId":"464","severity":1,"message":"486","line":49,"column":8,"nodeType":"466","endLine":49,"endColumn":13,"suggestions":"487"},{"ruleId":"464","severity":1,"message":"488","line":57,"column":8,"nodeType":"466","endLine":57,"endColumn":10,"suggestions":"489"},{"ruleId":"464","severity":1,"message":"490","line":72,"column":8,"nodeType":"466","endLine":72,"endColumn":22,"suggestions":"491"},{"ruleId":"447","severity":1,"message":"479","line":25,"column":9,"nodeType":"449","messageId":"450","endLine":25,"endColumn":19},{"ruleId":"447","severity":1,"message":"480","line":26,"column":9,"nodeType":"449","messageId":"450","endLine":26,"endColumn":28},{"ruleId":"447","severity":1,"message":"481","line":31,"column":17,"nodeType":"449","messageId":"450","endLine":31,"endColumn":23},{"ruleId":"447","severity":1,"message":"492","line":32,"column":22,"nodeType":"449","messageId":"450","endLine":32,"endColumn":33},{"ruleId":"447","severity":1,"message":"493","line":35,"column":12,"nodeType":"449","messageId":"450","endLine":35,"endColumn":17},{"ruleId":"447","severity":1,"message":"494","line":35,"column":19,"nodeType":"449","messageId":"450","endLine":35,"endColumn":27},{"ruleId":"447","severity":1,"message":"484","line":37,"column":12,"nodeType":"449","messageId":"450","endLine":37,"endColumn":31},{"ruleId":"464","severity":1,"message":"486","line":45,"column":8,"nodeType":"466","endLine":45,"endColumn":13,"suggestions":"495"},{"ruleId":"464","severity":1,"message":"488","line":55,"column":8,"nodeType":"466","endLine":55,"endColumn":10,"suggestions":"496"},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"464","severity":1,"message":"498","line":31,"column":3,"nodeType":"449","endLine":31,"endColumn":12,"suggestions":"499"},{"ruleId":"475","severity":1,"message":"476","line":58,"column":21,"nodeType":"474","messageId":"460","endLine":58,"endColumn":23},{"ruleId":"475","severity":1,"message":"476","line":60,"column":33,"nodeType":"474","messageId":"460","endLine":60,"endColumn":35},{"ruleId":"475","severity":1,"message":"476","line":61,"column":27,"nodeType":"474","messageId":"460","endLine":61,"endColumn":29},{"ruleId":"447","severity":1,"message":"500","line":74,"column":9,"nodeType":"449","messageId":"450","endLine":74,"endColumn":22},{"ruleId":"447","severity":1,"message":"501","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":20},{"ruleId":"447","severity":1,"message":"502","line":78,"column":12,"nodeType":"449","messageId":"450","endLine":78,"endColumn":16},{"ruleId":"447","severity":1,"message":"503","line":78,"column":18,"nodeType":"449","messageId":"450","endLine":78,"endColumn":25},{"ruleId":"475","severity":1,"message":"476","line":85,"column":33,"nodeType":"474","messageId":"460","endLine":85,"endColumn":35},{"ruleId":"464","severity":1,"message":"504","line":91,"column":8,"nodeType":"466","endLine":91,"endColumn":10,"suggestions":"505"},{"ruleId":"475","severity":1,"message":"476","line":120,"column":60,"nodeType":"474","messageId":"460","endLine":120,"endColumn":62},{"ruleId":"447","severity":1,"message":"506","line":693,"column":10,"nodeType":"449","messageId":"450","endLine":693,"endColumn":14},{"ruleId":"447","severity":1,"message":"507","line":695,"column":10,"nodeType":"449","messageId":"450","endLine":695,"endColumn":21},{"ruleId":"447","severity":1,"message":"508","line":696,"column":10,"nodeType":"449","messageId":"450","endLine":696,"endColumn":19},{"ruleId":"447","severity":1,"message":"509","line":698,"column":9,"nodeType":"449","messageId":"450","endLine":698,"endColumn":30},{"ruleId":"447","severity":1,"message":"510","line":701,"column":9,"nodeType":"449","messageId":"450","endLine":701,"endColumn":25},{"ruleId":"447","severity":1,"message":"511","line":705,"column":9,"nodeType":"449","messageId":"450","endLine":705,"endColumn":28},{"ruleId":"512","severity":1,"message":"513","line":802,"column":23,"nodeType":"514","endLine":802,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":814,"column":23,"nodeType":"514","endLine":814,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":826,"column":23,"nodeType":"514","endLine":826,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":838,"column":23,"nodeType":"514","endLine":838,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":850,"column":23,"nodeType":"514","endLine":850,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":862,"column":23,"nodeType":"514","endLine":862,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":874,"column":23,"nodeType":"514","endLine":874,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":886,"column":23,"nodeType":"514","endLine":886,"endColumn":71},{"ruleId":"447","severity":1,"message":"506","line":1006,"column":10,"nodeType":"449","messageId":"450","endLine":1006,"endColumn":14},{"ruleId":"447","severity":1,"message":"515","line":1006,"column":16,"nodeType":"449","messageId":"450","endLine":1006,"endColumn":23},{"ruleId":"512","severity":1,"message":"513","line":1055,"column":23,"nodeType":"514","endLine":1055,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1067,"column":23,"nodeType":"514","endLine":1067,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1079,"column":23,"nodeType":"514","endLine":1079,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1091,"column":23,"nodeType":"514","endLine":1091,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1103,"column":23,"nodeType":"514","endLine":1103,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1115,"column":23,"nodeType":"514","endLine":1115,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1127,"column":23,"nodeType":"514","endLine":1127,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1139,"column":23,"nodeType":"514","endLine":1139,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1151,"column":23,"nodeType":"514","endLine":1151,"endColumn":71},{"ruleId":"512","severity":1,"message":"513","line":1163,"column":23,"nodeType":"514","endLine":1163,"endColumn":71},{"ruleId":"516","severity":1,"message":"517","line":1179,"column":23,"nodeType":"514","endLine":1182,"endColumn":24},{"ruleId":"447","severity":1,"message":"518","line":540,"column":7,"nodeType":"449","messageId":"450","endLine":540,"endColumn":21},{"ruleId":"447","severity":1,"message":"506","line":578,"column":10,"nodeType":"449","messageId":"450","endLine":578,"endColumn":14},{"ruleId":"447","severity":1,"message":"515","line":578,"column":16,"nodeType":"449","messageId":"450","endLine":578,"endColumn":23},{"ruleId":"447","severity":1,"message":"508","line":580,"column":10,"nodeType":"449","messageId":"450","endLine":580,"endColumn":19},{"ruleId":"447","severity":1,"message":"509","line":582,"column":9,"nodeType":"449","messageId":"450","endLine":582,"endColumn":30},{"ruleId":"447","severity":1,"message":"511","line":586,"column":9,"nodeType":"449","messageId":"450","endLine":586,"endColumn":28},{"ruleId":"512","severity":1,"message":"513","line":609,"column":21,"nodeType":"514","endLine":609,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":621,"column":21,"nodeType":"514","endLine":621,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":633,"column":21,"nodeType":"514","endLine":633,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":645,"column":21,"nodeType":"514","endLine":645,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":657,"column":21,"nodeType":"514","endLine":657,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":669,"column":21,"nodeType":"514","endLine":669,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":681,"column":21,"nodeType":"514","endLine":681,"endColumn":69},{"ruleId":"512","severity":1,"message":"513","line":693,"column":21,"nodeType":"514","endLine":693,"endColumn":69},{"ruleId":"447","severity":1,"message":"519","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":15},{"ruleId":"447","severity":1,"message":"520","line":7,"column":8,"nodeType":"449","messageId":"450","endLine":7,"endColumn":16},{"ruleId":"447","severity":1,"message":"521","line":9,"column":8,"nodeType":"449","messageId":"450","endLine":9,"endColumn":22},{"ruleId":"447","severity":1,"message":"522","line":36,"column":12,"nodeType":"449","messageId":"450","endLine":36,"endColumn":22},{"ruleId":"447","severity":1,"message":"523","line":38,"column":11,"nodeType":"449","messageId":"450","endLine":38,"endColumn":27},{"ruleId":"457","severity":1,"message":"524","line":60,"column":5,"nodeType":"459","messageId":"460","endLine":60,"endColumn":18},{"ruleId":"447","severity":1,"message":"525","line":157,"column":9,"nodeType":"449","messageId":"450","endLine":157,"endColumn":27},{"ruleId":"475","severity":1,"message":"476","line":177,"column":21,"nodeType":"474","messageId":"460","endLine":177,"endColumn":23},{"ruleId":"475","severity":1,"message":"476","line":179,"column":33,"nodeType":"474","messageId":"460","endLine":179,"endColumn":35},{"ruleId":"475","severity":1,"message":"476","line":180,"column":27,"nodeType":"474","messageId":"460","endLine":180,"endColumn":29},{"ruleId":"512","severity":1,"message":"513","line":202,"column":9,"nodeType":"514","endLine":207,"endColumn":10},{"ruleId":"512","severity":1,"message":"513","line":267,"column":15,"nodeType":"514","endLine":267,"endColumn":22},{"ruleId":"447","severity":1,"message":"462","line":7,"column":8,"nodeType":"449","messageId":"450","endLine":7,"endColumn":18},{"ruleId":"447","severity":1,"message":"463","line":52,"column":11,"nodeType":"449","messageId":"450","endLine":52,"endColumn":18},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"526","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":17},{"ruleId":"447","severity":1,"message":"527","line":9,"column":8,"nodeType":"449","messageId":"450","endLine":9,"endColumn":18},{"ruleId":"512","severity":1,"message":"513","line":18,"column":7,"nodeType":"514","endLine":21,"endColumn":9},{"ruleId":"447","severity":1,"message":"528","line":3,"column":8,"nodeType":"449","messageId":"450","endLine":3,"endColumn":24},{"ruleId":"447","severity":1,"message":"502","line":22,"column":12,"nodeType":"449","messageId":"450","endLine":22,"endColumn":16},{"ruleId":"447","severity":1,"message":"503","line":22,"column":18,"nodeType":"449","messageId":"450","endLine":22,"endColumn":25},{"ruleId":"447","severity":1,"message":"463","line":23,"column":11,"nodeType":"449","messageId":"450","endLine":23,"endColumn":18},{"ruleId":"447","severity":1,"message":"502","line":66,"column":12,"nodeType":"449","messageId":"450","endLine":66,"endColumn":16},{"ruleId":"447","severity":1,"message":"529","line":68,"column":11,"nodeType":"449","messageId":"450","endLine":68,"endColumn":26},{"ruleId":"447","severity":1,"message":"528","line":3,"column":8,"nodeType":"449","messageId":"450","endLine":3,"endColumn":24},{"ruleId":"447","severity":1,"message":"530","line":9,"column":8,"nodeType":"449","messageId":"450","endLine":9,"endColumn":18},{"ruleId":"447","severity":1,"message":"518","line":31,"column":7,"nodeType":"449","messageId":"450","endLine":31,"endColumn":21},{"ruleId":"447","severity":1,"message":"502","line":52,"column":12,"nodeType":"449","messageId":"450","endLine":52,"endColumn":16},{"ruleId":"447","severity":1,"message":"503","line":52,"column":18,"nodeType":"449","messageId":"450","endLine":52,"endColumn":25},{"ruleId":"447","severity":1,"message":"463","line":53,"column":11,"nodeType":"449","messageId":"450","endLine":53,"endColumn":18},{"ruleId":"447","severity":1,"message":"531","line":54,"column":11,"nodeType":"449","messageId":"450","endLine":54,"endColumn":22},{"ruleId":"447","severity":1,"message":"532","line":57,"column":11,"nodeType":"449","messageId":"450","endLine":57,"endColumn":25},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"497","line":1,"column":17,"nodeType":"449","messageId":"450","endLine":1,"endColumn":25},{"ruleId":"447","severity":1,"message":"528","line":3,"column":8,"nodeType":"449","messageId":"450","endLine":3,"endColumn":24},{"ruleId":"447","severity":1,"message":"533","line":11,"column":8,"nodeType":"449","messageId":"450","endLine":11,"endColumn":13},{"ruleId":"447","severity":1,"message":"534","line":12,"column":8,"nodeType":"449","messageId":"450","endLine":12,"endColumn":18},{"ruleId":"447","severity":1,"message":"535","line":13,"column":8,"nodeType":"449","messageId":"450","endLine":13,"endColumn":18},{"ruleId":"447","severity":1,"message":"502","line":52,"column":10,"nodeType":"449","messageId":"450","endLine":52,"endColumn":14},{"ruleId":"447","severity":1,"message":"503","line":52,"column":16,"nodeType":"449","messageId":"450","endLine":52,"endColumn":23},{"ruleId":"447","severity":1,"message":"463","line":53,"column":9,"nodeType":"449","messageId":"450","endLine":53,"endColumn":16},{"ruleId":"447","severity":1,"message":"531","line":54,"column":9,"nodeType":"449","messageId":"450","endLine":54,"endColumn":20},{"ruleId":"447","severity":1,"message":"536","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":14},{"ruleId":"447","severity":1,"message":"537","line":6,"column":8,"nodeType":"449","messageId":"450","endLine":6,"endColumn":22},{"ruleId":"447","severity":1,"message":"538","line":12,"column":3,"nodeType":"449","messageId":"450","endLine":12,"endColumn":25},{"ruleId":"447","severity":1,"message":"539","line":13,"column":3,"nodeType":"449","messageId":"450","endLine":13,"endColumn":14},{"ruleId":"447","severity":1,"message":"494","line":77,"column":17,"nodeType":"449","messageId":"450","endLine":77,"endColumn":25},{"ruleId":"447","severity":1,"message":"540","line":79,"column":10,"nodeType":"449","messageId":"450","endLine":79,"endColumn":18},{"ruleId":"447","severity":1,"message":"541","line":79,"column":20,"nodeType":"449","messageId":"450","endLine":79,"endColumn":31},{"ruleId":"447","severity":1,"message":"542","line":80,"column":10,"nodeType":"449","messageId":"450","endLine":80,"endColumn":14},{"ruleId":"464","severity":1,"message":"543","line":92,"column":6,"nodeType":"466","endLine":92,"endColumn":13,"suggestions":"544"},{"ruleId":"447","severity":1,"message":"545","line":130,"column":11,"nodeType":"449","messageId":"450","endLine":130,"endColumn":13},{"ruleId":"447","severity":1,"message":"546","line":141,"column":9,"nodeType":"449","messageId":"450","endLine":141,"endColumn":34},{"ruleId":"447","severity":1,"message":"547","line":145,"column":11,"nodeType":"449","messageId":"450","endLine":145,"endColumn":19},{"ruleId":"516","severity":1,"message":"517","line":188,"column":25,"nodeType":"514","endLine":195,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":340,"column":7,"nodeType":"514","endLine":340,"endColumn":60},{"ruleId":"447","severity":1,"message":"548","line":3,"column":8,"nodeType":"449","messageId":"450","endLine":3,"endColumn":14},{"ruleId":"447","severity":1,"message":"537","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":22},{"ruleId":"447","severity":1,"message":"549","line":10,"column":5,"nodeType":"449","messageId":"450","endLine":10,"endColumn":9},{"ruleId":"447","severity":1,"message":"494","line":79,"column":17,"nodeType":"449","messageId":"450","endLine":79,"endColumn":25},{"ruleId":"464","severity":1,"message":"550","line":84,"column":6,"nodeType":"466","endLine":84,"endColumn":13,"suggestions":"551"},{"ruleId":"552","severity":1,"message":"553","line":93,"column":25,"nodeType":"554","messageId":"555","endLine":93,"endColumn":26,"suggestions":"556"},{"ruleId":"464","severity":1,"message":"557","line":102,"column":4,"nodeType":"466","endLine":102,"endColumn":11,"suggestions":"558"},{"ruleId":"512","severity":1,"message":"513","line":234,"column":3,"nodeType":"514","endLine":234,"endColumn":56},{"ruleId":"447","severity":1,"message":"549","line":9,"column":5,"nodeType":"449","messageId":"450","endLine":9,"endColumn":9},{"ruleId":"447","severity":1,"message":"494","line":66,"column":17,"nodeType":"449","messageId":"450","endLine":66,"endColumn":25},{"ruleId":"512","severity":1,"message":"513","line":142,"column":3,"nodeType":"514","endLine":142,"endColumn":56},{"ruleId":"447","severity":1,"message":"559","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":25},{"ruleId":"447","severity":1,"message":"560","line":5,"column":10,"nodeType":"449","messageId":"450","endLine":5,"endColumn":16},{"ruleId":"447","severity":1,"message":"561","line":5,"column":18,"nodeType":"449","messageId":"450","endLine":5,"endColumn":27},{"ruleId":"447","severity":1,"message":"562","line":6,"column":25,"nodeType":"449","messageId":"450","endLine":6,"endColumn":41},{"ruleId":"447","severity":1,"message":"563","line":52,"column":5,"nodeType":"449","messageId":"450","endLine":52,"endColumn":16},{"ruleId":"447","severity":1,"message":"564","line":234,"column":11,"nodeType":"449","messageId":"450","endLine":234,"endColumn":18},{"ruleId":"447","severity":1,"message":"564","line":248,"column":11,"nodeType":"449","messageId":"450","endLine":248,"endColumn":18},{"ruleId":"447","severity":1,"message":"560","line":7,"column":10,"nodeType":"449","messageId":"450","endLine":7,"endColumn":16},{"ruleId":"447","severity":1,"message":"561","line":7,"column":18,"nodeType":"449","messageId":"450","endLine":7,"endColumn":27},{"ruleId":"447","severity":1,"message":"562","line":8,"column":25,"nodeType":"449","messageId":"450","endLine":8,"endColumn":41},{"ruleId":"447","severity":1,"message":"565","line":10,"column":9,"nodeType":"449","messageId":"450","endLine":10,"endColumn":24},{"ruleId":"447","severity":1,"message":"566","line":11,"column":9,"nodeType":"449","messageId":"450","endLine":11,"endColumn":23},{"ruleId":"447","severity":1,"message":"567","line":12,"column":9,"nodeType":"449","messageId":"450","endLine":12,"endColumn":24},{"ruleId":"447","severity":1,"message":"568","line":13,"column":9,"nodeType":"449","messageId":"450","endLine":13,"endColumn":24},{"ruleId":"447","severity":1,"message":"569","line":2,"column":10,"nodeType":"449","messageId":"450","endLine":2,"endColumn":20},{"ruleId":"447","severity":1,"message":"530","line":3,"column":28,"nodeType":"449","messageId":"450","endLine":3,"endColumn":38},{"ruleId":"447","severity":1,"message":"462","line":3,"column":40,"nodeType":"449","messageId":"450","endLine":3,"endColumn":50},{"ruleId":"447","severity":1,"message":"570","line":47,"column":21,"nodeType":"449","messageId":"450","endLine":47,"endColumn":33},{"ruleId":"464","severity":1,"message":"571","line":54,"column":6,"nodeType":"466","endLine":54,"endColumn":17,"suggestions":"572"},{"ruleId":"447","severity":1,"message":"502","line":55,"column":12,"nodeType":"449","messageId":"450","endLine":55,"endColumn":16},{"ruleId":"447","severity":1,"message":"529","line":57,"column":11,"nodeType":"449","messageId":"450","endLine":57,"endColumn":26},{"ruleId":"464","severity":1,"message":"573","line":72,"column":8,"nodeType":"466","endLine":72,"endColumn":16,"suggestions":"574"},{"ruleId":"447","severity":1,"message":"575","line":75,"column":13,"nodeType":"449","messageId":"450","endLine":75,"endColumn":24},{"ruleId":"447","severity":1,"message":"576","line":11,"column":8,"nodeType":"449","messageId":"450","endLine":11,"endColumn":19},{"ruleId":"447","severity":1,"message":"577","line":30,"column":7,"nodeType":"449","messageId":"450","endLine":30,"endColumn":21},{"ruleId":"447","severity":1,"message":"578","line":111,"column":11,"nodeType":"449","messageId":"450","endLine":111,"endColumn":21},{"ruleId":"447","severity":1,"message":"579","line":115,"column":11,"nodeType":"449","messageId":"450","endLine":115,"endColumn":21},{"ruleId":"447","severity":1,"message":"580","line":66,"column":11,"nodeType":"449","messageId":"450","endLine":66,"endColumn":27},{"ruleId":"447","severity":1,"message":"519","line":5,"column":8,"nodeType":"449","messageId":"450","endLine":5,"endColumn":15},{"ruleId":"447","severity":1,"message":"520","line":7,"column":8,"nodeType":"449","messageId":"450","endLine":7,"endColumn":16},{"ruleId":"447","severity":1,"message":"521","line":9,"column":8,"nodeType":"449","messageId":"450","endLine":9,"endColumn":22},{"ruleId":"457","severity":1,"message":"581","line":18,"column":5,"nodeType":"459","messageId":"460","endLine":18,"endColumn":21},{"ruleId":"447","severity":1,"message":"582","line":62,"column":10,"nodeType":"449","messageId":"450","endLine":62,"endColumn":31},{"ruleId":"447","severity":1,"message":"583","line":63,"column":15,"nodeType":"449","messageId":"450","endLine":63,"endColumn":21},{"ruleId":"464","severity":1,"message":"584","line":69,"column":6,"nodeType":"466","endLine":69,"endColumn":11,"suggestions":"585"},{"ruleId":"447","severity":1,"message":"586","line":77,"column":9,"nodeType":"449","messageId":"450","endLine":77,"endColumn":19},{"ruleId":"447","severity":1,"message":"587","line":80,"column":9,"nodeType":"449","messageId":"450","endLine":80,"endColumn":20},{"ruleId":"447","severity":1,"message":"588","line":1,"column":27,"nodeType":"449","messageId":"450","endLine":1,"endColumn":36},{"ruleId":"447","severity":1,"message":"589","line":173,"column":23,"nodeType":"449","messageId":"450","endLine":173,"endColumn":37},{"ruleId":"447","severity":1,"message":"590","line":178,"column":35,"nodeType":"449","messageId":"450","endLine":178,"endColumn":61},{"ruleId":"447","severity":1,"message":"591","line":182,"column":34,"nodeType":"449","messageId":"450","endLine":182,"endColumn":59},{"ruleId":"447","severity":1,"message":"522","line":187,"column":10,"nodeType":"449","messageId":"450","endLine":187,"endColumn":20},{"ruleId":"447","severity":1,"message":"588","line":1,"column":27,"nodeType":"449","messageId":"450","endLine":1,"endColumn":36},{"ruleId":"447","severity":1,"message":"589","line":178,"column":23,"nodeType":"449","messageId":"450","endLine":178,"endColumn":37},{"ruleId":"447","severity":1,"message":"590","line":184,"column":35,"nodeType":"449","messageId":"450","endLine":184,"endColumn":61},{"ruleId":"447","severity":1,"message":"591","line":188,"column":34,"nodeType":"449","messageId":"450","endLine":188,"endColumn":59},{"ruleId":"592","severity":1,"message":"593","line":226,"column":26,"nodeType":"594","messageId":"595","endLine":226,"endColumn":42,"fix":"596"},{"ruleId":"447","severity":1,"message":"588","line":1,"column":27,"nodeType":"449","messageId":"450","endLine":1,"endColumn":36},{"ruleId":"447","severity":1,"message":"589","line":173,"column":23,"nodeType":"449","messageId":"450","endLine":173,"endColumn":37},{"ruleId":"447","severity":1,"message":"590","line":178,"column":35,"nodeType":"449","messageId":"450","endLine":178,"endColumn":61},{"ruleId":"447","severity":1,"message":"591","line":182,"column":34,"nodeType":"449","messageId":"450","endLine":182,"endColumn":59},{"ruleId":"447","severity":1,"message":"522","line":187,"column":10,"nodeType":"449","messageId":"450","endLine":187,"endColumn":20},"no-native-reassign",["597"],"no-negated-in-lhs",["598"],"no-unused-vars","'Grounded' is defined but never used.","Identifier","unusedVar","'Grounded1' is defined but never used.","'Purchased' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-dupe-keys","Duplicate key 'justifyContent'.","ObjectExpression","unexpected","'theme' is assigned a value but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["599"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'Route' is defined but never used.","'Search' is defined but never used.","'styles' is assigned a value but never used.","'isSubmit' is assigned a value but never used.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","'CurrencyFormat' is defined but never used.","'getPassedList1' is defined but never used.","'listOfItem' is assigned a value but never used.","'wheelTyrelistOfItem' is assigned a value but never used.","'setVin' is assigned a value but never used.","'setPurchaseSection' is assigned a value but never used.","'VehicleResponse' is assigned a value but never used.","'OEMBuildDetailsData' is assigned a value but never used.","'setvehicleDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getConditionVehicleDetails', 'getOEMBuildDetails', and 'getVehicleDetails'. Either include them or remove the dependency array.",["600"],"React Hook useEffect has a missing dependency: 'getInspectionDamageDetails'. Either include it or remove the dependency array.",["601"],"React Hook useEffect has a missing dependency: 'vin'. Either include it or remove the dependency array.",["602"],"'setPageName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["603"],["604"],"'useState' is defined but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["605"],"'setSearchData' is assigned a value but never used.","'ListItemIcon' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activeChild'. Either include it or remove the dependency array.",["606"],"'page' is assigned a value but never used.","'vehicleList' is assigned a value but never used.","'pageCount' is assigned a value but never used.","'handleChangePageCount' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'openConditionReport' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setPage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'BootstrapInput' is assigned a value but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'searchtext' is assigned a value but never used.","'handleSearchText' is assigned a value but never used.","Duplicate key 'font-weight'.","'accountInformation' is assigned a value but never used.","'CardMedia' is defined but never used.","'SearchText' is defined but never used.","'TextareaAutosize' is defined but never used.","'handleClickOpen' is assigned a value but never used.","'InputLabel' is defined but never used.","'handleClick' is assigned a value but never used.","'handleOnChange' is assigned a value but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'Link' is defined but never used.","'LinearProgress' is defined but never used.","'getAccessTokenEndpoint' is defined but never used.","'getUserInfo' is defined but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAuthTokenSSO1'. Either include it or remove the dependency array.",["607"],"'d2' is assigned a value but never used.","'getEstimagetTimeRemaining' is assigned a value but never used.","'duration' is assigned a value but never used.","'Button' is defined but never used.","'resp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVehicleDetails'. Either include it or remove the dependency array.",["608"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["609","610"],"React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["611"],"'AiOutlineSearch' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'getTokenSSO' is assigned a value but never used.","'options' is assigned a value but never used.","'serachBoxEntire' is assigned a value but never used.","'showSearchLeft' is assigned a value but never used.","'showSearchRight' is assigned a value but never used.","'searchCompleted' is assigned a value but never used.","'makeStyles' is defined but never used.","'setTotalData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onChangePage', 'skipRecords', and 'totalData'. Either include them or remove the dependency array.",["612"],"React Hook useEffect has a missing dependency: 'getPassOnDetails'. Either include it or remove the dependency array.",["613"],"'apiResponse' is assigned a value but never used.","'CheckCircle' is defined but never used.","'QontoConnector' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'handleStepChange' is assigned a value but never used.","Duplicate key 'Current Status'.","'condionVehicleDetails' is assigned a value but never used.","'setvin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getConditionVehicleDetails'. Either include it or remove the dependency array.",["614"],"'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'useEffect' is defined but never used.","'setMakeOptions' is assigned a value but never used.","'setInspectionStatusOptions' is assigned a value but never used.","'setGroundingRegionOptions' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"615","text":"616"},"no-global-assign","no-unsafe-negation",{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"619","fix":"625"},{"desc":"621","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"messageId":"635","fix":"636","desc":"637"},{"messageId":"638","fix":"639","desc":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},[5729,5738],"\"right\"","Update the dependencies array to be: [props.location.state]",{"range":"649","text":"650"},"Update the dependencies array to be: [getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",{"range":"651","text":"652"},"Update the dependencies array to be: [getInspectionDamageDetails]",{"range":"653","text":"654"},"Update the dependencies array to be: [inspectionId, vin]",{"range":"655","text":"656"},{"range":"657","text":"652"},{"range":"658","text":"654"},"Add dependencies array: []",{"range":"659","text":"660"},"Update the dependencies array to be: [activeChild]",{"range":"661","text":"662"},"Update the dependencies array to be: [getAuthTokenSSO1, value]",{"range":"663","text":"664"},"Update the dependencies array to be: [getVehicleDetails, value]",{"range":"665","text":"666"},"removeEscape",{"range":"667","text":"668"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"669","text":"670"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [getToken, value]",{"range":"671","text":"672"},"Update the dependencies array to be: [onChangePage, pageCount, skipRecords, totalData]",{"range":"673","text":"674"},"Update the dependencies array to be: [getPassOnDetails, noCall]",{"range":"675","text":"676"},"Update the dependencies array to be: [getConditionVehicleDetails, vin]",{"range":"677","text":"678"},[1817,1872],"[props.location.state]",[2832,2837],"[getConditionVehicleDetails, getOEMBuildDetails, getVehicleDetails, vin]",[3070,3072],"[getInspectionDamageDetails]",[3592,3606],"[inspectionId, vin]",[2557,2562],[2800,2802],[1352,1352],", []",[2537,2539],"[activeChild]",[2927,2934],"[getAuthTokenSSO1, value]",[2243,2250],"[getVehicleDetails, value]",[2608,2609],"",[2608,2608],"\\",[2888,2895],"[getToken, value]",[1792,1803],"[onChangePage, pageCount, skipRecords, totalData]",[2287,2295],"[getPassOnDetails, noCall]",[2638,2643],"[getConditionVehicleDetails, vin]"]